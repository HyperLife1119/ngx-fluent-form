var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/CascaderControlOptions.html",[0,0.11,1,0.432]],["body/interfaces/CascaderControlOptions.html",[0,0.208,1,0.639,2,0.43,3,0.337,4,0.337,5,0.294,6,0.215,7,0.178,8,0.215,9,0.382,10,1.16,11,0.928,12,0.253,13,0.507,14,0.994,15,1.226,16,1.046,17,0.747,18,1.235,19,1.215,20,1.072,21,1.013,22,0.645,23,0.957,24,0.039,25,0.75,26,0.877,27,1.15,28,1.063,29,1.013,30,0.97,31,0.97,32,0.772,33,1.415,34,0.806,35,0.659,36,0.702,37,0.702,38,0.702,39,0.659,40,0.64,41,0.935,42,0.294,43,0.829,44,0.829,45,0.337,46,0.481,47,0.702,48,0.593,49,0.593,50,0.43,51,0.994,52,0.43,53,0.481,54,0.43,55,0.725,56,0.481,57,0.43,58,0.634,59,0.481,60,0.43,61,0.715,62,0.429,63,0.492,64,0.581,65,0.581,66,0.581,67,0.639,68,0.492,69,0.581,70,0.581,71,0.581,72,0.581,73,0.581,74,0.581,75,0.702,76,0.628,77,0.43,78,0.43,79,0.905,80,0.481,81,0.867,82,0.805,83,0.702,84,0.702,85,0.507,86,0.702,87,0.558,88,0.829,89,0.628,90,0.702,91,0.628,92,0.481,93,0.481,94,0.702,95,0.702,96,0.481,97,0.628,98,0.702,99,0.294,100,0.558,101,0.481,102,0.43,103,1.013,104,1.013,105,1.046,106,0.337,107,0.382,108,0.481,109,0.912,110,0.481,111,0.702,112,0.558,113,0.481,114,0.702,115,0.702,116,1.019,117,0.382,118,0.481,119,0.481,120,0.481,121,0.481,122,0.481,123,0.481,124,0.481,125,0.481,126,0.702,127,0.829,128,0.702,129,0.702,130,0.702,131,0.829,132,1.046,133,0.481,134,0.481,135,1.013,136,0.829,137,0.659,138,0.656,139,0.481,140,0.639,141,0.481,142,0.702,143,0.912,144,0.702,145,0.507,146,0.481,147,0.481,148,0.481,149,0.382,150,0.558,151,0.481,152,0.481,153,0.481,154,1.094,155,0.815,156,0.742,157,0.959,158,1.072,159,1.072,160,0.481,161,0.702,162,0.481,163,0.481,164,0.492,165,0.481,166,0.481,167,0.43,168,0.558,169,0.702,170,0.481,171,0.481,172,0.337,173,0.021,174,0.021]],["title/interfaces/CheckboxControlOptions.html",[0,0.11,74,0.432]],["body/interfaces/CheckboxControlOptions.html",[0,0.209,1,0.588,2,0.439,3,0.344,4,0.344,5,0.3,6,0.219,7,0.182,8,0.219,9,0.39,10,1.164,11,0.932,12,0.259,13,0.514,14,0.638,15,1.229,16,0.921,17,0.748,18,1.237,19,1.202,20,0.921,21,0.713,22,0.642,23,0.972,24,0.039,25,0.75,26,0.878,27,1.154,28,1.041,29,0.978,30,0.921,31,0.921,32,0.772,33,1.437,34,0.802,35,0.567,36,0.491,37,0.491,38,0.491,39,0.567,40,0.644,41,0.942,42,0.3,43,0.839,44,0.839,45,0.344,46,0.491,47,0.713,48,0.598,49,0.598,50,0.439,51,0.999,52,0.439,53,0.491,54,0.439,55,0.732,56,0.491,57,0.439,58,0.636,59,0.491,60,0.439,61,0.717,62,0.436,63,0.5,64,0.588,65,0.588,66,0.588,67,0.645,68,0.5,69,0.588,70,0.588,71,0.588,72,0.588,73,0.588,74,0.645,75,0.713,76,0.638,77,0.439,78,0.439,79,0.909,80,0.491,81,0.875,82,0.811,83,0.713,84,0.713,85,0.514,86,0.713,87,0.567,88,0.839,89,0.638,90,0.713,91,0.638,92,0.491,93,0.491,94,0.713,95,0.713,96,0.491,97,0.638,98,0.713,99,0.3,100,0.567,101,0.491,102,0.439,103,1.02,104,1.02,105,1.053,106,0.344,107,0.39,108,0.491,109,0.921,110,0.491,111,0.713,112,0.567,113,0.491,114,0.713,115,0.713,116,1.023,117,0.39,118,0.491,119,0.491,120,0.491,121,0.491,122,0.491,123,0.491,124,0.491,125,0.491,126,0.713,127,0.839,128,0.713,129,0.713,130,0.713,131,0.839,132,1.053,133,0.491,134,0.491,135,1.02,136,0.839,137,0.667,138,0.66,139,0.491,140,0.645,141,0.491,142,0.713,143,0.921,144,0.713,145,0.514,146,0.491,147,0.491,148,0.491,149,0.39,150,0.567,151,0.491,152,0.491,153,0.491,154,1.099,155,0.824,156,0.751,157,0.965,158,1.079,159,1.079,160,0.491,161,0.713,162,0.491,163,0.491,164,0.5,165,0.491,166,0.491,167,0.439,168,0.567,169,0.713,170,0.491,171,0.491,172,0.344,173,0.022,174,0.022]],["title/interfaces/DateControlOptions.html",[0,0.11,137,0.49]],["body/interfaces/DateControlOptions.html",[0,0.208,1,0.584,2,0.434,3,0.34,4,0.34,5,0.297,6,0.217,7,0.179,8,0.217,9,0.386,10,1.152,11,0.923,12,0.256,13,0.51,14,0.996,15,1.216,16,1.049,17,0.742,18,1.23,19,1.2,20,0.916,21,0.707,22,0.633,24,0.039,25,0.749,26,0.877,27,1.141,28,1.073,29,1.049,30,0.974,31,0.974,32,0.772,34,0.8,35,0.562,36,0.485,37,0.485,38,0.485,39,0.562,40,0.642,41,0.938,42,0.297,43,0.834,44,0.834,45,0.34,46,0.485,47,0.707,48,0.596,49,0.596,50,0.434,51,0.996,52,0.434,53,0.485,54,0.434,55,0.834,56,0.485,57,0.434,58,0.635,59,0.485,60,0.434,61,0.716,62,0.433,63,0.495,64,0.584,65,0.584,66,0.584,67,0.642,68,0.495,69,0.584,70,0.584,71,0.584,72,0.584,73,0.584,74,0.584,75,0.707,76,0.632,77,0.434,78,0.434,79,0.907,80,0.485,81,0.871,82,0.808,83,0.707,84,0.707,85,0.51,86,0.707,87,0.562,88,0.834,89,0.632,90,0.707,91,0.632,92,0.485,93,0.485,94,0.707,95,0.707,96,0.485,97,0.632,98,0.707,99,0.297,100,0.562,101,0.485,102,0.434,103,1.016,104,1.016,105,1.049,106,0.34,107,0.386,108,0.485,109,0.916,110,0.485,111,0.707,112,0.562,113,0.485,114,0.707,115,0.707,116,1.021,117,0.386,118,0.485,119,0.485,120,0.485,121,0.485,122,0.485,123,0.485,124,0.485,125,0.485,126,0.707,127,0.834,128,0.707,129,0.707,130,0.707,131,0.834,132,1.141,133,0.485,134,0.485,135,1.016,136,0.834,137,0.728,138,0.69,139,0.485,140,0.682,141,0.916,142,0.834,143,1.075,144,1.016,145,0.51,146,0.485,147,0.485,148,0.485,149,0.386,150,0.562,151,0.485,152,0.485,153,0.485,154,1.096,155,0.819,156,0.746,157,0.962,158,1.075,159,1.075,160,0.485,161,0.707,162,0.485,163,0.485,164,0.495,165,0.485,166,0.485,167,0.434,168,0.562,169,0.707,170,0.485,171,0.485,172,0.34,173,0.022,174,0.022]],["title/interfaces/DatePickerControlOptions.html",[0,0.11,67,0.432]],["body/interfaces/DatePickerControlOptions.html",[0,0.209,1,0.588,2,0.439,3,0.344,4,0.344,5,0.3,6,0.219,7,0.181,8,0.219,9,0.39,10,1.164,11,0.931,12,0.259,13,0.513,14,0.823,15,1.228,16,0.921,17,0.748,18,1.231,19,1.217,20,0.921,21,0.712,22,0.638,23,0.972,24,0.039,25,0.75,26,0.878,27,1.154,28,1.041,29,0.978,30,0.921,31,0.921,32,0.773,34,0.809,35,0.566,36,0.49,37,0.49,38,0.49,39,0.566,40,0.644,41,0.941,42,0.3,43,0.839,44,0.839,45,0.344,46,0.49,47,0.712,48,0.598,49,0.598,50,0.439,51,0.998,52,0.439,53,0.49,54,0.439,55,0.732,56,0.49,57,0.439,58,0.636,59,0.49,60,0.439,61,0.717,62,0.436,63,0.499,64,0.588,65,0.588,66,0.588,67,0.685,68,0.499,69,0.588,70,0.588,71,0.588,72,0.588,73,0.588,74,0.588,75,0.712,76,0.637,77,0.439,78,0.439,79,0.909,80,0.49,81,0.874,82,0.811,83,0.712,84,0.712,85,0.513,86,0.712,87,0.566,88,0.839,89,0.637,90,0.712,91,0.637,92,0.49,93,0.49,94,0.712,95,0.712,96,0.49,97,0.637,98,0.712,99,0.3,100,0.566,101,0.49,102,0.439,103,1.02,104,1.02,105,1.053,106,0.344,107,0.39,108,0.49,109,0.921,110,0.49,111,0.712,112,0.566,113,0.49,114,0.712,115,0.712,116,1.023,117,0.39,118,0.49,119,0.49,120,0.49,121,0.49,122,0.49,123,0.49,124,0.49,125,0.49,126,0.712,127,0.839,128,0.712,129,0.712,130,0.712,131,0.839,132,1.053,133,0.49,134,0.49,135,1.02,136,0.839,137,0.667,138,0.66,139,0.49,140,0.645,141,0.49,142,0.712,143,0.921,144,0.712,145,0.513,146,0.49,147,0.49,148,0.49,149,0.39,150,0.566,151,0.49,152,0.49,153,0.49,154,1.099,155,0.823,156,0.75,157,0.964,158,1.078,159,1.078,160,0.49,161,0.712,162,0.49,163,0.49,164,0.499,165,0.49,166,0.49,167,0.439,168,0.566,169,0.712,170,0.49,171,0.49,172,0.344,173,0.022,174,0.022]],["title/interfaces/EmbeddedFormOptions.html",[0,0.11,63,0.432]],["body/interfaces/EmbeddedFormOptions.html",[0,0.209,1,0.59,2,0.442,3,0.346,4,0.346,5,0.302,6,0.221,7,0.183,8,0.221,9,0.392,10,1.165,11,0.932,12,0.26,13,0.515,15,1.218,16,0.924,17,0.749,18,1.232,19,1.203,20,0.924,21,0.716,22,0.636,24,0.039,25,0.749,26,0.878,27,1.145,28,1.042,29,0.98,30,0.924,31,0.924,32,0.773,34,0.802,35,0.569,36,0.494,37,0.494,38,0.494,39,0.569,40,0.645,41,0.943,42,0.302,43,0.842,44,0.842,45,0.346,46,0.494,47,0.716,48,0.6,49,0.6,50,0.442,51,1,52,0.442,53,0.494,54,0.442,55,0.734,56,0.494,57,0.442,58,0.636,59,0.494,60,0.442,61,0.718,62,0.565,63,0.59,64,0.59,65,0.59,66,0.59,67,0.647,68,0.502,69,0.59,70,0.59,71,0.59,72,0.59,73,0.59,74,0.59,75,0.716,76,0.64,77,0.442,78,0.442,79,0.91,80,0.494,81,0.877,82,0.813,83,0.716,84,0.716,85,0.565,86,0.716,87,0.569,88,0.842,89,0.64,90,0.716,91,0.64,92,0.494,93,0.494,94,0.716,95,0.716,96,0.494,97,0.64,98,0.716,99,0.302,100,0.813,101,0.716,102,0.442,103,1.022,104,1.022,105,1.055,106,0.346,107,0.392,108,0.494,109,0.924,110,0.494,111,0.716,112,0.569,113,0.494,114,0.716,115,0.716,116,1.024,117,0.392,118,0.494,119,0.494,120,0.494,121,0.494,122,0.494,123,0.494,124,0.494,125,0.494,126,0.716,127,0.842,128,0.716,129,0.716,130,0.716,131,0.842,132,1.055,133,0.494,134,0.494,135,1.022,136,0.842,137,0.669,138,0.661,139,0.494,140,0.647,141,0.494,142,0.716,143,0.924,144,0.716,145,0.515,146,0.494,147,0.494,148,0.494,149,0.392,150,0.569,151,0.494,152,0.494,153,0.494,154,1.101,155,0.826,156,0.753,157,0.966,158,1.08,159,1.08,160,0.494,161,0.716,162,0.494,163,0.494,164,0.502,165,0.494,166,0.494,167,0.442,168,0.569,169,0.716,170,0.494,171,0.494,172,0.346,173,0.022,174,0.022]],["title/components/FluentFormComponent.html",[175,1.697,176,1.697]],["body/components/FluentFormComponent.html",[3,0.33,4,0.33,5,0.288,6,0.549,7,0.461,8,0.549,12,0.248,13,0.423,14,1.002,17,0.701,22,0.635,24,0.039,25,0.501,26,0.87,28,0.807,32,0.423,40,0.636,41,0.86,42,0.288,45,0.33,48,0.501,49,0.423,51,0.929,52,0.421,55,0.651,58,0.476,61,0.288,62,0.725,79,0.826,82,0.826,85,0.717,87,0.651,91,0.421,97,0.421,99,0.501,100,0.931,106,0.33,112,0.374,116,1.054,138,0.615,140,0.33,145,0.501,149,0.374,156,0.899,164,0.33,172,0.484,173,0.021,174,0.021,175,2.254,176,2.766,177,3.419,178,2.328,179,2.328,180,2.328,181,1.921,182,2.822,183,4.053,184,2.328,185,2.822,186,2.429,187,2.879,188,2.429,189,2.879,190,2.429,191,2.79,192,4.053,193,3.419,194,4.053,195,3.419,196,3.419,197,6.043,198,4.053,199,4.053,200,4.053,201,4.053,202,2.822,203,3.419,204,3.419,205,3.419,206,3.419,207,4.467,208,4.467,209,4.467,210,4.467,211,3.419,212,3.419,213,3.419,214,3.419,215,3.419,216,4.053,217,4.053,218,4.053,219,4.053,220,2.822,221,4.053,222,4.053,223,3.419,224,4.443,225,2.328,226,2.328,227,2.229,228,5.01,229,3.419,230,4.58,231,3.419,232,4.517,233,4.106,234,2.328,235,2.328,236,2.328,237,3.419,238,2.328,239,5.141,240,2.328,241,3.419,242,5.799,243,2.328,244,4.72,245,3.419,246,2.328,247,3.419,248,2.328,249,3.419,250,4.72,251,2.328,252,2.328,253,2.328,254,2.328,255,2.328,256,3.419,257,2.328,258,1.921,259,3.419,260,2.328,261,4.053,262,3.419,263,2.328,264,3.419,265,2.328,266,2.328,267,2.328,268,3.928,269,3.888,270,2.328,271,2.328,272,2.328,273,2.328,274,2.328,275,2.328,276,2.328,277,2.328,278,2.328,279,2.328,280,3.419,281,3.419,282,3.419,283,1.921,284,2.328,285,2.328,286,1.921,287,2.328,288,1.921,289,1.454,290,3.653,291,3.419,292,3.419,293,2.328,294,2.328,295,3.419,296,2.328,297,2.328,298,2.328,299,2.328,300,2.328,301,2.328,302,2.328,303,2.328,304,2.328,305,4.467,306,3.419,307,2.328,308,2.328,309,3.419,310,2.328,311,2.328,312,2.328,313,2.328,314,4.974,315,4.053,316,4.467,317,2.328,318,2.328,319,2.328,320,3.419,321,2.328,322,3.419,323,2.328,324,5.382,325,2.328,326,1.921,327,1.921,328,2.328,329,2.328,330,2.328,331,2.328,332,2.328,333,2.328,334,4.053,335,4.758,336,4.053,337,4.053,338,2.328,339,2.328,340,2.328,341,2.328,342,4.053,343,4.053,344,3.419,345,3.419,346,3.419,347,3.419,348,2.328,349,2.328,350,2.328,351,2.328,352,3.419,353,2.328,354,2.328,355,2.328,356,2.328,357,2.328,358,2.328,359,2.328,360,2.328,361,2.328,362,2.328,363,2.328,364,3.419,365,4.467,366,2.328,367,2.328,368,5.141,369,2.328,370,2.328,371,3.419,372,2.328,373,2.328,374,2.328,375,2.328,376,2.328,377,2.328,378,3.419,379,3.419,380,2.328,381,4.467,382,2.328,383,2.328,384,2.328]],["title/injectables/FluentFormControlNamePipe.html",[227,1.523,385,1.906]],["body/injectables/FluentFormControlNamePipe.html",[3,0.654,4,0.654,5,0.571,6,0.486,7,0.402,8,0.486,12,0.492,14,0.835,17,0.665,22,0.492,24,0.039,25,0.571,26,0.762,32,0.754,40,0.571,42,0.571,61,0.571,173,0.033,174,0.033,182,3.814,202,4.441,227,2.685,228,3.814,230,3.814,244,3.814,289,2.886,290,3.283,385,3.361,386,4.62,387,3.814,388,5.38,389,5.38,390,4.62,391,3.823,392,5.38,393,4.62,394,4.62]],["title/modules/FluentFormModule.html",[395,2.168,396,1.697]],["body/modules/FluentFormModule.html",[3,0.557,4,0.557,5,0.486,6,0.355,7,0.397,8,0.355,24,0.039,40,0.77,42,0.486,45,0.557,48,0.761,49,0.761,50,0.711,54,0.711,55,0.784,57,0.883,58,0.419,60,0.711,61,0.486,173,0.03,174,0.03,176,3.464,185,4.032,186,3.774,187,3.774,188,3.774,189,3.774,190,4.058,191,3.568,227,3.001,283,3.248,288,3.248,289,2.458,396,3.385,397,2.796,398,3.051,399,3.248,400,3.935,401,3.248,402,3.248,403,3.248,404,4.032,405,3.248,406,2.796,407,3.935,408,4.885,409,4.885,410,4.885,411,3.248,412,4.032,413,4.885,414,4.885,415,3.935,416,4.885,417,4.885,418,4.885,419,4.885,420,3.935,421,4.885,422,3.935,423,4.885,424,4.885,425,4.885,426,3.935,427,4.885,428,4.885,429,3.935,430,4.885,431,3.935,432,4.885,433,3.935,434,4.885,435,3.935,436,3.935,437,3.248]],["title/interfaces/FormControlOptions.html",[0,0.11,11,0.49]],["body/interfaces/FormControlOptions.html",[0,0.207,1,0.574,2,0.421,3,0.33,4,0.33,5,0.288,6,0.21,7,0.174,8,0.21,9,0.374,10,1.146,11,0.925,12,0.248,13,0.501,14,1.033,15,1.212,16,0.903,17,0.747,18,1.226,19,1.196,20,0.903,21,0.692,22,0.65,24,0.039,25,0.759,26,0.875,27,1.134,28,1.06,29,0.962,30,0.903,31,0.903,32,0.773,33,1.394,34,0.795,35,0.55,36,0.471,37,0.471,38,0.471,39,0.55,40,0.636,41,0.929,42,0.288,43,1.039,44,1.039,45,0.33,46,0.471,47,0.692,48,0.588,49,0.588,50,0.421,51,0.989,52,0.421,53,0.471,54,0.421,55,0.718,56,0.471,57,0.421,58,0.637,59,0.471,60,0.421,61,0.712,62,0.423,63,0.485,64,0.574,65,0.574,66,0.574,67,0.633,68,0.485,69,0.574,70,0.574,71,0.574,72,0.574,73,0.574,74,0.574,75,0.82,76,0.899,77,0.618,78,0.618,79,0.931,80,0.692,81,0.973,82,0.799,83,0.692,84,0.692,85,0.501,86,0.692,87,0.55,88,1.039,89,0.733,90,0.82,91,0.86,92,0.692,93,0.692,94,0.962,95,1.006,96,0.692,97,0.733,98,0.962,99,0.288,100,0.55,101,0.471,102,0.421,103,1.006,104,1.006,105,1.039,106,0.33,107,0.374,108,0.471,109,0.903,110,0.471,111,0.692,112,0.55,113,0.471,114,0.692,115,0.692,116,1.014,117,0.374,118,0.471,119,0.471,120,0.471,121,0.471,122,0.471,123,0.471,124,0.471,125,0.471,126,0.692,127,0.82,128,0.692,129,0.692,130,0.692,131,0.82,132,1.039,133,0.471,134,0.471,135,1.006,136,0.82,137,0.651,138,0.652,139,0.471,140,0.633,141,0.471,142,0.692,143,0.903,144,0.692,145,0.501,146,0.471,147,0.471,148,0.471,149,0.374,150,0.55,151,0.471,152,0.471,153,0.471,154,1.088,155,0.808,156,0.733,157,0.953,158,1.066,159,1.066,160,0.471,161,0.692,162,0.471,163,0.471,164,0.485,165,0.471,166,0.471,167,0.421,168,0.55,169,0.692,170,0.471,171,0.471,172,0.33,173,0.021,174,0.021]],["title/interfaces/InputControlOptions.html",[0,0.11,64,0.432]],["body/interfaces/InputControlOptions.html",[0,0.208,1,0.577,2,0.424,3,0.332,4,0.332,5,0.29,6,0.212,7,0.175,8,0.212,9,0.377,10,1.157,11,0.926,12,0.25,13,0.504,14,1.016,15,1.225,16,0.906,17,0.746,18,1.227,19,1.213,20,0.906,21,0.695,22,0.649,23,0.948,24,0.039,25,0.748,26,0.876,27,1.147,28,1.035,29,0.965,30,0.906,31,0.906,32,0.773,33,1.827,34,0.817,35,0.553,36,0.474,37,0.474,38,0.474,39,0.553,40,0.637,41,1.004,42,0.29,43,0.823,44,0.823,45,0.332,46,0.474,47,0.695,48,0.59,49,0.59,50,0.424,51,0.991,52,0.424,53,0.474,54,0.424,55,0.72,56,0.474,57,0.424,58,0.633,59,0.474,60,0.424,61,0.713,62,0.425,63,0.487,64,0.635,65,0.577,66,0.577,67,0.635,68,0.487,69,0.577,70,0.577,71,0.577,72,0.577,73,0.577,74,0.577,75,0.695,76,0.622,77,0.424,78,0.424,79,0.92,80,0.474,81,0.863,82,0.881,83,0.695,84,0.695,85,0.504,86,0.695,87,0.553,88,0.823,89,0.622,90,0.695,91,0.622,92,0.474,93,0.474,94,0.695,95,0.695,96,0.474,97,0.622,98,0.695,99,0.29,100,0.553,101,0.474,102,0.424,103,1.008,104,1.008,105,1.042,106,0.577,107,0.654,108,0.695,109,1.068,110,0.906,111,0.695,112,0.553,113,0.695,114,1.008,115,1.008,116,1.016,117,0.377,118,0.474,119,0.474,120,0.474,121,0.474,122,0.474,123,0.474,124,0.474,125,0.474,126,0.695,127,0.823,128,0.695,129,0.695,130,0.695,131,0.823,132,1.042,133,0.474,134,0.474,135,1.008,136,0.823,137,0.654,138,0.654,139,0.474,140,0.635,141,0.474,142,0.695,143,0.906,144,0.695,145,0.504,146,0.474,147,0.474,148,0.474,149,0.377,150,0.553,151,0.474,152,0.474,153,0.474,154,1.09,155,0.81,156,0.736,157,0.955,158,1.068,159,1.068,160,0.474,161,0.695,162,0.474,163,0.474,164,0.487,165,0.474,166,0.474,167,0.424,168,0.553,169,0.695,170,0.474,171,0.474,172,0.332,173,0.021,174,0.021]],["title/interfaces/NumberInputControlOptions.html",[0,0.11,66,0.432]],["body/interfaces/NumberInputControlOptions.html",[0,0.208,1,0.58,2,0.428,3,0.335,4,0.335,5,0.293,6,0.214,7,0.177,8,0.214,9,0.38,10,1.159,11,0.928,12,0.252,13,0.506,14,1.036,15,1.226,16,0.91,17,0.747,18,1.228,19,1.214,20,0.91,21,0.7,22,0.643,23,0.954,24,0.039,25,0.748,26,0.878,27,1.149,28,1.036,29,0.968,30,0.91,31,0.91,32,0.772,34,0.805,35,0.556,36,0.479,37,0.479,38,0.479,39,0.556,40,0.639,41,0.934,42,0.293,43,0.827,44,0.827,45,0.335,46,0.479,47,0.7,48,0.592,49,0.592,50,0.428,51,0.993,52,0.428,53,0.479,54,0.428,55,0.723,56,0.479,57,0.428,58,0.648,59,0.479,60,0.428,61,0.714,62,0.428,63,0.49,64,0.58,65,0.58,66,0.638,67,0.638,68,0.49,69,0.58,70,0.58,71,0.58,72,0.58,73,0.58,74,0.58,75,0.7,76,0.626,77,0.428,78,0.428,79,0.904,80,0.479,81,0.866,82,0.804,83,0.7,84,0.7,85,0.506,86,0.7,87,0.556,88,0.827,89,0.626,90,0.7,91,0.626,92,0.479,93,0.479,94,0.7,95,0.7,96,0.479,97,0.626,98,0.7,99,0.293,100,0.556,101,0.479,102,0.428,103,1.011,104,1.011,105,1.045,106,0.335,107,0.38,108,0.479,109,0.91,110,0.479,111,0.7,112,0.556,113,0.479,114,0.7,115,0.7,116,1.018,117,0.38,118,0.479,119,0.479,120,0.479,121,0.479,122,0.479,123,0.479,124,0.479,125,0.479,126,0.827,127,1.011,128,0.827,129,0.968,130,0.91,131,1.071,132,1.071,133,0.91,134,0.479,135,1.11,136,0.91,137,0.657,138,0.655,139,0.479,140,0.638,141,0.479,142,0.7,143,0.91,144,0.7,145,0.506,146,0.479,147,0.479,148,0.479,149,0.38,150,0.556,151,0.479,152,0.479,153,0.479,154,1.092,155,0.814,156,0.74,157,0.958,158,1.071,159,1.071,160,0.479,161,0.7,162,0.479,163,0.479,164,0.49,165,0.479,166,0.479,167,0.428,168,0.556,169,0.7,170,0.479,171,0.479,172,0.335,173,0.021,174,0.021]],["title/interfaces/RadioControlOptions.html",[0,0.11,73,0.432]],["body/interfaces/RadioControlOptions.html",[0,0.209,1,0.586,2,0.436,3,0.341,4,0.341,5,0.298,6,0.218,7,0.18,8,0.218,9,0.387,10,1.162,11,0.93,12,0.257,13,0.511,14,0.821,15,1.228,16,0.918,17,0.748,18,1.236,19,1.201,20,0.918,21,0.709,22,0.643,23,0.967,24,0.039,25,0.751,26,0.878,27,1.153,28,1.039,29,0.975,30,0.918,31,0.918,32,0.772,33,1.429,34,0.8,35,0.563,36,0.487,37,0.487,38,0.487,39,0.563,40,0.643,41,0.939,42,0.298,43,0.836,44,0.836,45,0.341,46,0.487,47,0.709,48,0.597,49,0.597,50,0.436,51,0.997,52,0.436,53,0.487,54,0.436,55,0.729,56,0.487,57,0.436,58,0.635,59,0.487,60,0.436,61,0.716,62,0.434,63,0.497,64,0.586,65,0.586,66,0.586,67,0.643,68,0.497,69,0.586,70,0.586,71,0.586,72,0.586,73,0.643,74,0.586,75,0.709,76,0.634,77,0.436,78,0.436,79,0.908,80,0.487,81,0.872,82,0.809,83,0.709,84,0.709,85,0.511,86,0.709,87,0.563,88,0.836,89,0.634,90,0.709,91,0.634,92,0.487,93,0.487,94,0.709,95,0.709,96,0.487,97,0.634,98,0.709,99,0.298,100,0.563,101,0.487,102,0.436,103,1.018,104,1.018,105,1.05,106,0.341,107,0.387,108,0.487,109,0.918,110,0.487,111,0.709,112,0.563,113,0.487,114,0.709,115,0.709,116,1.021,117,0.387,118,0.487,119,0.487,120,0.487,121,0.487,122,0.487,123,0.487,124,0.487,125,0.487,126,0.709,127,0.836,128,0.709,129,0.709,130,0.709,131,0.836,132,1.05,133,0.487,134,0.487,135,1.018,136,0.836,137,0.664,138,0.658,139,0.487,140,0.643,141,0.487,142,0.709,143,0.918,144,0.709,145,0.511,146,0.487,147,0.487,148,0.487,149,0.387,150,0.563,151,0.487,152,0.487,153,0.487,154,1.097,155,0.821,156,0.747,157,0.963,158,1.076,159,1.076,160,0.487,161,0.709,162,0.487,163,0.487,164,0.497,165,0.487,166,0.487,167,0.436,168,0.664,169,1.018,170,0.836,171,0.836,172,0.341,173,0.022,174,0.022]],["title/interfaces/RangePickerControlOptions.html",[0,0.11,68,0.432]],["body/interfaces/RangePickerControlOptions.html",[0,0.209,1,0.587,2,0.438,3,0.343,4,0.343,5,0.299,6,0.219,7,0.181,8,0.219,9,0.389,10,1.163,11,0.931,12,0.258,13,0.513,14,0.823,15,1.228,16,0.92,17,0.748,18,1.231,19,1.217,20,0.92,21,0.711,22,0.638,23,0.97,24,0.039,25,0.75,26,0.878,27,1.154,28,1.04,29,0.977,30,0.92,31,0.92,32,0.774,34,0.809,35,0.565,36,0.49,37,0.49,38,0.49,39,0.565,40,0.644,41,0.941,42,0.299,43,0.838,44,0.838,45,0.343,46,0.49,47,0.711,48,0.598,49,0.598,50,0.438,51,0.998,52,0.438,53,0.49,54,0.438,55,0.731,56,0.49,57,0.438,58,0.636,59,0.49,60,0.438,61,0.717,62,0.435,63,0.499,64,0.587,65,0.587,66,0.587,67,0.645,68,0.587,69,0.587,70,0.587,71,0.587,72,0.587,73,0.587,74,0.587,75,0.711,76,0.636,77,0.438,78,0.438,79,0.909,80,0.49,81,0.874,82,0.81,83,0.711,84,0.711,85,0.513,86,0.711,87,0.565,88,0.838,89,0.636,90,0.711,91,0.636,92,0.49,93,0.49,94,0.711,95,0.711,96,0.49,97,0.636,98,0.711,99,0.299,100,0.565,101,0.49,102,0.438,103,1.019,104,1.019,105,1.052,106,0.343,107,0.389,108,0.49,109,0.92,110,0.49,111,0.711,112,0.565,113,0.49,114,0.711,115,0.711,116,1.022,117,0.389,118,0.49,119,0.49,120,0.49,121,0.49,122,0.49,123,0.49,124,0.49,125,0.49,126,0.711,127,0.838,128,0.711,129,0.711,130,0.711,131,0.838,132,1.052,133,0.49,134,0.49,135,1.019,136,0.838,137,0.666,138,0.659,139,0.49,140,0.645,141,0.49,142,0.711,143,0.92,144,0.711,145,0.513,146,0.49,147,0.49,148,0.49,149,0.389,150,0.565,151,0.49,152,0.49,153,0.49,154,1.099,155,0.823,156,0.749,157,0.964,158,1.078,159,1.078,160,0.49,161,0.711,162,0.49,163,0.49,164,0.499,165,0.49,166,0.49,167,0.438,168,0.565,169,0.711,170,0.49,171,0.49,172,0.343,173,0.022,174,0.022]],["title/interfaces/SelectControlOptions.html",[0,0.11,71,0.432]],["body/interfaces/SelectControlOptions.html",[0,0.208,1,0.58,2,0.428,3,0.336,4,0.336,5,0.293,6,0.214,7,0.177,8,0.214,9,0.381,10,1.159,11,0.928,12,0.252,13,0.506,14,1.018,15,1.226,16,1.045,17,0.747,18,1.235,19,1.214,20,1.071,21,0.7,22,0.646,23,0.955,24,0.039,25,0.75,26,0.877,27,1.149,28,1.062,29,1.012,30,0.968,31,0.968,32,0.772,33,1.411,34,0.805,35,0.658,36,0.479,37,0.479,38,0.479,39,0.556,40,0.639,41,0.934,42,0.293,43,0.827,44,0.827,45,0.336,46,0.479,47,0.7,48,0.592,49,0.592,50,0.428,51,0.993,52,0.428,53,0.479,54,0.428,55,0.723,56,0.479,57,0.428,58,0.638,59,0.479,60,0.428,61,0.714,62,0.428,63,0.491,64,0.58,65,0.58,66,0.58,67,0.638,68,0.491,69,0.58,70,0.58,71,0.638,72,0.58,73,0.58,74,0.58,75,0.7,76,0.626,77,0.428,78,0.428,79,0.905,80,0.479,81,0.866,82,0.804,83,0.7,84,0.7,85,0.506,86,0.7,87,0.556,88,0.827,89,0.626,90,0.7,91,0.626,92,0.479,93,0.479,94,0.7,95,0.7,96,0.479,97,0.626,98,0.7,99,0.293,100,0.556,101,0.479,102,0.428,103,1.012,104,1.012,105,1.045,106,0.336,107,0.381,108,0.479,109,0.91,110,0.479,111,0.7,112,0.556,113,0.479,114,0.7,115,0.7,116,1.018,117,0.381,118,0.479,119,0.479,120,0.479,121,0.479,122,0.479,123,0.479,124,0.479,125,0.479,126,0.7,127,0.91,128,0.7,129,0.7,130,0.7,131,0.827,132,1.125,133,0.479,134,0.479,135,1.012,136,0.827,137,0.658,138,0.655,139,0.479,140,0.638,141,0.479,142,0.7,143,0.91,144,0.7,145,0.506,146,0.479,147,0.479,148,0.479,149,0.381,150,0.658,151,0.479,152,0.7,153,0.91,154,1.093,155,0.814,156,0.74,157,0.958,158,1.071,159,1.071,160,0.479,161,0.7,162,0.479,163,0.479,164,0.491,165,0.479,166,0.479,167,0.428,168,0.556,169,0.7,170,0.479,171,0.479,172,0.336,173,0.021,174,0.021]],["title/interfaces/SliderControlOptions.html",[0,0.11,72,0.432]],["body/interfaces/SliderControlOptions.html",[0,0.208,1,0.579,2,0.427,3,0.334,4,0.334,5,0.292,6,0.213,7,0.177,8,0.213,9,0.379,10,1.158,11,0.927,12,0.252,13,0.505,14,1.036,15,1.225,16,0.909,17,0.746,18,1.228,19,1.214,20,0.909,21,0.698,22,0.645,23,0.952,24,0.039,25,0.748,26,0.878,27,1.149,28,1.062,29,0.967,30,0.909,31,0.909,32,0.771,34,0.805,35,0.555,36,0.477,37,0.477,38,0.477,39,0.555,40,0.639,41,0.933,42,0.292,43,0.826,44,0.826,45,0.334,46,0.477,47,0.698,48,0.592,49,0.592,50,0.427,51,0.992,52,0.427,53,0.477,54,0.427,55,0.722,56,0.477,57,0.427,58,0.645,59,0.477,60,0.427,61,0.714,62,0.427,63,0.489,64,0.579,65,0.579,66,0.579,67,0.637,68,0.489,69,0.579,70,0.579,71,0.579,72,0.637,73,0.579,74,0.579,75,0.698,76,0.625,77,0.427,78,0.427,79,0.904,80,0.477,81,0.865,82,0.803,83,0.698,84,0.698,85,0.505,86,0.698,87,0.555,88,0.826,89,0.625,90,0.698,91,0.625,92,0.477,93,0.477,94,0.698,95,0.698,96,0.477,97,0.625,98,0.698,99,0.292,100,0.555,101,0.477,102,0.427,103,1.01,104,1.01,105,1.092,106,0.334,107,0.379,108,0.477,109,0.909,110,0.477,111,0.698,112,0.555,113,0.477,114,0.698,115,0.698,116,1.017,117,0.379,118,0.477,119,0.477,120,0.477,121,0.477,122,0.477,123,0.477,124,0.477,125,0.477,126,0.826,127,1.01,128,0.826,129,0.967,130,0.698,131,0.826,132,1.07,133,0.477,134,0.477,135,1.11,136,0.909,137,0.656,138,0.655,139,0.477,140,0.637,141,0.477,142,0.698,143,0.909,144,0.698,145,0.639,146,0.477,147,0.477,148,0.477,149,0.379,150,0.555,151,0.477,152,0.477,153,0.477,154,1.092,155,0.813,156,0.739,157,0.957,158,1.07,159,1.07,160,0.477,161,0.698,162,0.477,163,0.477,164,0.579,165,0.698,166,0.698,167,0.813,168,0.555,169,0.698,170,0.477,171,0.477,172,0.334,173,0.021,174,0.021]],["title/interfaces/SwitchControlOptions.html",[0,0.11,70,0.432]],["body/interfaces/SwitchControlOptions.html",[0,0.209,1,0.588,2,0.438,3,0.343,4,0.343,5,0.3,6,0.219,7,0.181,8,0.219,9,0.389,10,1.163,11,0.931,12,0.258,13,0.513,14,0.823,15,1.228,16,0.92,17,0.748,18,1.231,19,1.217,20,0.92,21,0.712,22,0.638,23,0.971,24,0.039,25,0.75,26,0.878,27,1.154,28,1.04,29,0.977,30,0.92,31,0.92,32,0.772,34,0.809,35,0.566,36,0.49,37,0.49,38,0.49,39,0.566,40,0.644,41,0.941,42,0.3,43,0.838,44,0.838,45,0.343,46,0.49,47,0.712,48,0.598,49,0.598,50,0.438,51,0.998,52,0.438,53,0.49,54,0.438,55,0.731,56,0.49,57,0.438,58,0.636,59,0.49,60,0.438,61,0.717,62,0.436,63,0.499,64,0.588,65,0.588,66,0.588,67,0.645,68,0.499,69,0.588,70,0.645,71,0.588,72,0.588,73,0.588,74,0.588,75,0.712,76,0.637,77,0.438,78,0.438,79,0.909,80,0.49,81,0.874,82,0.81,83,0.712,84,0.712,85,0.513,86,0.712,87,0.566,88,0.838,89,0.637,90,0.712,91,0.637,92,0.49,93,0.49,94,0.712,95,0.712,96,0.49,97,0.637,98,0.712,99,0.3,100,0.566,101,0.49,102,0.438,103,1.02,104,1.02,105,1.052,106,0.343,107,0.389,108,0.49,109,0.92,110,0.49,111,0.712,112,0.566,113,0.49,114,0.712,115,0.712,116,1.022,117,0.389,118,0.49,119,0.49,120,0.49,121,0.49,122,0.49,123,0.49,124,0.49,125,0.49,126,0.712,127,0.838,128,0.712,129,0.712,130,0.712,131,0.838,132,1.052,133,0.49,134,0.49,135,1.02,136,0.838,137,0.666,138,0.659,139,0.49,140,0.645,141,0.49,142,0.712,143,0.92,144,0.712,145,0.513,146,0.49,147,0.49,148,0.49,149,0.389,150,0.566,151,0.49,152,0.49,153,0.49,154,1.099,155,0.823,156,0.75,157,0.964,158,1.078,159,1.078,160,0.49,161,0.712,162,0.49,163,0.49,164,0.499,165,0.49,166,0.49,167,0.438,168,0.566,169,0.712,170,0.49,171,0.49,172,0.343,173,0.022,174,0.022]],["title/interfaces/TextareaControlOptions.html",[0,0.11,65,0.432]],["body/interfaces/TextareaControlOptions.html",[0,0.208,1,0.583,2,0.432,3,0.339,4,0.339,5,0.296,6,0.216,7,0.179,8,0.216,9,0.384,10,1.161,11,0.929,12,0.255,13,0.509,14,0.96,15,1.227,16,0.914,17,0.747,18,1.229,19,1.215,20,0.914,21,0.705,22,0.644,23,0.961,24,0.039,25,0.749,26,0.877,27,1.151,28,1.052,29,0.972,30,0.914,31,0.914,32,0.773,33,1.42,34,0.813,35,0.56,36,0.483,37,0.483,38,0.483,39,0.56,40,0.641,41,0.937,42,0.296,43,0.832,44,0.832,45,0.339,46,0.483,47,0.705,48,0.595,49,0.595,50,0.432,51,0.995,52,0.432,53,0.483,54,0.432,55,0.727,56,0.483,57,0.432,58,0.641,59,0.483,60,0.432,61,0.715,62,0.431,63,0.494,64,0.583,65,0.641,66,0.583,67,0.641,68,0.494,69,0.583,70,0.583,71,0.583,72,0.583,73,0.583,74,0.583,75,0.832,76,0.63,77,0.432,78,0.432,79,0.906,80,0.483,81,0.869,82,0.806,83,0.705,84,0.705,85,0.509,86,0.705,87,0.56,88,0.832,89,0.744,90,0.705,91,0.63,92,0.483,93,0.483,94,0.705,95,0.705,96,0.483,97,0.63,98,0.705,99,0.296,100,0.56,101,0.483,102,0.432,103,1.015,104,1.015,105,1.048,106,0.339,107,0.384,108,0.483,109,0.914,110,0.483,111,0.705,112,0.56,113,0.483,114,0.705,115,0.705,116,1.02,117,0.384,118,0.705,119,0.914,120,0.705,121,0.705,122,0.705,123,0.914,124,0.483,125,0.483,126,0.705,127,0.832,128,0.705,129,0.705,130,0.705,131,0.832,132,1.048,133,0.483,134,0.483,135,1.015,136,0.832,137,0.661,138,0.657,139,0.483,140,0.641,141,0.483,142,0.705,143,0.914,144,0.705,145,0.509,146,0.483,147,0.483,148,0.483,149,0.384,150,0.56,151,0.483,152,0.483,153,0.483,154,1.095,155,0.817,156,0.744,157,0.96,158,1.074,159,1.074,160,0.483,161,0.705,162,0.483,163,0.483,164,0.494,165,0.483,166,0.483,167,0.432,168,0.56,169,0.705,170,0.483,171,0.483,172,0.339,173,0.021,174,0.021]],["title/interfaces/TimePickerControlOptions.html",[0,0.11,69,0.432]],["body/interfaces/TimePickerControlOptions.html",[0,0.208,1,0.582,2,0.431,3,0.338,4,0.338,5,0.295,6,0.215,7,0.178,8,0.215,9,0.383,10,1.16,11,0.929,12,0.254,13,0.508,14,0.994,15,1.227,16,1.047,17,0.747,18,1.229,19,1.215,20,0.913,21,0.703,22,0.645,23,0.959,24,0.039,25,0.749,26,0.877,27,1.151,28,1.052,29,1.014,30,0.971,31,0.971,32,0.773,33,1.417,34,0.806,35,0.559,36,0.482,37,0.482,38,0.482,39,0.559,40,0.64,41,0.936,42,0.295,43,0.83,44,0.83,45,0.338,46,0.482,47,0.703,48,0.594,49,0.594,50,0.431,51,0.994,52,0.431,53,0.482,54,0.431,55,0.726,56,0.482,57,0.431,58,0.635,59,0.482,60,0.431,61,0.715,62,0.43,63,0.493,64,0.582,65,0.582,66,0.582,67,0.64,68,0.493,69,0.64,70,0.582,71,0.582,72,0.582,73,0.582,74,0.582,75,0.703,76,0.629,77,0.431,78,0.431,79,0.906,80,0.482,81,0.868,82,0.806,83,0.703,84,0.703,85,0.508,86,0.703,87,0.559,88,0.83,89,0.629,90,0.703,91,0.629,92,0.482,93,0.482,94,0.703,95,0.703,96,0.482,97,0.629,98,0.703,99,0.295,100,0.559,101,0.482,102,0.431,103,1.014,104,1.014,105,1.047,106,0.338,107,0.383,108,0.482,109,0.913,110,0.482,111,0.703,112,0.559,113,0.482,114,0.703,115,0.703,116,1.019,117,0.383,118,0.482,119,0.482,120,0.482,121,0.482,122,0.482,123,0.482,124,0.482,125,0.482,126,0.703,127,0.83,128,0.703,129,0.703,130,0.703,131,0.83,132,1.047,133,0.482,134,0.482,135,1.112,136,0.913,137,0.66,138,0.656,139,0.482,140,0.71,141,0.482,142,0.83,143,1.073,144,0.703,145,0.508,146,0.482,147,0.482,148,0.482,149,0.383,150,0.559,151,0.482,152,0.482,153,0.482,154,1.094,155,0.816,156,0.743,157,0.959,158,1.073,159,1.073,160,0.482,161,0.703,162,0.482,163,0.482,164,0.493,165,0.482,166,0.482,167,0.431,168,0.559,169,0.703,170,0.482,171,0.482,172,0.338,173,0.021,174,0.021]],["title/coverage.html",[438,3.418]],["body/coverage.html",[0,0.221,1,0.531,5,0.464,6,0.569,7,0.471,8,0.569,9,0.987,11,0.602,22,0.399,24,0.039,34,0.531,39,0.602,58,0.399,63,0.531,64,0.531,65,0.531,66,0.531,67,0.531,68,0.531,69,0.531,70,0.531,71,0.531,72,0.531,73,0.531,74,0.531,85,0.464,99,0.464,106,0.531,107,0.602,117,0.602,137,0.602,138,0.464,140,0.531,145,0.464,150,0.602,164,0.531,168,0.602,172,0.531,173,0.029,174,0.029,175,2.085,176,2.085,181,3.095,227,2.365,269,2.664,385,2.342,387,3.912,391,2.664,438,3.095,439,3.095,440,3.75,441,3.75,442,3.75,443,3.75,444,4.39,445,6.178,446,6.205,447,6.192,448,3.095,449,2.664,450,3.75,451,3.75,452,3.75,453,3.75,454,3.75,455,3.75,456,5.197,457,5.197,458,3.75,459,3.75,460,3.75,461,3.75,462,3.75,463,3.75,464,4.739,465,4.739,466,3.75,467,3.75,468,3.75,469,3.75,470,3.75,471,3.75,472,3.75,473,3.75,474,3.75,475,3.75,476,3.75]],["title/dependencies.html",[398,2.288,477,2.113]],["body/dependencies.html",[24,0.039,42,0.585,45,0.67,48,0.585,49,0.585,173,0.034,174,0.034,286,3.906,398,2.956,411,3.906,478,4.732,479,6.161,480,4.732,481,5.455,482,4.503,483,3.906,484,4.732,485,3.906,486,4.732,487,4.732,488,4.732,489,4.732,490,4.732,491,4.732]],["title/index.html",[12,0.273,492,2.113,493,2.113]],["body/index.html",[7,0.46,13,0.457,17,0.58,22,0.55,24,0.039,25,0.671,32,0.58,34,0.834,35,0.754,40,0.728,48,0.58,49,0.58,58,0.597,61,0.72,62,0.671,76,0.848,77,0.668,78,0.668,79,0.872,81,0.668,82,0.593,85,0.772,87,0.754,99,0.58,100,0.92,112,0.593,138,0.741,145,0.638,149,0.593,155,0.668,157,0.668,173,0.029,174,0.029,175,3.372,191,2.308,220,3.876,224,4.483,232,3.876,258,3.05,269,2.626,289,3.636,326,3.876,327,3.05,395,2.626,396,2.87,412,3.05,437,3.05,449,2.626,483,3.05,485,3.876,494,5.948,495,3.695,496,5.162,497,5.606,498,3.695,499,4.696,500,5.162,501,4.696,502,5.162,503,3.695,504,3.695,505,3.695,506,3.695,507,3.695,508,3.876,509,3.695,510,3.695,511,4.696,512,3.695,513,3.695,514,3.695,515,3.695,516,3.695,517,3.695,518,3.695,519,3.695,520,3.695,521,3.695,522,3.695,523,3.695,524,3.695,525,3.695,526,4.696,527,4.696,528,4.696,529,4.696,530,4.696,531,4.696,532,4.261,533,4.696,534,3.695,535,3.695,536,3.695,537,3.695,538,3.695,539,3.695,540,3.695,541,3.695,542,3.695,543,3.695,544,3.695,545,3.695,546,3.695,547,3.695,548,3.695,549,3.695,550,3.695,551,3.05,552,3.695,553,3.05,554,3.695,555,3.695,556,3.695,557,3.695,558,5.162,559,4.696,560,3.695,561,3.695,562,3.695,563,3.695,564,3.695,565,3.695,566,3.695]],["title/license.html",[492,2.113,493,2.113,567,2.113]],["body/license.html",[24,0.033,89,0.817,102,0.817,167,0.817,173,0.033,174,0.033,268,3.733,406,3.213,439,3.733,532,4.386,553,3.733,567,3.733,568,4.522,569,5.642,570,4.522,571,4.522,572,5.313,573,4.522,574,4.522,575,4.522,576,4.522,577,4.522,578,4.522,579,5.313,580,6.149,581,4.522,582,4.522,583,4.522,584,5.642,585,4.522,586,5.313,587,4.522,588,4.522,589,4.522,590,4.522,591,4.522,592,4.522,593,4.522,594,4.522,595,4.522,596,5.313,597,4.522,598,4.522,599,4.522,600,4.522,601,4.522,602,5.313,603,5.313,604,4.522,605,4.522,606,4.522,607,4.522,608,4.522,609,4.522,610,4.522,611,4.522,612,4.522,613,4.522,614,4.522,615,4.522,616,4.522,617,4.522,618,4.522,619,4.522,620,4.522,621,4.522,622,4.522,623,4.522,624,4.522,625,4.522,626,4.522,627,4.522,628,4.522,629,4.522,630,4.522,631,4.522]],["title/modules.html",[397,2.942]],["body/modules.html",[24,0.034,35,0.786,173,0.034,174,0.034,396,2.722,397,3.478,482,4.041,632,4.896,633,4.896]],["title/overview.html",[634,3.418]],["body/overview.html",[2,0.821,24,0.039,173,0.033,174,0.033,175,2.526,176,3.477,186,4.016,187,4.016,188,4.016,189,4.016,190,4.222,191,3.712,227,2.909,385,2.837,391,3.227,395,3.227,396,3.422,398,3.327,399,3.749,401,3.749,402,3.749,403,3.749,404,4.397,405,3.749,406,3.227,551,4.813,634,3.749,635,4.542]],["title/properties.html",[13,0.453,477,2.113]],["body/properties.html",[13,0.606,24,0.036,173,0.034,174,0.034,636,4.905,637,4.905]],["title/miscellaneous/typealiases.html",[638,1.599,639,3.664]],["body/miscellaneous/typealiases.html",[1,0.666,6,0.491,7,0.406,8,0.491,9,0.873,12,0.501,22,0.501,24,0.039,62,0.672,63,0.666,64,0.666,65,0.666,66,0.666,67,0.666,68,0.666,69,0.666,70,0.666,71,0.666,72,0.666,73,0.666,74,0.666,173,0.033,174,0.033,250,3.881,444,3.861,638,2.937,640,4.702,641,4.486,642,4.486,643,4.702,644,4.702]],["title/miscellaneous/variables.html",[638,1.599,645,3.024]],["body/miscellaneous/variables.html",[6,0.368,7,0.305,8,0.368,12,0.435,17,0.768,24,0.039,25,0.504,26,0.882,32,0.774,34,0.707,39,0.802,58,0.532,62,0.504,85,0.667,99,0.617,106,0.707,107,0.802,117,0.802,138,0.617,140,0.707,145,0.617,150,0.802,164,0.707,168,0.802,172,0.707,173,0.031,174,0.031,233,5.14,290,2.899,444,4.432,448,4.123,449,3.549,508,3.368,638,2.549,641,5.14,642,3.368,645,3.368,646,4.08,647,4.08,648,4.08,649,4.08,650,4.08,651,4.08,652,4.08,653,4.08,654,4.08,655,4.08,656,4.08,657,4.08,658,4.08,659,4.08,660,4.08,661,4.08,662,4.08,663,4.08,664,4.08,665,4.08,666,4.08]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":637,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":551,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/4",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":530,"title":{},"body":{"index.html":{}}}],["10/11",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":376,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["13.0.0",{"_index":511,"title":{},"body":{"index.html":{}}}],["13.1.1",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":635,"title":{},"body":{"overview.html":{}}}],["2",{"_index":554,"title":{},"body":{"index.html":{}}}],["2.3.0",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["2/26",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["2022",{"_index":553,"title":{},"body":{"index.html":{},"license.html":{}}}],["22",{"_index":555,"title":{},"body":{"index.html":{}}}],["25",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":374,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["6",{"_index":533,"title":{},"body":{"index.html":{}}}],["6/10",{"_index":469,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":463,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":468,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["7.5px",{"_index":372,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["7/10",{"_index":465,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":464,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["_model",{"_index":198,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["_schema",{"_index":199,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["a'date",{"_index":546,"title":{},"body":{"index.html":{}}}],["above",{"_index":601,"title":{},"body":{"license.html":{}}}],["abstractcontrol",{"_index":280,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["accessors",{"_index":223,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["action",{"_index":625,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":384,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["adapt",{"_index":120,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["addonafter",{"_index":216,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["addonbefore",{"_index":217,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["aliases",{"_index":640,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":594,"title":{},"body":{"license.html":{}}}],["angular",{"_index":496,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":411,"title":{},"body":{"modules/FluentFormModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":45,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["antd",{"_index":485,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["antd/button",{"_index":415,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/cascader",{"_index":50,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/checkbox",{"_index":283,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{}}}],["antd/core/types",{"_index":52,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/date",{"_index":54,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/divider",{"_index":420,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/form",{"_index":422,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/input",{"_index":57,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/radio",{"_index":426,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/select",{"_index":60,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/slider",{"_index":429,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/spin",{"_index":431,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/switch",{"_index":433,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/time",{"_index":435,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["anycontroloptions",{"_index":62,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":497,"title":{},"body":{"index.html":{}}}],["arising",{"_index":629,"title":{},"body":{"license.html":{}}}],["array",{"_index":155,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["array.isarray(option.name",{"_index":316,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["array.isarray(value",{"_index":393,"title":{},"body":{"injectables/FluentFormControlNamePipe.html":{}}}],["associated",{"_index":581,"title":{},"body":{"license.html":{}}}],["async",{"_index":96,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["asynchronously",{"_index":162,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["asyncvalidator",{"_index":98,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["asyncvalidatorfn",{"_index":43,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["authors",{"_index":619,"title":{},"body":{"license.html":{}}}],["autosize",{"_index":123,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["b",{"_index":643,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["back",{"_index":113,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["based",{"_index":509,"title":{},"body":{"index.html":{}}}],["before",{"_index":110,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["both",{"_index":542,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":371,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["box",{"_index":109,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["browse",{"_index":633,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":482,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":526,"title":{},"body":{"index.html":{}}}],["builder",{"_index":642,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["builder().type('cascader').name(name",{"_index":646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('checkbox').name(name",{"_index":647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('date').name(name",{"_index":648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('email').name(name",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('embed').name(name",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('number').name(name",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('password').name(name",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('radio').name(name",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('range').name(name",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('select').name(name",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('slider').name(name",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('switch').name(name",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('text').name(name",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('textarea').name(name",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('time').name(name",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":495,"title":{},"body":{"index.html":{}}}],["built",{"_index":505,"title":{},"body":{"index.html":{}}}],["button",{"_index":31,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["c",{"_index":570,"title":{},"body":{"license.html":{}}}],["callback",{"_index":27,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["cancel",{"_index":221,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["cansave",{"_index":218,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["cascader",{"_index":39,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cascadercontroloptions",{"_index":1,"title":{"interfaces/CascaderControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["change",{"_index":15,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["charge",{"_index":576,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":172,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkboxcontroloptions",{"_index":74,"title":{"interfaces/CheckboxControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["checked",{"_index":331,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["claim",{"_index":622,"title":{},"body":{"license.html":{}}}],["class",{"_index":289,"title":{},"body":{"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"index.html":{}}}],["clean",{"_index":30,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["clear",{"_index":16,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["clearformcontrols",{"_index":203,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["clearformcontrols(form",{"_index":241,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["cluster_fluentformmodule",{"_index":399,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_declarations",{"_index":401,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_exports",{"_index":403,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_fluentformcomponent_providers",{"_index":402,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_providers",{"_index":400,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["code",{"_index":523,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":410,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["component",{"_index":175,"title":{"components/FluentFormComponent.html":{}},"body":{"components/FluentFormComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":382,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["components",{"_index":177,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["conditions",{"_index":600,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":504,"title":{},"body":{"index.html":{}}}],["connection",{"_index":630,"title":{},"body":{"license.html":{}}}],["const",{"_index":335,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["constructor",{"_index":225,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["constructor(controlnamepipe",{"_index":226,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["constructor(private",{"_index":299,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["containment",{"_index":165,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["content",{"_index":121,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["contract",{"_index":626,"title":{},"body":{"license.html":{}}}],["control",{"_index":25,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["control's",{"_index":86,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["control.addvalidators(validators.email",{"_index":357,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["control.addvalidators(validators.required",{"_index":359,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["control.label",{"_index":364,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["controlname",{"_index":336,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["controlnamepipe",{"_index":231,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["controls",{"_index":508,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["controls.reduce((form",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":596,"title":{},"body":{"license.html":{}}}],["copy",{"_index":579,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":569,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":159,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["coverage",{"_index":438,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["damages",{"_index":623,"title":{},"body":{"license.html":{}}}],["data",{"_index":154,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["date",{"_index":138,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["date('date').label('label').placeholder('placeholder').span(6",{"_index":529,"title":{},"body":{"index.html":{}}}],["date('date').label('label').placeholder('placeholder').span(6).mapper",{"_index":548,"title":{},"body":{"index.html":{}}}],["date(name).format('yyyy",{"_index":649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(o",{"_index":327,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["date(value",{"_index":323,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["date)?.gettime",{"_index":341,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["date.now",{"_index":531,"title":{},"body":{"index.html":{}}}],["datecontroloptions",{"_index":137,"title":{"interfaces/DateControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["datepickercontroloptions",{"_index":67,"title":{"interfaces/DatePickerControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datetime",{"_index":448,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deal",{"_index":583,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":631,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":284,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["debouncetime(50",{"_index":301,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["decimal",{"_index":130,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["declarations",{"_index":408,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["deep",{"_index":367,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["default",{"_index":233,"title":{},"body":{"components/FluentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":228,"title":{},"body":{"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{}}}],["definition",{"_index":516,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":398,"title":{"dependencies.html":{}},"body":{"modules/FluentFormModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":104,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["destroy",{"_index":200,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["detail",{"_index":538,"title":{},"body":{"index.html":{}}}],["directive",{"_index":380,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["directives",{"_index":383,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["disable",{"_index":90,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["disabled",{"_index":91,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["display",{"_index":142,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["distribute",{"_index":592,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":439,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":179,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["dynamic",{"_index":483,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["element",{"_index":379,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["elements",{"_index":559,"title":{},"body":{"index.html":{}}}],["email",{"_index":106,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":99,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["embed('detail').label('detail').span(24).schema(form",{"_index":536,"title":{},"body":{"index.html":{}}}],["embedded",{"_index":101,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["embeddedformoptions",{"_index":63,"title":{"interfaces/EmbeddedFormOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["end",{"_index":566,"title":{},"body":{"index.html":{}}}],["end']).label('label').span(6",{"_index":564,"title":{},"body":{"index.html":{}}}],["endvalue",{"_index":343,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["endvalue?.gettime",{"_index":347,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["error",{"_index":92,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["errortip",{"_index":94,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["event",{"_index":618,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":239,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["example",{"_index":544,"title":{},"body":{"index.html":{}}}],["examples",{"_index":521,"title":{},"body":{"index.html":{}}}],["expand",{"_index":38,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["expect",{"_index":547,"title":{},"body":{"index.html":{}}}],["expects",{"_index":545,"title":{},"body":{"index.html":{}}}],["export",{"_index":61,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["exports",{"_index":409,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["express",{"_index":609,"title":{},"body":{"license.html":{}}}],["extends",{"_index":10,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["features",{"_index":498,"title":{},"body":{"index.html":{}}}],["field",{"_index":75,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["files",{"_index":582,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":614,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":7,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fluentformcomponent",{"_index":176,"title":{"components/FluentFormComponent.html":{}},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["fluentformcontrolnamepipe",{"_index":227,"title":{"injectables/FluentFormControlNamePipe.html":{}},"body":{"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["fluentformmodule",{"_index":396,"title":{"modules/FluentFormModule.html":{}},"body":{"modules/FluentFormModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["fn",{"_index":261,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["following",{"_index":102,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"license.html":{}}}],["form",{"_index":85,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["form.component",{"_index":436,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["form.component.html",{"_index":196,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.scss",{"_index":194,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts",{"_index":181,"title":{},"body":{"components/FluentFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:128",{"_index":246,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:165",{"_index":248,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:192",{"_index":243,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:198",{"_index":257,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:20",{"_index":272,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:21",{"_index":270,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:22",{"_index":266,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:24",{"_index":274,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:25",{"_index":276,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:30",{"_index":267,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:33",{"_index":237,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:34",{"_index":279,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:41",{"_index":271,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:43",{"_index":236,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:44",{"_index":235,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:45",{"_index":234,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:46",{"_index":238,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:48",{"_index":240,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:49",{"_index":229,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:53",{"_index":253,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:63",{"_index":252,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:68",{"_index":265,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:73",{"_index":260,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:77",{"_index":263,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:79",{"_index":255,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:83",{"_index":254,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:93",{"_index":251,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.control.ts",{"_index":444,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["form.controls[controlname].setvalue(value",{"_index":338,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.controls[option.name",{"_index":333,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.interface",{"_index":287,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.interface.ts",{"_index":9,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["form.module.ts",{"_index":407,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["form.pipe",{"_index":288,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{}}}],["form.pipe.ts",{"_index":387,"title":{},"body":{"injectables/FluentFormControlNamePipe.html":{},"coverage.html":{}}}],["form.pipe.ts:7",{"_index":390,"title":{},"body":{"injectables/FluentFormControlNamePipe.html":{}}}],["form.push(control.build",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.removecontrol(name",{"_index":362,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.setcontrol(controlname",{"_index":360,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form/src/lib/fluent",{"_index":8,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["form2model",{"_index":204,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form2model(form",{"_index":245,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form[controlname",{"_index":339,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["format",{"_index":143,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["formcontrol",{"_index":281,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["formcontroloptions",{"_index":11,"title":{"interfaces/FormControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["formdocs",{"_index":514,"title":{},"body":{"index.html":{}}}],["formgroup",{"_index":242,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["forms",{"_index":502,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":189,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["free",{"_index":575,"title":{},"body":{"license.html":{}}}],["full",{"_index":515,"title":{},"body":{"index.html":{}}}],["function",{"_index":23,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["furnished",{"_index":599,"title":{},"body":{"license.html":{}}}],["getmodel",{"_index":273,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["getschema",{"_index":277,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["getting",{"_index":492,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":574,"title":{},"body":{"license.html":{}}}],["grid",{"_index":77,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["height",{"_index":122,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["hereby",{"_index":573,"title":{},"body":{"license.html":{}}}],["hh:mm:ss').showtime(true",{"_index":652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":620,"title":{},"body":{"license.html":{}}}],["host",{"_index":366,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["hour",{"_index":146,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["html",{"_index":378,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["https://hyperlife1119.github.io/ngx",{"_index":519,"title":{},"body":{"index.html":{}}}],["hyperlifelll9",{"_index":571,"title":{},"body":{"license.html":{}}}],["i/o",{"_index":80,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["icon",{"_index":111,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["identifier",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":103,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["implements",{"_index":182,"title":{},"body":{"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{}}}],["implied",{"_index":610,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["imports",{"_index":437,"title":{},"body":{"modules/FluentFormModule.html":{},"index.html":{}}}],["included",{"_index":167,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"license.html":{}}}],["including",{"_index":586,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["initformcontrol",{"_index":205,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["initformcontrol(form",{"_index":247,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["injectable",{"_index":385,"title":{"injectables/FluentFormControlNamePipe.html":{}},"body":{"injectables/FluentFormControlNamePipe.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":386,"title":{},"body":{"injectables/FluentFormControlNamePipe.html":{}}}],["inline",{"_index":144,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["input",{"_index":82,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["inputcontroloptions",{"_index":64,"title":{"interfaces/InputControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":215,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["install",{"_index":512,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"overview.html":{}}}],["item",{"_index":369,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["json",{"_index":500,"title":{},"body":{"index.html":{}}}],["kind",{"_index":608,"title":{},"body":{"license.html":{}}}],["label",{"_index":79,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["layout",{"_index":78,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["legend",{"_index":377,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["length",{"_index":136,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["liability",{"_index":624,"title":{},"body":{"license.html":{}}}],["liable",{"_index":621,"title":{},"body":{"license.html":{}}}],["license",{"_index":567,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":153,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["limitation",{"_index":587,"title":{},"body":{"license.html":{}}}],["limited",{"_index":611,"title":{},"body":{"license.html":{}}}],["lines",{"_index":118,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["literal",{"_index":33,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["load",{"_index":161,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["map",{"_index":562,"title":{},"body":{"index.html":{}}}],["mapped",{"_index":541,"title":{},"body":{"index.html":{}}}],["mapper",{"_index":81,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["maps",{"_index":83,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["margin",{"_index":370,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["matching",{"_index":174,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":127,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["maximum",{"_index":126,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["maxrows",{"_index":125,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["merchantability",{"_index":613,"title":{},"body":{"license.html":{}}}],["merge",{"_index":590,"title":{},"body":{"license.html":{}}}],["message",{"_index":93,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["metadata",{"_index":184,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["methods",{"_index":202,"title":{},"body":{"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{}}}],["min",{"_index":129,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["minimum",{"_index":128,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["minrows",{"_index":124,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["minute",{"_index":147,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["miscellaneous",{"_index":638,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":568,"title":{},"body":{"license.html":{}}}],["mix",{"_index":534,"title":{},"body":{"index.html":{}}}],["mm",{"_index":650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":132,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["model",{"_index":224,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["model's",{"_index":84,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["model(value",{"_index":293,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model2form",{"_index":206,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model2form(model",{"_index":249,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model?.[option.name",{"_index":319,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model?.[option.name[0",{"_index":317,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model?.[option.name[1",{"_index":318,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model[option.name",{"_index":352,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model[option.name[0",{"_index":344,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model[option.name[1",{"_index":346,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["modify",{"_index":589,"title":{},"body":{"license.html":{}}}],["module",{"_index":395,"title":{"modules/FluentFormModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":397,"title":{"modules.html":{}},"body":{"modules/FluentFormModule.html":{},"modules.html":{}}}],["multi",{"_index":190,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["name",{"_index":17,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":540,"title":{},"body":{"index.html":{}}}],["nested",{"_index":501,"title":{},"body":{"index.html":{}}}],["never",{"_index":105,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["new",{"_index":269,"title":{},"body":{"components/FluentFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":48,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":187,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":412,"title":{},"body":{"modules/FluentFormModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":207,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["ngoninit",{"_index":208,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["ngx",{"_index":494,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":617,"title":{},"body":{"license.html":{}}}],["notice",{"_index":602,"title":{},"body":{"license.html":{}}}],["npm",{"_index":513,"title":{},"body":{"index.html":{}}}],["null",{"_index":232,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["number",{"_index":58,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number('number').label('label').placeholder('placeholder').span(3).build",{"_index":535,"title":{},"body":{"index.html":{}}}],["number('number').label('label').placeholder('placeholder').span(3).max(100",{"_index":528,"title":{},"body":{"index.html":{}}}],["numberinputcontroloptions",{"_index":66,"title":{"interfaces/NumberInputControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["nz",{"_index":368,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["nzbuttonmodule",{"_index":414,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzcascadercomponent",{"_index":46,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcascadercomponent['nzexpandtrigger",{"_index":160,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcascadercomponent['nzloaddata",{"_index":163,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcascadermodule",{"_index":416,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzcascaderoption",{"_index":47,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcheckboxmodule",{"_index":417,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzcheckboxoptioninterface",{"_index":282,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["nzcheckboxoptioninterface[])?.filter(o",{"_index":348,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["nzdatepickercomponent",{"_index":53,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzdatepickercomponent['nzmode",{"_index":139,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzdatepickermodule",{"_index":418,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzdividermodule",{"_index":419,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzformmodule",{"_index":421,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzinputmodule",{"_index":423,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzinputnumbercomponent",{"_index":56,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzinputnumbercomponent['nzprecisionmode",{"_index":134,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzinputnumbermodule",{"_index":424,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzradiomodule",{"_index":425,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzsafeany",{"_index":51,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzselectcomponent",{"_index":59,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzselectcomponent['nzmode",{"_index":151,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzselectmodule",{"_index":427,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzslidermodule",{"_index":428,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzspinmodule",{"_index":430,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzswitchmodule",{"_index":432,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nztimepickermodule",{"_index":434,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["o",{"_index":326,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["o.checked).map(o",{"_index":349,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o.getdate()].join",{"_index":552,"title":{},"body":{"index.html":{}}}],["o.getfullyear",{"_index":549,"title":{},"body":{"index.html":{}}}],["o.getmonth",{"_index":550,"title":{},"body":{"index.html":{}}}],["o.value",{"_index":350,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o[option.options.label",{"_index":329,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o[option.options.value",{"_index":330,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["object",{"_index":157,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["object.keys(form.controls).foreach(name",{"_index":361,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["obtaining",{"_index":578,"title":{},"body":{"license.html":{}}}],["oncancel",{"_index":209,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["oninit",{"_index":183,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["online",{"_index":520,"title":{},"body":{"index.html":{}}}],["onsubmit",{"_index":210,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["onvaluechange",{"_index":201,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option",{"_index":258,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["option.asyncvalidator",{"_index":356,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.disabled",{"_index":354,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.mapper",{"_index":320,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.mapper.input(value",{"_index":321,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.mapper.output(value",{"_index":340,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.options.data.map(o",{"_index":328,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.required",{"_index":358,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.schema",{"_index":334,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.type",{"_index":324,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.validator",{"_index":355,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option[control.options.label",{"_index":365,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["optional",{"_index":14,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["options",{"_index":18,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["options.load",{"_index":37,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["otherwise",{"_index":628,"title":{},"body":{"license.html":{}}}],["out",{"_index":406,"title":{},"body":{"modules/FluentFormModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":170,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["output",{"_index":87,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["outputs",{"_index":220,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["overview",{"_index":634,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":477,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":373,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["param",{"_index":314,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["parameters",{"_index":230,"title":{},"body":{"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{}}}],["parsecontrolname",{"_index":211,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["parsecontrolname(option",{"_index":256,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["particular",{"_index":615,"title":{},"body":{"license.html":{}}}],["password",{"_index":107,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":572,"title":{},"body":{"license.html":{}}}],["permit",{"_index":597,"title":{},"body":{"license.html":{}}}],["person",{"_index":577,"title":{},"body":{"license.html":{}}}],["persons",{"_index":598,"title":{},"body":{"license.html":{}}}],["picker",{"_index":55,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["pipe",{"_index":391,"title":{},"body":{"injectables/FluentFormControlNamePipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipetransform",{"_index":392,"title":{},"body":{"injectables/FluentFormControlNamePipe.html":{}}}],["placeholder",{"_index":19,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["please",{"_index":517,"title":{},"body":{"index.html":{}}}],["portions",{"_index":605,"title":{},"body":{"license.html":{}}}],["pre",{"_index":108,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["precision",{"_index":131,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["precisionmode",{"_index":133,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["prefix",{"_index":114,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["prerequisites",{"_index":510,"title":{},"body":{"index.html":{}}}],["private",{"_index":197,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["projects/.../fluent",{"_index":641,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":158,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["provide",{"_index":186,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["provided",{"_index":606,"title":{},"body":{"license.html":{}}}],["providers",{"_index":185,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{}}}],["publish",{"_index":591,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":616,"title":{},"body":{"license.html":{}}}],["radio",{"_index":168,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["radiocontroloptions",{"_index":73,"title":{"interfaces/RadioControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["range",{"_index":145,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["range(['start",{"_index":563,"title":{},"body":{"index.html":{}}}],["rangepickercontroloptions",{"_index":68,"title":{"interfaces/RangePickerControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["reactive",{"_index":507,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":413,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["record",{"_index":156,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["registeronchange",{"_index":212,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["registeronchange(fn",{"_index":259,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["registerontouched",{"_index":213,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["registerontouched(fn",{"_index":262,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["relationship",{"_index":166,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["required",{"_index":88,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["reset",{"_index":405,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["restriction",{"_index":585,"title":{},"body":{"license.html":{}}}],["results",{"_index":173,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":290,"title":{},"body":{"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":244,"title":{},"body":{"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{}}}],["rights",{"_index":588,"title":{},"body":{"license.html":{}}}],["rows",{"_index":119,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["rxjs",{"_index":286,"title":{},"body":{"components/FluentFormComponent.html":{},"dependencies.html":{}}}],["safe",{"_index":503,"title":{},"body":{"index.html":{}}}],["sample",{"_index":522,"title":{},"body":{"index.html":{}}}],["schema",{"_index":100,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["schema(value",{"_index":296,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["schema.foreach(option",{"_index":315,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["search",{"_index":20,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["second",{"_index":148,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["select",{"_index":150,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcontroloptions",{"_index":71,"title":{"interfaces/SelectControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["selected",{"_index":152,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["selection",{"_index":556,"title":{},"body":{"index.html":{}}}],["selector",{"_index":192,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["sell",{"_index":595,"title":{},"body":{"license.html":{}}}],["set",{"_index":292,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["setmodel(value",{"_index":275,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["setschema(value",{"_index":278,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["shall",{"_index":603,"title":{},"body":{"license.html":{}}}],["show",{"_index":29,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["showtime",{"_index":141,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["slider",{"_index":164,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slidercontroloptions",{"_index":72,"title":{"interfaces/SliderControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["software",{"_index":580,"title":{},"body":{"license.html":{}}}],["solid",{"_index":171,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["span",{"_index":76,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["spinning",{"_index":219,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["start",{"_index":565,"title":{},"body":{"index.html":{}}}],["started",{"_index":493,"title":{"index.html":{},"license.html":{}},"body":{}}],["startvalue",{"_index":342,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["startvalue?.gettime",{"_index":345,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["statements",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":135,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["string",{"_index":32,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":169,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["styles",{"_index":178,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["styleurls",{"_index":193,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["subject",{"_index":268,"title":{},"body":{"components/FluentFormComponent.html":{},"license.html":{}}}],["sublicense",{"_index":593,"title":{},"body":{"license.html":{}}}],["submit",{"_index":222,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["subscribe((form",{"_index":303,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["substantial",{"_index":604,"title":{},"body":{"license.html":{}}}],["such",{"_index":557,"title":{},"body":{"index.html":{}}}],["suffix",{"_index":115,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["support",{"_index":35,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"modules.html":{}}}],["suppose",{"_index":560,"title":{},"body":{"index.html":{}}}],["svg",{"_index":632,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":149,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["switchcontroloptions",{"_index":70,"title":{"interfaces/SwitchControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["switcher",{"_index":449,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["switcher('switch').label('label').span(2",{"_index":537,"title":{},"body":{"index.html":{}}}],["t",{"_index":250,"title":{},"body":{"components/FluentFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":285,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["takeuntil(this.destroy",{"_index":302,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["template",{"_index":112,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["templateref",{"_index":41,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["templateurl",{"_index":195,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["text",{"_index":34,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["text('text').label('label').placeholder('placeholder').span(6",{"_index":527,"title":{},"body":{"index.html":{}}}],["textarea",{"_index":117,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["textareacontroloptions",{"_index":65,"title":{"interfaces/TextareaControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["this._model",{"_index":291,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this._schema",{"_index":295,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.cancel.emit",{"_index":313,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.clearformcontrols(this.form",{"_index":297,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.controlnamepipe.transform(option.name",{"_index":363,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.destroy$.complete",{"_index":308,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.destroy$.next",{"_index":307,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form",{"_index":310,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form.valuechanges.pipe",{"_index":300,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form2model(form",{"_index":304,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form2model(value",{"_index":351,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.initformcontrol(control",{"_index":353,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.initformcontrol(this.form",{"_index":298,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.model",{"_index":305,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.model2form(value",{"_index":309,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.onvaluechange",{"_index":311,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.onvaluechange(value",{"_index":294,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.parsecontrolname(option",{"_index":337,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.schema",{"_index":306,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.submit.emit(this.model",{"_index":312,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["time",{"_index":140,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["time'].includes(option.type",{"_index":322,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["timepickercontroloptions",{"_index":69,"title":{"interfaces/TimePickerControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["top",{"_index":506,"title":{},"body":{"index.html":{}}}],["tort",{"_index":627,"title":{},"body":{"license.html":{}}}],["transform",{"_index":388,"title":{},"body":{"injectables/FluentFormControlNamePipe.html":{}}}],["transform(value",{"_index":389,"title":{},"body":{"injectables/FluentFormControlNamePipe.html":{}}}],["tree",{"_index":180,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["trigger",{"_index":21,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["true",{"_index":191,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"index.html":{},"overview.html":{}}}],["tslib",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":558,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":639,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":644,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unknown[])?.includes(o[option.options.value",{"_index":332,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["usage",{"_index":524,"title":{},"body":{"index.html":{}}}],["use",{"_index":532,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":36,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["useexisting",{"_index":188,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["using",{"_index":499,"title":{},"body":{"index.html":{}}}],["validator",{"_index":95,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["validatorfn",{"_index":44,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["validators",{"_index":97,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["value",{"_index":26,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"injectables/FluentFormControlNamePipe.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/variables.html":{}}}],["value.join",{"_index":394,"title":{},"body":{"injectables/FluentFormControlNamePipe.html":{}}}],["value.map((o",{"_index":325,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["values",{"_index":539,"title":{},"body":{"index.html":{}}}],["var",{"_index":381,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["variable",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":645,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":636,"title":{},"body":{"properties.html":{}}}],["visit",{"_index":518,"title":{},"body":{"index.html":{}}}],["void",{"_index":116,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["want",{"_index":561,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":612,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":607,"title":{},"body":{"license.html":{}}}],["ways",{"_index":543,"title":{},"body":{"index.html":{}}}],["whether",{"_index":89,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"license.html":{}}}],["width",{"_index":375,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["without",{"_index":584,"title":{},"body":{"license.html":{}}}],["writevalue",{"_index":214,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["writevalue(value",{"_index":264,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["yourmodule",{"_index":525,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":404,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["zorro",{"_index":49,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/CascaderControlOptions.html":{"url":"interfaces/CascaderControlOptions.html","title":"interface - CascaderControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CascaderControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            search\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trigger\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Support search, cannot be used with options.load\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trigger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trigger:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Expand trigger for cascader control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckboxControlOptions.html":{"url":"interfaces/CheckboxControlOptions.html","title":"interface - CheckboxControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CheckboxControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateControlOptions.html":{"url":"interfaces/DateControlOptions.html","title":"interface - DateControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DateControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Date display format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Inline mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Mode of date picker control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show time picker in date picker\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePickerControlOptions.html":{"url":"interfaces/DatePickerControlOptions.html","title":"interface - DatePickerControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatePickerControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmbeddedFormOptions.html":{"url":"interfaces/EmbeddedFormOptions.html","title":"interface - EmbeddedFormOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmbeddedFormOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            schema\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schema:         AnyControlOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnyControlOptions[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Schema for embedded form\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FluentFormComponent.html":{"url":"components/FluentFormComponent.html","title":"component - FluentFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FluentFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-fluent-form/src/lib/fluent-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                fluent-form\n            \n\n            \n                styleUrls\n                ./fluent-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fluent-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _model\n                            \n                            \n                                    Private\n                                _schema\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                onValueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearFormControls\n                            \n                            \n                                    Private\n                                form2model\n                            \n                            \n                                    Private\n                                initFormControl\n                            \n                            \n                                    Private\n                                model2form\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                            \n                                    Private\n                                parseControlName\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addOnAfter\n                            \n                            \n                                addOnBefore\n                            \n                            \n                                canSave\n                            \n                            \n                                schema\n                            \n                            \n                                spinning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                                \n                                    schema\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlNamePipe: FluentFormControlNamePipe)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlNamePipe\n                                                  \n                                                        \n                                                                        FluentFormControlNamePipe\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addOnAfter\n                    \n                \n                \n                    \n                        Type :     TemplateRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addOnBefore\n                    \n                \n                \n                    \n                        Type :     TemplateRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        canSave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spinning\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:46\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:48\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearFormControls\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearFormControls(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        form2model\n                        \n                    \n                \n            \n            \n                \n                    \n                    form2model(form: Record, model: Record, schema: AnyControlOptions[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:128\n                \n            \n\n\n            \n                \n                    从表单赋值到模型\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                                AnyControlOptions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initFormControl\n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormControl(form: FormGroup, schema: AnyControlOptions[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                                AnyControlOptions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        model2form\n                        \n                    \n                \n            \n            \n                \n                    \n                    model2form(model: T, form: FormGroup, schema: AnyControlOptions[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:93\n                \n            \n\n\n            \n                \n                    从模型赋值到表单\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                                AnyControlOptions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        parseControlName\n                        \n                    \n                \n            \n            \n                \n                    \n                    parseControlName(option: AnyControlOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:198\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                AnyControlOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: NzSafeAny)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                            NzSafeAny\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: NzSafeAny)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                            NzSafeAny\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnyControlOptions[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onValueChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:24\n                                \n                            \n\n                \n                    \n                        setmodel(value: T)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:33\n                                \n                            \n\n                \n                    \n                        setschema(value: AnyControlOptions[])\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:34\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            AnyControlOptions[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, forwardRef, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { NzCheckBoxOptionInterface } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { debounceTime, Subject, takeUntil } from 'rxjs';\nimport { AnyControlOptions } from './fluent-form.interface';\nimport { FluentFormControlNamePipe } from './fluent-form.pipe';\n\n@Component({\n  selector: 'fluent-form',\n  templateUrl: './fluent-form.component.html',\n  styleUrls: ['./fluent-form.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FluentFormComponent),\n    multi: true\n  }]\n})\nexport class FluentFormComponent> implements OnInit {\n  private onValueChange = (value: T) => { };\n  private destroy$: Subject = new Subject();\n  private _model!: T;\n\n  get model(): T { return this._model; }\n  set model(value: T) {\n    this._model = value;\n    this.onValueChange(value);\n  }\n\n  private _schema!: AnyControlOptions[];\n\n  @Input()\n  get schema() { return this._schema; }\n  set schema(value: AnyControlOptions[]) {\n    this.clearFormControls(this.form);\n    this.initFormControl(this.form, value);\n\n    this._schema = value;\n  }\n\n  form: FormGroup = new FormGroup({});\n\n  @Input() canSave: boolean = true;\n  @Input() addOnBefore: TemplateRef | null = null;\n  @Input() addOnAfter: TemplateRef | null = null;\n  @Input() spinning?: boolean;\n\n  @Output() submit: EventEmitter = new EventEmitter();\n  @Output() cancel: EventEmitter = new EventEmitter();\n\n  constructor(private controlNamePipe: FluentFormControlNamePipe) { }\n\n  ngOnInit(): void {\n    this.form.valueChanges.pipe(\n      debounceTime(50),\n      takeUntil(this.destroy$)\n    ).subscribe((form: T) => {\n      this.form2model(form, this.model, this.schema);\n      this.model = this.model;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: T): void {\n    this.model = value;\n    value && this.model2form(value, this.form, this.schema);\n  }\n\n  registerOnChange(fn: NzSafeAny): void {\n    this.onValueChange = fn;\n  }\n\n  registerOnTouched(fn: NzSafeAny): void { }\n\n  onSubmit() {\n    this.submit.emit(this.model);\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  /**\n   * 从模型赋值到表单\n   * @param model\n   * @param form\n   * @param schema\n   */\n  private model2form(model: T, form: FormGroup, schema: AnyControlOptions[]) {\n    schema.forEach(option => {\n      // 如果是双字段模式，value 也将会是一个数组\n      let value = Array.isArray(option.name) ? [model?.[option.name[0]], model?.[option.name[1]]] : model?.[option.name]\n\n      if (option.mapper) {\n        value = option.mapper.input(value);\n      } else if (['date', 'time'].includes(option.type)) {\n        value = value ? new Date(value) : null;\n      } else if (option.type === 'range') {\n        // 如果是双字段模式\n        if (Array.isArray(option.name)) {\n          value = value.map((o: string | number | Date) => o && new Date(o));\n        }\n      } else if (option.type === 'checkbox') {\n        value = option.options.data.map(o => ({\n          label: o[option.options.label ?? 'label'],\n          value: o[option.options.value ?? 'value'],\n          checked: (value as unknown[])?.includes(o[option.options.value ?? 'value'])\n        })) as NzCheckBoxOptionInterface[];\n      } else if (option.type === 'embed') {\n        return this.model2form(value, form.controls[option.name] as FormGroup, option.schema);\n      }\n\n      const controlName = this.parseControlName(option);\n      form.controls[controlName].setValue(value);\n    });\n  }\n\n  /**\n   * 从表单赋值到模型\n   * @param form\n   * @param model\n   * @param schema\n   */\n  private form2model(form: Record, model: Record, schema: AnyControlOptions[]) {\n    schema.forEach(option => {\n      const controlName = this.parseControlName(option);\n      let value = form[controlName];\n\n      if (option.mapper) {\n        value = option.mapper.output(value);\n      } else if (['date', 'time'].includes(option.type)) {\n        value = (value as Date)?.getTime();\n      } else if (option.type === 'range') {\n        const [startValue, endValue] = (value ?? []) as [Date, Date];\n        // 如果是双字段模式，将数组拆分并分别赋值到两个字段中去\n        if (Array.isArray(option.name)) {\n          model[option.name[0]] = startValue?.getTime();\n          model[option.name[1]] = endValue?.getTime();\n          return;\n        }\n\n        value = [startValue?.getTime(), endValue?.getTime()];\n      } else if (option.type === 'slider') {\n        // 如果是双字段模式，将数组拆分并分别赋值到两个字段中去\n        if (Array.isArray(option.name)) {\n          const [startValue, endValue] = (value ?? []) as [number, number];\n          model[option.name[0]] = startValue;\n          model[option.name[1]] = endValue;\n          return;\n        }\n      } else if (option.type === 'checkbox') {\n        value = (value as NzCheckBoxOptionInterface[])?.filter(o => o.checked).map(o => o.value);\n      } else if (option.type === 'embed') {\n        return this.form2model(value, model[option.name] ??= {}, option.schema);\n      }\n\n      model[option.name as string] = value;\n    });\n  }\n\n  private initFormControl(form: FormGroup, schema: AnyControlOptions[]) {\n    schema.forEach(option => {\n      let control!: AbstractControl;\n\n      if (option.type === 'embed') {\n        this.initFormControl(control = new FormGroup({}), option.schema);\n      } else {\n        control = new FormControl(\n          { value: null, disabled: option.disabled },\n          option.validator,\n          option.asyncValidator,\n        );\n\n        if (option.type === 'email') {\n          control.addValidators(Validators.email);\n        }\n\n        if (option.required) {\n          control.addValidators(Validators.required);\n        }\n      }\n\n      const controlName = this.parseControlName(option);\n      form.setControl(controlName, control);\n    });\n  }\n\n  private clearFormControls(form: FormGroup) {\n    Object.keys(form.controls).forEach(name => {\n      form.removeControl(name);\n    });\n  }\n\n  private parseControlName(option: AnyControlOptions) {\n    return this.controlNamePipe.transform(option.name);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n    \n    \n      取消\n      保存\n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n         -->\n        \n        \n        \n         -->\n      \n\n      \n        {{ control.label }}\n        \n          \n            \n              \n                \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n            \n\n            \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n                \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n                \n                  \n                    {{ option[control.options.label ?? 'label'] }}\n                  \n                  \n                    {{ option[control.options.label ?? 'label'] }}\n                  \n                \n              \n            \n\n            \n              \n              \n            \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./fluent-form.component.scss\n                \n                :host ::ng-deep nz-form-item {\n  margin-bottom: 7.5px;\n\n  > nz-form-label {\n    padding-bottom: 5px;\n  }\n}\n\nnz-switch,\nnz-input-number,\nnz-date-picker,\nnz-range-picker,\nnz-time-picker {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  取消      保存                                                                         -->                                 -->                    {{ control.label }}{{ option[control.options.label ?? \\'label\\'] }}                                                        {{ option[control.options.label ?? \\'label\\'] }}                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'FluentFormComponent', 'selector': 'fluent-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FluentFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FluentFormControlNamePipe.html":{"url":"injectables/FluentFormControlNamePipe.html","title":"injectable - FluentFormControlNamePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FluentFormControlNamePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | )\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            string | \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Pipe, PipeTransform } from '@angular/core';\n\n@Injectable()\n@Pipe({ name: 'control' })\nexport class FluentFormControlNamePipe implements PipeTransform {\n\n  transform(value: string | [string, string]): string {\n    return Array.isArray(value) ? value.join('-') : value;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FluentFormModule.html":{"url":"modules/FluentFormModule.html","title":"module - FluentFormModule","body":"\n                   \n\n\n\n\n    Modules\n    FluentFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FluentFormModule\n\n\n\ncluster_FluentFormModule_providers\n\n\n\ncluster_FluentFormModule_declarations\n\n\n\ncluster_FluentFormModule_FluentFormComponent_providers\n\n\n\ncluster_FluentFormModule_exports\n\n\n\n\nFluentFormComponent\n\nFluentFormComponent\n\n\n\nFluentFormModule\n\nFluentFormModule\n\nFluentFormModule -->\n\nFluentFormComponent->FluentFormModule\n\n\n\n\n\nFluentFormControlNamePipe\n\nFluentFormControlNamePipe\n\nFluentFormModule -->\n\nFluentFormControlNamePipe->FluentFormModule\n\n\n\nFluentFormModule -->\n\nFluentFormControlNamePipe->FluentFormModule\n\n\n\n\n\nFluentFormComponent \n\nFluentFormComponent \n\nFluentFormComponent  -->\n\nFluentFormModule->FluentFormComponent \n\n\n\n FluentFormComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n FluentFormComponent), multi: true\n}->FluentFormComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}->FluentFormComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FluentFormComponent\n                        \n                        \n                            FluentFormControlNamePipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FluentFormControlNamePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FluentFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { FluentFormComponent } from './fluent-form.component';\nimport { FluentFormControlNamePipe } from './fluent-form.pipe';\n\n@NgModule({\n  declarations: [\n    FluentFormComponent,\n    FluentFormControlNamePipe\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NzSpinModule,\n    NzButtonModule,\n    NzInputModule,\n    NzInputNumberModule,\n    NzCascaderModule,\n    NzDatePickerModule,\n    NzFormModule,\n    NzCheckboxModule,\n    NzSwitchModule,\n    NzDividerModule,\n    NzSelectModule,\n    NzTimePickerModule,\n    NzSliderModule,\n    NzRadioModule\n  ],\n  providers: [\n    FluentFormControlNamePipe\n  ],\n  exports: [\n    FluentFormComponent\n  ]\n})\nexport class FluentFormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormControlOptions.html":{"url":"interfaces/FormControlOptions.html","title":"interface - FormControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            asyncValidator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorTip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mapper\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                        \n                                            span\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validator\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asyncValidator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asyncValidator:     AsyncValidatorFn | AsyncValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AsyncValidatorFn | AsyncValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Async validators for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorTip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorTip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Error message for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Label for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapper\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapper:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    I/O mapper for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Is it a required control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        span\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        span:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Span of the control in grid layout\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validator:     ValidatorFn | ValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidatorFn | ValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Validator for the control\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputControlOptions.html":{"url":"interfaces/InputControlOptions.html","title":"interface - InputControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            suffix\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The back label of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The pre-label of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:     string | TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The prefix of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suffix:     string | TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The suffix of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"text\" | \"email\" | \"password\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"text\" | \"email\" | \"password\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumberInputControlOptions.html":{"url":"interfaces/NumberInputControlOptions.html","title":"interface - NumberInputControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NumberInputControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            precision\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            precisionMode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Minimum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precision\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precision:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Decimal precision\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precisionMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precisionMode:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Decimal precision mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Step length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RadioControlOptions.html":{"url":"interfaces/RadioControlOptions.html","title":"interface - RadioControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RadioControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            style\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:     \"outline\" | \"solid\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"outline\" | \"solid\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Radio control style\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RangePickerControlOptions.html":{"url":"interfaces/RangePickerControlOptions.html","title":"interface - RangePickerControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RangePickerControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     [string, string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string, string]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectControlOptions.html":{"url":"interfaces/SelectControlOptions.html","title":"interface - SelectControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            search\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max selected\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Mode of select control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Support search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SliderControlOptions.html":{"url":"interfaces/SliderControlOptions.html","title":"interface - SliderControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SliderControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            included\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            range\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        included\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        included:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Containment relationship\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Minimum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     never\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     never\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        range\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        range:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Range slider mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Step length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwitchControlOptions.html":{"url":"interfaces/SwitchControlOptions.html","title":"interface - SwitchControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwitchControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextareaControlOptions.html":{"url":"interfaces/TextareaControlOptions.html","title":"interface - TextareaControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextareaControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autosize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rows\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autosize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosize:     boolean | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to adapt the content height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of lines in the text field\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimePickerControlOptions.html":{"url":"interfaces/TimePickerControlOptions.html","title":"interface - TimePickerControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimePickerControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Time display format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Time step length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.component.ts\n            \n            component\n            FluentFormComponent\n            \n                7 %\n                (2/26)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            cascader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            checkbox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            date\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            datetime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            email\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            embed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            form\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            number\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            password\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            radio\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            range\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            select\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            slider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            switcher\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            text\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            textarea\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            time\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            CascaderControlOptions\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            CheckboxControlOptions\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            DateControlOptions\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            DatePickerControlOptions\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            EmbeddedFormOptions\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            FormControlOptions\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            InputControlOptions\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            NumberInputControlOptions\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            RadioControlOptions\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            RangePickerControlOptions\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            SelectControlOptions\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            SliderControlOptions\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            SwitchControlOptions\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            TextareaControlOptions\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            TimePickerControlOptions\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.pipe.ts\n            \n            injectable\n            FluentFormControlNamePipe\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.pipe.ts\n            \n            pipe\n            FluentFormControlNamePipe\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            ng-zorro-antd : ^13.1.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-fluent-form\nBuilding dynamic form in Angular with Fluent API.\n\n\n\n\n\n\nFeatures\n\nSupport using Fluent API and JSON.\nSupport for nested forms.\nType-safe form configuration.\nBuilt on top of Angular Reactive Forms.\nForm controls and grid layout based on ng-zorro-antd.\n\nPrerequisites\n\nAngular >= 13.0.0\nng-zorro-antd >= 13.0.0\n\nInstall\nnpm i ngx-fluent-formDocs\n\nFor the full API definition, please visit https://hyperlife1119.github.io/ngx-fluent-form.\nOnline examples, and sample code.\n\nUsage\nImport the FluentFormModule into your module:\nimport { FluentFormModule } from 'ngx-fluent-form';\n\n@NgModule({\n  imports: [\n    FluentFormModule\n  ]\n})\nexport class YourModule { }Build the form using the Fluent API:\nimport { date, form, number, text } from 'ngx-fluent-form';\n\n@Component({\n  template: ``\n})\nexport class Component {\n  schema = form(\n    text('text').label('label').placeholder('placeholder').span(6),\n    number('number').label('label').placeholder('placeholder').span(3).max(100),\n    date('date').label('label').placeholder('placeholder').span(6)\n  );\n\n  model = {\n    text: 'fluent-form',\n    number: 10,\n    date: Date.now()\n  };\n}You can also use JSON to build the form:\nimport { AnyControlOptions } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema: AnyControlOptions[] = [\n    { type: 'text', name: 'text', label: 'label', span: 6 }\n  ];\n}You can also mix Fluent API and JSON:\nimport { AnyControlOptions, number } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema: AnyControlOptions[] = [\n    { type: 'text', name: 'text', label: 'label', span: 6 },\n    number('number').label('label').placeholder('placeholder').span(3).build(),\n  ];\n}For nested forms, you can use the embed control:\nimport { date, form, number, text, embed, switcher } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    text('text').label('label').placeholder('placeholder').span(6),\n    number('number').label('label').placeholder('placeholder').span(3).max(100),\n\n    embed('detail').label('detail').span(24).schema(form(\n      date('date').label('label').placeholder('placeholder').span(6),\n      switcher('switch').label('label').span(2),\n    ))\n  );\n\n  model = {\n    text: 'fluent-form',\n    number: 10,\n    detail: {\n      date: Date.now(),\n      switch: true\n    }\n  };\n}Use the `mapper 'option for values that need to be mapped both ways. For example, the date control expects and outputs a'Date 'object, while we expect a date string from the date control output:\nimport { date, form } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    date('date').label('label').placeholder('placeholder').span(6).mapper({\n      input: (o: string) => new Date(o),\n      output: (o: Date) => [o.getFullYear(), o.getMonth() + 1, o.getDate()].join('-')\n    })\n  );\n\n  model = {\n    date: '2022-2-22'\n  };\n}For range selection controls, such as the range control, it outputs an array with two elements. Suppose we want to map these two elements to two properties:\nimport { form, range } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    range(['start', 'end']).label('label').span(6),\n  );\n\n  model = {\n    start: null,\n    end: null\n  };\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 HyperLifelll9\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FluentFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FluentFormModule\n\n\n\ncluster_FluentFormModule_declarations\n\n\n\ncluster_FluentFormModule_FluentFormComponent_providers\n\n\n\ncluster_FluentFormModule_exports\n\n\n\n\nFluentFormComponent\n\nFluentFormComponent\n\n\n\nFluentFormModule\n\nFluentFormModule\n\nFluentFormModule -->\n\nFluentFormComponent->FluentFormModule\n\n\n\n\n\nFluentFormControlNamePipe\n\nFluentFormControlNamePipe\n\nFluentFormModule -->\n\nFluentFormControlNamePipe->FluentFormModule\n\n\n\nFluentFormModule -->\n\nFluentFormControlNamePipe->FluentFormModule\n\n\n\n\n\nFluentFormComponent \n\nFluentFormComponent \n\nFluentFormComponent  -->\n\nFluentFormModule->FluentFormComponent \n\n\n\n FluentFormComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n FluentFormComponent), multi: true\n}->FluentFormComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}->FluentFormComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyControlOptions   (projects/.../fluent-form.interface.ts)\n                        \n                        \n                            Builder   (projects/.../fluent-form.control.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n    \n    \n        \n            \n                \n                    \n                    AnyControlOptions\n                \n            \n            \n                \n                        EmbeddedFormOptions | InputControlOptions | TextareaControlOptions | NumberInputControlOptions | DatePickerControlOptions | RangePickerControlOptions | TimePickerControlOptions | SwitchControlOptions | SelectControlOptions | CascaderControlOptions | SliderControlOptions | RadioControlOptions | CheckboxControlOptions\n\n                \n            \n        \n    \n    projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n    \n    \n        \n            \n                \n                    \n                    Builder\n                \n            \n            \n                \n                    T 原型，B 已选，U 未选\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cascader   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            checkbox   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            date   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            datetime   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            email   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            embed   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            form   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            number   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            password   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            radio   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            range   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            select   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            slider   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            switcher   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            text   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            textarea   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            time   (projects/.../fluent-form.control.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cascader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('cascader').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkbox\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('checkbox').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('date').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        datetime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => date(name).format('yyyy-MM-dd HH:mm:ss').showTime(true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('email').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('embed').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...controls: Builder[]) => (\n  controls.reduce((form, control) => {\n    form.push(control.build());\n    return form;\n  }, [] as AnyControlOptions[])\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('number').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('password').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        radio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('radio').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string | [string, string]) => builder().type('range').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('select').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string | [string, string]) => builder().type('slider').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switcher\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('switch').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('text').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textarea\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('textarea').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('time').name(name)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
