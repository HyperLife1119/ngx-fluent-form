var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/CascaderControlOptions.html",[0,0.139,1,0.395]],["body/interfaces/CascaderControlOptions.html",[0,0.264,1,0.587,2,0.406,3,0.358,4,0.358,5,0.312,6,0.227,7,0.188,8,0.227,9,0.358,10,1.091,11,0.859,12,0.268,13,0.46,14,1.047,15,1.152,16,0.986,17,0.782,18,1.161,19,1.142,20,1.01,21,0.955,22,0.674,23,0.924,24,0.041,25,0.785,26,0.918,27,1.082,28,0.992,29,0.955,30,0.916,31,0.916,32,0.808,33,1.387,34,0.737,35,0.613,36,0.666,37,0.666,38,0.666,39,0.613,40,0.672,41,0.875,42,0.312,43,0.785,44,0.785,45,0.312,46,0.458,47,0.666,48,0.537,49,0.537,50,0.406,51,0.929,52,0.406,53,0.458,54,0.406,55,0.673,56,0.458,57,0.406,58,0.561,59,0.458,60,0.406,61,0.749,62,0.39,63,0.454,64,0.535,65,0.535,66,0.535,67,0.587,68,0.454,69,0.535,70,0.535,71,0.535,72,0.535,73,0.535,74,0.535,75,0.666,76,0.591,77,0.406,78,0.406,79,0.838,80,0.458,81,0.813,82,0.747,83,0.666,84,0.666,85,0.46,86,0.666,87,0.52,88,0.785,89,0.591,90,0.666,91,0.591,92,0.458,93,0.458,94,0.666,95,0.666,96,0.458,97,0.591,98,0.666,99,0.268,100,0.52,101,0.458,102,0.406,103,0.955,104,0.955,105,0.986,106,0.312,107,0.358,108,0.458,109,0.862,110,0.458,111,0.666,112,0.52,113,0.458,114,0.666,115,0.666,116,0.951,117,0.358,118,0.458,119,0.458,120,0.458,121,0.458,122,0.458,123,0.458,124,0.458,125,0.458,126,0.666,127,0.785,128,0.666,129,0.666,130,0.666,131,0.785,132,0.986,133,0.458,134,0.458,135,0.955,136,0.785,137,0.613,138,0.592,139,0.458,140,0.587,141,0.458,142,0.666,143,0.862,144,0.666,145,0.46,146,0.458,147,0.458,148,0.458,149,0.358,150,0.52,151,0.458,152,0.458,153,0.458,154,1.03,155,0.765,156,0.696,157,0.897,158,1.01,159,1.01,160,0.458,161,0.666,162,0.458,163,0.458,164,0.454,165,0.458,166,0.458,167,0.406,168,0.52,169,0.666,170,0.458,171,0.458,172,0.312,173,0.022,174,0.022]],["title/interfaces/CheckboxControlOptions.html",[0,0.139,74,0.395]],["body/interfaces/CheckboxControlOptions.html",[0,0.265,1,0.541,2,0.415,3,0.365,4,0.365,5,0.318,6,0.232,7,0.192,8,0.232,9,0.365,10,1.095,11,0.861,12,0.274,13,0.466,14,0.676,15,1.155,16,0.87,17,0.783,18,1.162,19,1.13,20,0.87,21,0.676,22,0.671,23,0.938,24,0.041,25,0.785,26,0.92,27,1.086,28,0.972,29,0.923,30,0.87,31,0.87,32,0.808,33,1.408,34,0.733,35,0.528,36,0.467,37,0.467,38,0.467,39,0.528,40,0.676,41,0.881,42,0.318,43,0.794,44,0.794,45,0.318,46,0.467,47,0.676,48,0.541,49,0.541,50,0.415,51,0.933,52,0.415,53,0.467,54,0.415,55,0.68,56,0.467,57,0.415,58,0.563,59,0.467,60,0.415,61,0.751,62,0.396,63,0.461,64,0.541,65,0.541,66,0.541,67,0.593,68,0.461,69,0.541,70,0.541,71,0.541,72,0.541,73,0.541,74,0.593,75,0.676,76,0.6,77,0.415,78,0.415,79,0.841,80,0.467,81,0.819,82,0.752,83,0.676,84,0.676,85,0.466,86,0.676,87,0.528,88,0.794,89,0.6,90,0.676,91,0.6,92,0.467,93,0.467,94,0.676,95,0.676,96,0.467,97,0.6,98,0.676,99,0.274,100,0.528,101,0.467,102,0.415,103,0.962,104,0.962,105,0.992,106,0.318,107,0.365,108,0.467,109,0.87,110,0.467,111,0.676,112,0.528,113,0.467,114,0.676,115,0.676,116,0.955,117,0.365,118,0.467,119,0.467,120,0.467,121,0.467,122,0.467,123,0.467,124,0.467,125,0.467,126,0.676,127,0.794,128,0.676,129,0.676,130,0.676,131,0.794,132,0.992,133,0.467,134,0.467,135,0.962,136,0.794,137,0.621,138,0.596,139,0.467,140,0.593,141,0.467,142,0.676,143,0.87,144,0.676,145,0.466,146,0.467,147,0.467,148,0.467,149,0.365,150,0.528,151,0.467,152,0.467,153,0.467,154,1.036,155,0.772,156,0.705,157,0.902,158,1.016,159,1.016,160,0.467,161,0.676,162,0.467,163,0.467,164,0.461,165,0.467,166,0.467,167,0.415,168,0.528,169,0.676,170,0.467,171,0.467,172,0.318,173,0.023,174,0.023]],["title/interfaces/DateControlOptions.html",[0,0.139,137,0.453]],["body/interfaces/DateControlOptions.html",[0,0.265,1,0.538,2,0.41,3,0.361,4,0.361,5,0.315,6,0.229,7,0.19,8,0.229,9,0.361,10,1.084,11,0.854,12,0.271,13,0.463,14,1.049,15,1.143,16,0.989,17,0.776,18,1.156,19,1.128,20,0.866,21,0.671,22,0.662,24,0.041,25,0.784,26,0.918,27,1.074,28,1.001,29,0.989,30,0.919,31,0.919,32,0.807,34,0.732,35,0.524,36,0.462,37,0.462,38,0.462,39,0.524,40,0.674,41,0.878,42,0.315,43,0.789,44,0.789,45,0.315,46,0.462,47,0.671,48,0.539,49,0.539,50,0.41,51,0.931,52,0.41,53,0.462,54,0.41,55,0.773,56,0.462,57,0.41,58,0.562,59,0.462,60,0.41,61,0.75,62,0.393,63,0.457,64,0.538,65,0.538,66,0.538,67,0.59,68,0.457,69,0.538,70,0.538,71,0.538,72,0.538,73,0.538,74,0.538,75,0.671,76,0.595,77,0.41,78,0.41,79,0.839,80,0.462,81,0.816,82,0.749,83,0.671,84,0.671,85,0.463,86,0.671,87,0.524,88,0.789,89,0.595,90,0.671,91,0.595,92,0.462,93,0.462,94,0.671,95,0.671,96,0.462,97,0.595,98,0.671,99,0.271,100,0.524,101,0.462,102,0.41,103,0.959,104,0.959,105,0.989,106,0.315,107,0.361,108,0.462,109,0.866,110,0.462,111,0.671,112,0.524,113,0.462,114,0.671,115,0.671,116,0.953,117,0.361,118,0.462,119,0.462,120,0.462,121,0.462,122,0.462,123,0.462,124,0.462,125,0.462,126,0.671,127,0.789,128,0.671,129,0.671,130,0.671,131,0.789,132,1.074,133,0.462,134,0.462,135,0.959,136,0.789,137,0.676,138,0.623,139,0.462,140,0.626,141,0.866,142,0.789,143,1.013,144,0.959,145,0.463,146,0.462,147,0.462,148,0.462,149,0.361,150,0.524,151,0.462,152,0.462,153,0.462,154,1.033,155,0.768,156,0.7,157,0.899,158,1.013,159,1.013,160,0.462,161,0.671,162,0.462,163,0.462,164,0.457,165,0.462,166,0.462,167,0.41,168,0.524,169,0.671,170,0.462,171,0.462,172,0.315,173,0.023,174,0.023]],["title/interfaces/DatePickerControlOptions.html",[0,0.139,67,0.395]],["body/interfaces/DatePickerControlOptions.html",[0,0.265,1,0.541,2,0.414,3,0.365,4,0.365,5,0.318,6,0.232,7,0.192,8,0.232,9,0.365,10,1.095,11,0.861,12,0.274,13,0.465,14,0.87,15,1.154,16,0.87,17,0.783,18,1.157,19,1.144,20,0.87,21,0.676,22,0.667,23,0.938,24,0.041,25,0.785,26,0.919,27,1.086,28,0.971,29,0.923,30,0.87,31,0.87,32,0.808,34,0.74,35,0.528,36,0.467,37,0.467,38,0.467,39,0.528,40,0.676,41,0.88,42,0.318,43,0.794,44,0.794,45,0.318,46,0.467,47,0.676,48,0.541,49,0.541,50,0.414,51,0.933,52,0.414,53,0.467,54,0.414,55,0.68,56,0.467,57,0.414,58,0.563,59,0.467,60,0.414,61,0.751,62,0.396,63,0.46,64,0.541,65,0.541,66,0.541,67,0.629,68,0.46,69,0.541,70,0.541,71,0.541,72,0.541,73,0.541,74,0.541,75,0.676,76,0.6,77,0.414,78,0.414,79,0.841,80,0.467,81,0.819,82,0.752,83,0.676,84,0.676,85,0.465,86,0.676,87,0.528,88,0.794,89,0.6,90,0.676,91,0.6,92,0.467,93,0.467,94,0.676,95,0.676,96,0.467,97,0.6,98,0.676,99,0.274,100,0.528,101,0.467,102,0.414,103,0.962,104,0.962,105,0.992,106,0.318,107,0.365,108,0.467,109,0.87,110,0.467,111,0.676,112,0.528,113,0.467,114,0.676,115,0.676,116,0.955,117,0.365,118,0.467,119,0.467,120,0.467,121,0.467,122,0.467,123,0.467,124,0.467,125,0.467,126,0.676,127,0.794,128,0.676,129,0.676,130,0.676,131,0.794,132,0.992,133,0.467,134,0.467,135,0.962,136,0.794,137,0.62,138,0.596,139,0.467,140,0.593,141,0.467,142,0.676,143,0.87,144,0.676,145,0.465,146,0.467,147,0.467,148,0.467,149,0.365,150,0.528,151,0.467,152,0.467,153,0.467,154,1.035,155,0.772,156,0.704,157,0.902,158,1.016,159,1.016,160,0.467,161,0.676,162,0.467,163,0.467,164,0.46,165,0.467,166,0.467,167,0.414,168,0.528,169,0.676,170,0.467,171,0.467,172,0.318,173,0.023,174,0.023]],["title/interfaces/EmbeddedFormOptions.html",[0,0.139,63,0.395]],["body/interfaces/EmbeddedFormOptions.html",[0,0.265,1,0.543,2,0.417,3,0.367,4,0.367,5,0.32,6,0.233,7,0.193,8,0.233,9,0.367,10,1.096,11,0.862,12,0.276,13,0.467,15,1.145,16,0.873,17,0.784,18,1.157,19,1.131,20,0.873,21,0.679,22,0.665,24,0.041,25,0.784,26,0.919,27,1.078,28,0.973,29,0.925,30,0.873,31,0.873,32,0.808,34,0.734,35,0.53,36,0.47,37,0.47,38,0.47,39,0.53,40,0.677,41,0.882,42,0.32,43,0.797,44,0.797,45,0.32,46,0.47,47,0.679,48,0.543,49,0.543,50,0.417,51,0.934,52,0.417,53,0.47,54,0.417,55,0.682,56,0.47,57,0.417,58,0.563,59,0.47,60,0.417,61,0.752,62,0.512,63,0.543,64,0.543,65,0.543,66,0.543,67,0.594,68,0.462,69,0.543,70,0.543,71,0.543,72,0.543,73,0.543,74,0.543,75,0.679,76,0.602,77,0.417,78,0.417,79,0.842,80,0.47,81,0.821,82,0.753,83,0.679,84,0.679,85,0.512,86,0.679,87,0.53,88,0.797,89,0.602,90,0.679,91,0.602,92,0.47,93,0.47,94,0.679,95,0.679,96,0.47,97,0.602,98,0.679,99,0.276,100,0.753,101,0.679,102,0.417,103,0.964,104,0.964,105,0.994,106,0.32,107,0.367,108,0.47,109,0.873,110,0.47,111,0.679,112,0.53,113,0.47,114,0.679,115,0.679,116,0.956,117,0.367,118,0.47,119,0.47,120,0.47,121,0.47,122,0.47,123,0.47,124,0.47,125,0.47,126,0.679,127,0.797,128,0.679,129,0.679,130,0.679,131,0.797,132,0.994,133,0.47,134,0.47,135,0.964,136,0.797,137,0.623,138,0.597,139,0.47,140,0.594,141,0.47,142,0.679,143,0.873,144,0.679,145,0.467,146,0.47,147,0.47,148,0.47,149,0.367,150,0.53,151,0.47,152,0.47,153,0.47,154,1.037,155,0.774,156,0.707,157,0.903,158,1.018,159,1.018,160,0.47,161,0.679,162,0.47,163,0.47,164,0.462,165,0.47,166,0.47,167,0.417,168,0.53,169,0.679,170,0.47,171,0.47,172,0.32,173,0.023,174,0.023]],["title/components/FluentFormComponent.html",[175,1.661,176,1.661]],["body/components/FluentFormComponent.html",[3,0.357,4,0.357,5,0.311,6,0.573,7,0.48,8,0.573,12,0.268,13,0.39,14,1.03,17,0.722,22,0.661,24,0.041,25,0.534,26,0.913,28,0.764,32,0.453,40,0.65,41,0.812,42,0.311,45,0.311,48,0.46,49,0.39,51,0.875,52,0.405,55,0.613,58,0.427,61,0.311,62,0.644,79,0.77,82,0.77,85,0.648,87,0.613,91,0.405,97,0.405,99,0.46,100,0.864,106,0.311,112,0.357,116,0.986,138,0.56,140,0.311,145,0.46,149,0.357,156,0.847,164,0.311,172,0.453,173,0.022,174,0.022,175,2.248,176,2.738,177,3.463,178,2.38,179,2.38,180,2.38,181,1.959,182,3.463,183,4.083,184,2.38,185,3.463,186,2.448,187,2.886,188,2.448,189,2.886,190,2.448,191,2.78,192,4.083,193,3.463,194,4.083,195,3.463,196,3.463,197,5.945,198,4.083,199,4.083,200,4.083,201,4.083,202,3.463,203,3.463,204,3.463,205,3.463,206,3.463,207,4.484,208,4.484,209,4.484,210,4.484,211,3.463,212,3.463,213,3.463,214,3.463,215,4.083,216,4.083,217,4.083,218,4.083,219,2.851,220,4.083,221,4.083,222,3.463,223,4.415,224,4.083,225,6,226,3.463,227,4.485,228,4.094,229,2.38,230,2.38,231,2.38,232,3.463,233,2.38,234,5.133,235,2.38,236,3.463,237,5.757,238,2.38,239,5.363,240,5.634,241,3.463,242,2.38,243,3.463,244,2.38,245,3.463,246,4.676,247,2.38,248,2.38,249,2.38,250,2.38,251,2.38,252,3.463,253,2.38,254,4.083,255,3.463,256,2.38,257,3.463,258,2.38,259,2.38,260,2.38,261,3.923,262,3.851,263,2.38,264,2.38,265,2.38,266,2.38,267,2.38,268,2.38,269,2.38,270,2.38,271,2.38,272,2.38,273,3.463,274,3.463,275,3.463,276,1.959,277,2.38,278,2.38,279,1.959,280,2.38,281,1.682,282,4.094,283,3.463,284,3.463,285,2.38,286,2.38,287,3.463,288,2.38,289,2.38,290,2.38,291,2.38,292,2.38,293,2.38,294,2.38,295,2.38,296,4.484,297,3.463,298,2.38,299,2.38,300,3.463,301,2.38,302,2.38,303,2.38,304,2.38,305,4.973,306,4.083,307,4.484,308,2.38,309,2.38,310,2.38,311,3.463,312,2.38,313,3.463,314,2.38,315,5.363,316,2.38,317,1.959,318,1.959,319,2.38,320,2.38,321,2.38,322,2.38,323,2.38,324,2.38,325,4.083,326,4.765,327,4.083,328,4.083,329,2.38,330,2.38,331,2.38,332,2.38,333,4.083,334,4.083,335,3.463,336,3.463,337,3.463,338,3.463,339,2.38,340,2.38,341,2.38,342,2.38,343,3.463,344,2.38,345,2.38,346,2.38,347,2.38,348,2.38,349,2.38,350,2.38,351,2.38,352,2.38,353,2.38,354,3.463,355,4.484,356,2.38,357,2.38,358,5.133,359,2.38,360,2.38,361,3.463,362,2.38,363,2.38,364,2.38,365,2.38,366,2.38,367,2.38,368,3.463,369,3.463,370,2.38,371,4.484,372,2.38,373,2.38,374,2.38]],["title/modules/FluentFormModule.html",[375,2.133,376,1.661]],["body/modules/FluentFormModule.html",[3,0.598,4,0.598,5,0.521,6,0.38,7,0.386,8,0.38,24,0.041,40,0.805,42,0.521,45,0.521,48,0.687,49,0.687,50,0.679,54,0.679,55,0.735,57,0.835,58,0.38,60,0.679,61,0.521,173,0.032,174,0.032,176,3.394,186,3.75,187,3.75,188,3.75,189,3.75,190,4.016,191,3.522,276,3.28,281,2.816,376,3.226,377,2.816,378,3.037,379,3.28,380,3.28,381,3.28,382,3.28,383,4.033,384,3.28,385,2.816,386,3.984,387,4.899,388,4.899,389,4.899,390,3.28,391,4.033,392,4.899,393,4.899,394,3.984,395,4.899,396,4.899,397,4.899,398,4.899,399,3.984,400,4.899,401,3.984,402,4.899,403,4.899,404,4.899,405,3.984,406,4.899,407,4.899,408,3.984,409,4.899,410,3.984,411,4.899,412,3.984,413,4.899,414,3.984,415,3.984,416,3.28]],["title/interfaces/FormControlOptions.html",[0,0.139,11,0.453]],["body/interfaces/FormControlOptions.html",[0,0.264,1,0.529,2,0.398,3,0.351,4,0.351,5,0.306,6,0.223,7,0.184,8,0.223,9,0.351,10,1.078,11,0.856,12,0.263,13,0.455,14,1.087,15,1.139,16,0.854,17,0.782,18,1.153,19,1.124,20,0.854,21,0.656,22,0.679,24,0.041,25,0.794,26,0.916,27,1.068,28,0.989,29,0.908,30,0.854,31,0.854,32,0.809,33,1.367,34,0.727,35,0.513,36,0.449,37,0.449,38,0.449,39,0.513,40,0.668,41,0.87,42,0.306,43,0.98,44,0.98,45,0.306,46,0.449,47,0.656,48,0.533,49,0.533,50,0.398,51,0.924,52,0.398,53,0.449,54,0.398,55,0.667,56,0.449,57,0.398,58,0.564,59,0.449,60,0.398,61,0.746,62,0.385,63,0.447,64,0.529,65,0.529,66,0.529,67,0.582,68,0.447,69,0.529,70,0.529,71,0.529,72,0.529,73,0.529,74,0.529,75,0.776,76,0.842,77,0.582,78,0.582,79,0.861,80,0.656,81,0.91,82,0.741,83,0.656,84,0.656,85,0.455,86,0.656,87,0.513,88,0.98,89,0.688,90,0.776,91,0.806,92,0.656,93,0.656,94,0.908,95,0.949,96,0.656,97,0.688,98,0.908,99,0.263,100,0.513,101,0.449,102,0.398,103,0.949,104,0.949,105,0.98,106,0.306,107,0.351,108,0.449,109,0.854,110,0.449,111,0.656,112,0.513,113,0.449,114,0.656,115,0.656,116,0.948,117,0.351,118,0.449,119,0.449,120,0.449,121,0.449,122,0.449,123,0.449,124,0.449,125,0.449,126,0.656,127,0.776,128,0.656,129,0.656,130,0.656,131,0.776,132,0.98,133,0.449,134,0.449,135,0.949,136,0.776,137,0.606,138,0.589,139,0.449,140,0.582,141,0.449,142,0.656,143,0.854,144,0.656,145,0.455,146,0.449,147,0.449,148,0.449,149,0.351,150,0.513,151,0.449,152,0.449,153,0.449,154,1.025,155,0.757,156,0.688,157,0.892,158,1.005,159,1.005,160,0.449,161,0.656,162,0.449,163,0.449,164,0.447,165,0.449,166,0.449,167,0.398,168,0.513,169,0.656,170,0.449,171,0.449,172,0.306,173,0.022,174,0.022]],["title/interfaces/InputControlOptions.html",[0,0.139,64,0.395]],["body/interfaces/InputControlOptions.html",[0,0.264,1,0.531,2,0.401,3,0.353,4,0.353,5,0.308,6,0.224,7,0.185,8,0.224,9,0.353,10,1.089,11,0.857,12,0.265,13,0.457,14,1.069,15,1.151,16,0.857,17,0.781,18,1.153,19,1.14,20,0.857,21,0.66,22,0.679,23,0.915,24,0.041,25,0.782,26,0.918,27,1.08,28,0.966,29,0.911,30,0.857,31,0.857,32,0.809,33,1.784,34,0.747,35,0.515,36,0.452,37,0.452,38,0.452,39,0.515,40,0.669,41,0.938,42,0.308,43,0.779,44,0.779,45,0.308,46,0.452,47,0.66,48,0.534,49,0.534,50,0.401,51,0.926,52,0.401,53,0.452,54,0.401,55,0.669,56,0.452,57,0.401,58,0.56,59,0.452,60,0.401,61,0.747,62,0.387,63,0.449,64,0.584,65,0.531,66,0.531,67,0.584,68,0.449,69,0.531,70,0.531,71,0.531,72,0.531,73,0.531,74,0.531,75,0.66,76,0.585,77,0.401,78,0.401,79,0.851,80,0.452,81,0.808,82,0.815,83,0.66,84,0.66,85,0.457,86,0.66,87,0.515,88,0.779,89,0.585,90,0.66,91,0.585,92,0.452,93,0.452,94,0.66,95,0.66,96,0.452,97,0.585,98,0.66,99,0.265,100,0.515,101,0.452,102,0.401,103,0.951,104,0.951,105,0.982,106,0.531,107,0.609,108,0.66,109,1.007,110,0.857,111,0.66,112,0.515,113,0.66,114,0.951,115,0.951,116,0.949,117,0.353,118,0.452,119,0.452,120,0.452,121,0.452,122,0.452,123,0.452,124,0.452,125,0.452,126,0.66,127,0.779,128,0.66,129,0.66,130,0.66,131,0.779,132,0.982,133,0.452,134,0.452,135,0.951,136,0.779,137,0.609,138,0.59,139,0.452,140,0.584,141,0.452,142,0.66,143,0.857,144,0.66,145,0.457,146,0.452,147,0.452,148,0.452,149,0.353,150,0.515,151,0.452,152,0.452,153,0.452,154,1.027,155,0.76,156,0.691,157,0.893,158,1.007,159,1.007,160,0.452,161,0.66,162,0.452,163,0.452,164,0.449,165,0.452,166,0.452,167,0.401,168,0.515,169,0.66,170,0.452,171,0.452,172,0.308,173,0.022,174,0.022]],["title/interfaces/NumberInputControlOptions.html",[0,0.139,66,0.395]],["body/interfaces/NumberInputControlOptions.html",[0,0.264,1,0.533,2,0.405,3,0.356,4,0.356,5,0.311,6,0.226,7,0.187,8,0.226,9,0.356,10,1.09,11,0.858,12,0.267,13,0.459,14,1.09,15,1.152,16,0.86,17,0.781,18,1.154,19,1.141,20,0.86,21,0.664,22,0.673,23,0.921,24,0.041,25,0.783,26,0.92,27,1.081,28,0.967,29,0.914,30,0.86,31,0.86,32,0.808,34,0.737,35,0.519,36,0.456,37,0.456,38,0.456,39,0.519,40,0.671,41,0.874,42,0.311,43,0.783,44,0.783,45,0.311,46,0.456,47,0.664,48,0.536,49,0.536,50,0.405,51,0.928,52,0.405,53,0.456,54,0.405,55,0.672,56,0.456,57,0.405,58,0.573,59,0.456,60,0.405,61,0.748,62,0.389,63,0.452,64,0.533,65,0.533,66,0.586,67,0.586,68,0.452,69,0.533,70,0.533,71,0.533,72,0.533,73,0.533,74,0.533,75,0.664,76,0.589,77,0.405,78,0.405,79,0.837,80,0.456,81,0.811,82,0.745,83,0.664,84,0.664,85,0.459,86,0.664,87,0.519,88,0.783,89,0.589,90,0.664,91,0.589,92,0.456,93,0.456,94,0.664,95,0.664,96,0.456,97,0.589,98,0.664,99,0.267,100,0.519,101,0.456,102,0.405,103,0.954,104,0.954,105,0.985,106,0.311,107,0.356,108,0.456,109,0.86,110,0.456,111,0.664,112,0.519,113,0.456,114,0.664,115,0.664,116,0.951,117,0.356,118,0.456,119,0.456,120,0.456,121,0.456,122,0.456,123,0.456,124,0.456,125,0.456,126,0.783,127,0.954,128,0.783,129,0.914,130,0.86,131,1.009,132,1.009,133,0.86,134,0.456,135,1.046,136,0.86,137,0.612,138,0.592,139,0.456,140,0.586,141,0.456,142,0.664,143,0.86,144,0.664,145,0.459,146,0.456,147,0.456,148,0.456,149,0.356,150,0.519,151,0.456,152,0.456,153,0.456,154,1.029,155,0.763,156,0.695,157,0.896,158,1.009,159,1.009,160,0.456,161,0.664,162,0.456,163,0.456,164,0.452,165,0.456,166,0.456,167,0.405,168,0.519,169,0.664,170,0.456,171,0.456,172,0.311,173,0.022,174,0.022]],["title/interfaces/RadioControlOptions.html",[0,0.139,73,0.395]],["body/interfaces/RadioControlOptions.html",[0,0.265,1,0.539,2,0.412,3,0.363,4,0.363,5,0.316,6,0.23,7,0.19,8,0.23,9,0.363,10,1.094,11,0.86,12,0.272,13,0.464,14,0.867,15,1.154,16,0.867,17,0.783,18,1.162,19,1.129,20,0.867,21,0.672,22,0.672,23,0.933,24,0.041,25,0.786,26,0.919,27,1.085,28,0.97,29,0.921,30,0.867,31,0.867,32,0.807,33,1.4,34,0.732,35,0.525,36,0.464,37,0.464,38,0.464,39,0.525,40,0.675,41,0.879,42,0.316,43,0.791,44,0.791,45,0.316,46,0.464,47,0.672,48,0.54,49,0.54,50,0.412,51,0.931,52,0.412,53,0.464,54,0.412,55,0.678,56,0.464,57,0.412,58,0.562,59,0.464,60,0.412,61,0.75,62,0.394,63,0.458,64,0.539,65,0.539,66,0.539,67,0.591,68,0.458,69,0.539,70,0.539,71,0.539,72,0.539,73,0.591,74,0.539,75,0.672,76,0.597,77,0.412,78,0.412,79,0.84,80,0.464,81,0.817,82,0.75,83,0.672,84,0.672,85,0.464,86,0.672,87,0.525,88,0.791,89,0.597,90,0.672,91,0.597,92,0.464,93,0.464,94,0.672,95,0.672,96,0.464,97,0.597,98,0.672,99,0.272,100,0.525,101,0.464,102,0.412,103,0.96,104,0.96,105,0.99,106,0.316,107,0.363,108,0.464,109,0.867,110,0.464,111,0.672,112,0.525,113,0.464,114,0.672,115,0.672,116,0.954,117,0.363,118,0.464,119,0.464,120,0.464,121,0.464,122,0.464,123,0.464,124,0.464,125,0.464,126,0.672,127,0.791,128,0.672,129,0.672,130,0.672,131,0.791,132,0.99,133,0.464,134,0.464,135,0.96,136,0.791,137,0.618,138,0.595,139,0.464,140,0.591,141,0.464,142,0.672,143,0.867,144,0.672,145,0.464,146,0.464,147,0.464,148,0.464,149,0.363,150,0.525,151,0.464,152,0.464,153,0.464,154,1.034,155,0.77,156,0.702,157,0.9,158,1.014,159,1.014,160,0.464,161,0.672,162,0.464,163,0.464,164,0.458,165,0.464,166,0.464,167,0.412,168,0.618,169,0.96,170,0.791,171,0.791,172,0.316,173,0.023,174,0.023]],["title/interfaces/RangePickerControlOptions.html",[0,0.139,68,0.395]],["body/interfaces/RangePickerControlOptions.html",[0,0.265,1,0.54,2,0.414,3,0.364,4,0.364,5,0.318,6,0.231,7,0.191,8,0.231,9,0.364,10,1.094,11,0.861,12,0.273,13,0.465,14,0.869,15,1.154,16,0.869,17,0.783,18,1.156,19,1.144,20,0.869,21,0.675,22,0.667,23,0.936,24,0.041,25,0.785,26,0.919,27,1.086,28,0.971,29,0.922,30,0.869,31,0.869,32,0.809,34,0.74,35,0.527,36,0.466,37,0.466,38,0.466,39,0.527,40,0.675,41,0.88,42,0.318,43,0.793,44,0.793,45,0.318,46,0.466,47,0.675,48,0.541,49,0.541,50,0.414,51,0.932,52,0.414,53,0.466,54,0.414,55,0.679,56,0.466,57,0.414,58,0.563,59,0.466,60,0.414,61,0.751,62,0.396,63,0.46,64,0.54,65,0.54,66,0.54,67,0.592,68,0.54,69,0.54,70,0.54,71,0.54,72,0.54,73,0.54,74,0.54,75,0.675,76,0.599,77,0.414,78,0.414,79,0.841,80,0.466,81,0.818,82,0.751,83,0.675,84,0.675,85,0.465,86,0.675,87,0.527,88,0.793,89,0.599,90,0.675,91,0.599,92,0.466,93,0.466,94,0.675,95,0.675,96,0.466,97,0.599,98,0.675,99,0.273,100,0.527,101,0.466,102,0.414,103,0.962,104,0.962,105,0.992,106,0.318,107,0.364,108,0.466,109,0.869,110,0.466,111,0.675,112,0.527,113,0.466,114,0.675,115,0.675,116,0.955,117,0.364,118,0.466,119,0.466,120,0.466,121,0.466,122,0.466,123,0.466,124,0.466,125,0.466,126,0.675,127,0.793,128,0.675,129,0.675,130,0.675,131,0.793,132,0.992,133,0.466,134,0.466,135,0.962,136,0.793,137,0.62,138,0.595,139,0.466,140,0.592,141,0.466,142,0.675,143,0.869,144,0.675,145,0.465,146,0.466,147,0.466,148,0.466,149,0.364,150,0.527,151,0.466,152,0.466,153,0.466,154,1.035,155,0.771,156,0.704,157,0.901,158,1.015,159,1.015,160,0.466,161,0.675,162,0.466,163,0.466,164,0.46,165,0.466,166,0.466,167,0.414,168,0.527,169,0.675,170,0.466,171,0.466,172,0.318,173,0.023,174,0.023]],["title/interfaces/SelectControlOptions.html",[0,0.139,71,0.395]],["body/interfaces/SelectControlOptions.html",[0,0.264,1,0.534,2,0.405,3,0.356,4,0.356,5,0.311,6,0.226,7,0.187,8,0.226,9,0.356,10,1.09,11,0.858,12,0.267,13,0.459,14,1.071,15,1.152,16,0.985,17,0.781,18,1.16,19,1.141,20,1.009,21,0.664,22,0.675,23,0.922,24,0.041,25,0.785,26,0.918,27,1.081,28,0.991,29,0.954,30,0.914,31,0.914,32,0.808,33,1.383,34,0.737,35,0.612,36,0.456,37,0.456,38,0.456,39,0.519,40,0.671,41,0.874,42,0.311,43,0.783,44,0.783,45,0.311,46,0.456,47,0.664,48,0.536,49,0.536,50,0.405,51,0.928,52,0.405,53,0.456,54,0.405,55,0.672,56,0.456,57,0.405,58,0.565,59,0.456,60,0.405,61,0.748,62,0.389,63,0.452,64,0.534,65,0.534,66,0.534,67,0.586,68,0.452,69,0.534,70,0.534,71,0.586,72,0.534,73,0.534,74,0.534,75,0.664,76,0.589,77,0.405,78,0.405,79,0.837,80,0.456,81,0.811,82,0.746,83,0.664,84,0.664,85,0.459,86,0.664,87,0.519,88,0.783,89,0.589,90,0.664,91,0.589,92,0.456,93,0.456,94,0.664,95,0.664,96,0.456,97,0.589,98,0.664,99,0.267,100,0.519,101,0.456,102,0.405,103,0.954,104,0.954,105,0.985,106,0.311,107,0.356,108,0.456,109,0.86,110,0.456,111,0.664,112,0.519,113,0.456,114,0.664,115,0.664,116,0.951,117,0.356,118,0.456,119,0.456,120,0.456,121,0.456,122,0.456,123,0.456,124,0.456,125,0.456,126,0.664,127,0.86,128,0.664,129,0.664,130,0.664,131,0.783,132,1.059,133,0.456,134,0.456,135,0.954,136,0.783,137,0.612,138,0.592,139,0.456,140,0.586,141,0.456,142,0.664,143,0.86,144,0.664,145,0.459,146,0.456,147,0.456,148,0.456,149,0.356,150,0.612,151,0.456,152,0.664,153,0.86,154,1.029,155,0.763,156,0.695,157,0.896,158,1.009,159,1.009,160,0.456,161,0.664,162,0.456,163,0.456,164,0.452,165,0.456,166,0.456,167,0.405,168,0.519,169,0.664,170,0.456,171,0.456,172,0.311,173,0.022,174,0.022]],["title/interfaces/SliderControlOptions.html",[0,0.139,72,0.395]],["body/interfaces/SliderControlOptions.html",[0,0.264,1,0.533,2,0.403,3,0.355,4,0.355,5,0.31,6,0.226,7,0.187,8,0.226,9,0.355,10,1.09,11,0.858,12,0.267,13,0.458,14,1.09,15,1.152,16,0.859,17,0.781,18,1.154,19,1.141,20,0.859,21,0.663,22,0.674,23,0.919,24,0.041,25,0.783,26,0.92,27,1.081,28,0.991,29,0.913,30,0.859,31,0.859,32,0.807,34,0.736,35,0.518,36,0.455,37,0.455,38,0.455,39,0.518,40,0.67,41,0.873,42,0.31,43,0.782,44,0.782,45,0.31,46,0.455,47,0.663,48,0.535,49,0.535,50,0.403,51,0.927,52,0.403,53,0.455,54,0.403,55,0.671,56,0.455,57,0.403,58,0.57,59,0.455,60,0.403,61,0.748,62,0.389,63,0.451,64,0.533,65,0.533,66,0.533,67,0.585,68,0.451,69,0.533,70,0.533,71,0.533,72,0.585,73,0.533,74,0.533,75,0.663,76,0.588,77,0.403,78,0.403,79,0.837,80,0.455,81,0.81,82,0.745,83,0.663,84,0.663,85,0.458,86,0.663,87,0.518,88,0.782,89,0.588,90,0.663,91,0.588,92,0.455,93,0.455,94,0.663,95,0.663,96,0.455,97,0.588,98,0.663,99,0.267,100,0.518,101,0.455,102,0.403,103,0.953,104,0.953,105,1.028,106,0.31,107,0.355,108,0.455,109,0.859,110,0.455,111,0.663,112,0.518,113,0.455,114,0.663,115,0.663,116,0.95,117,0.355,118,0.455,119,0.455,120,0.455,121,0.455,122,0.455,123,0.455,124,0.455,125,0.455,126,0.782,127,0.953,128,0.782,129,0.913,130,0.663,131,0.782,132,1.009,133,0.455,134,0.455,135,1.045,136,0.859,137,0.611,138,0.591,139,0.455,140,0.585,141,0.455,142,0.663,143,0.859,144,0.663,145,0.577,146,0.455,147,0.455,148,0.455,149,0.355,150,0.518,151,0.455,152,0.455,153,0.455,154,1.028,155,0.762,156,0.694,157,0.895,158,1.009,159,1.009,160,0.455,161,0.663,162,0.455,163,0.455,164,0.533,165,0.663,166,0.663,167,0.762,168,0.518,169,0.663,170,0.455,171,0.455,172,0.31,173,0.022,174,0.022]],["title/interfaces/SwitchControlOptions.html",[0,0.139,70,0.395]],["body/interfaces/SwitchControlOptions.html",[0,0.265,1,0.54,2,0.414,3,0.365,4,0.365,5,0.318,6,0.232,7,0.192,8,0.232,9,0.365,10,1.095,11,0.861,12,0.274,13,0.465,14,0.87,15,1.154,16,0.87,17,0.783,18,1.157,19,1.144,20,0.87,21,0.675,22,0.667,23,0.937,24,0.041,25,0.785,26,0.919,27,1.086,28,0.971,29,0.923,30,0.87,31,0.87,32,0.808,34,0.74,35,0.528,36,0.467,37,0.467,38,0.467,39,0.528,40,0.676,41,0.88,42,0.318,43,0.793,44,0.793,45,0.318,46,0.467,47,0.675,48,0.541,49,0.541,50,0.414,51,0.933,52,0.414,53,0.467,54,0.414,55,0.679,56,0.467,57,0.414,58,0.563,59,0.467,60,0.414,61,0.751,62,0.396,63,0.46,64,0.54,65,0.54,66,0.54,67,0.592,68,0.46,69,0.54,70,0.592,71,0.54,72,0.54,73,0.54,74,0.54,75,0.675,76,0.599,77,0.414,78,0.414,79,0.841,80,0.467,81,0.819,82,0.751,83,0.675,84,0.675,85,0.465,86,0.675,87,0.528,88,0.793,89,0.599,90,0.675,91,0.599,92,0.467,93,0.467,94,0.675,95,0.675,96,0.467,97,0.599,98,0.675,99,0.274,100,0.528,101,0.467,102,0.414,103,0.962,104,0.962,105,0.992,106,0.318,107,0.365,108,0.467,109,0.87,110,0.467,111,0.675,112,0.528,113,0.467,114,0.675,115,0.675,116,0.955,117,0.365,118,0.467,119,0.467,120,0.467,121,0.467,122,0.467,123,0.467,124,0.467,125,0.467,126,0.675,127,0.793,128,0.675,129,0.675,130,0.675,131,0.793,132,0.992,133,0.467,134,0.467,135,0.962,136,0.793,137,0.62,138,0.596,139,0.467,140,0.592,141,0.467,142,0.675,143,0.87,144,0.675,145,0.465,146,0.467,147,0.467,148,0.467,149,0.365,150,0.528,151,0.467,152,0.467,153,0.467,154,1.035,155,0.772,156,0.704,157,0.901,158,1.016,159,1.016,160,0.467,161,0.675,162,0.467,163,0.467,164,0.46,165,0.467,166,0.467,167,0.414,168,0.528,169,0.675,170,0.467,171,0.467,172,0.318,173,0.023,174,0.023]],["title/interfaces/TextareaControlOptions.html",[0,0.139,65,0.395]],["body/interfaces/TextareaControlOptions.html",[0,0.265,1,0.536,2,0.408,3,0.36,4,0.36,5,0.313,6,0.228,7,0.189,8,0.228,9,0.36,10,1.092,11,0.859,12,0.27,13,0.462,14,1.012,15,1.153,16,0.864,17,0.782,18,1.155,19,1.142,20,0.864,21,0.668,22,0.673,23,0.927,24,0.041,25,0.784,26,0.919,27,1.083,28,0.982,29,0.918,30,0.864,31,0.864,32,0.808,33,1.392,34,0.744,35,0.522,36,0.46,37,0.46,38,0.46,39,0.522,40,0.673,41,0.876,42,0.313,43,0.787,44,0.787,45,0.313,46,0.46,47,0.668,48,0.538,49,0.538,50,0.408,51,0.93,52,0.408,53,0.46,54,0.408,55,0.675,56,0.46,57,0.408,58,0.567,59,0.46,60,0.408,61,0.749,62,0.392,63,0.455,64,0.536,65,0.588,66,0.536,67,0.588,68,0.455,69,0.536,70,0.536,71,0.536,72,0.536,73,0.536,74,0.536,75,0.787,76,0.593,77,0.408,78,0.408,79,0.838,80,0.46,81,0.814,82,0.748,83,0.668,84,0.668,85,0.462,86,0.668,87,0.522,88,0.787,89,0.698,90,0.668,91,0.593,92,0.46,93,0.46,94,0.668,95,0.668,96,0.46,97,0.593,98,0.668,99,0.27,100,0.522,101,0.46,102,0.408,103,0.957,104,0.957,105,0.988,106,0.313,107,0.36,108,0.46,109,0.864,110,0.46,111,0.668,112,0.522,113,0.46,114,0.668,115,0.668,116,0.952,117,0.36,118,0.668,119,0.864,120,0.668,121,0.668,122,0.668,123,0.864,124,0.46,125,0.46,126,0.668,127,0.787,128,0.668,129,0.668,130,0.668,131,0.787,132,0.988,133,0.46,134,0.46,135,0.957,136,0.787,137,0.615,138,0.593,139,0.46,140,0.588,141,0.46,142,0.668,143,0.864,144,0.668,145,0.462,146,0.46,147,0.46,148,0.46,149,0.36,150,0.522,151,0.46,152,0.46,153,0.46,154,1.031,155,0.767,156,0.698,157,0.898,158,1.012,159,1.012,160,0.46,161,0.668,162,0.46,163,0.46,164,0.455,165,0.46,166,0.46,167,0.408,168,0.522,169,0.668,170,0.46,171,0.46,172,0.313,173,0.023,174,0.023]],["title/interfaces/TimePickerControlOptions.html",[0,0.139,69,0.395]],["body/interfaces/TimePickerControlOptions.html",[0,0.264,1,0.535,2,0.407,3,0.359,4,0.359,5,0.313,6,0.228,7,0.188,8,0.228,9,0.359,10,1.091,11,0.859,12,0.269,13,0.461,14,1.047,15,1.153,16,0.987,17,0.782,18,1.155,19,1.142,20,0.863,21,0.667,22,0.674,23,0.926,24,0.041,25,0.784,26,0.919,27,1.083,28,0.982,29,0.956,30,0.917,31,0.917,32,0.809,33,1.389,34,0.738,35,0.521,36,0.459,37,0.459,38,0.459,39,0.521,40,0.672,41,0.876,42,0.313,43,0.786,44,0.786,45,0.313,46,0.459,47,0.667,48,0.537,49,0.537,50,0.407,51,0.929,52,0.407,53,0.459,54,0.407,55,0.674,56,0.459,57,0.407,58,0.561,59,0.459,60,0.407,61,0.749,62,0.391,63,0.454,64,0.535,65,0.535,66,0.535,67,0.588,68,0.454,69,0.588,70,0.535,71,0.535,72,0.535,73,0.535,74,0.535,75,0.667,76,0.592,77,0.407,78,0.407,79,0.838,80,0.459,81,0.813,82,0.747,83,0.667,84,0.667,85,0.461,86,0.667,87,0.521,88,0.786,89,0.592,90,0.667,91,0.592,92,0.459,93,0.459,94,0.667,95,0.667,96,0.459,97,0.592,98,0.667,99,0.269,100,0.521,101,0.459,102,0.407,103,0.956,104,0.956,105,0.987,106,0.313,107,0.359,108,0.459,109,0.863,110,0.459,111,0.667,112,0.521,113,0.459,114,0.667,115,0.667,116,0.952,117,0.359,118,0.459,119,0.459,120,0.459,121,0.459,122,0.459,123,0.459,124,0.459,125,0.459,126,0.667,127,0.786,128,0.667,129,0.667,130,0.667,131,0.786,132,0.987,133,0.459,134,0.459,135,1.047,136,0.863,137,0.614,138,0.593,139,0.459,140,0.651,141,0.459,142,0.786,143,1.011,144,0.667,145,0.461,146,0.459,147,0.459,148,0.459,149,0.359,150,0.521,151,0.459,152,0.459,153,0.459,154,1.031,155,0.766,156,0.697,157,0.897,158,1.011,159,1.011,160,0.459,161,0.667,162,0.459,163,0.459,164,0.454,165,0.459,166,0.459,167,0.407,168,0.521,169,0.667,170,0.459,171,0.459,172,0.313,173,0.022,174,0.022]],["title/coverage.html",[417,3.37]],["body/coverage.html",[0,0.281,1,0.494,5,0.494,6,0.594,7,0.491,8,0.594,9,0.912,11,0.567,22,0.425,24,0.04,34,0.494,39,0.567,58,0.36,63,0.494,64,0.494,65,0.494,66,0.494,67,0.494,68,0.494,69,0.494,70,0.494,71,0.494,72,0.494,73,0.494,74,0.494,85,0.425,99,0.425,106,0.494,107,0.567,117,0.567,137,0.567,138,0.425,140,0.494,145,0.425,150,0.567,164,0.494,168,0.567,172,0.494,173,0.031,174,0.031,175,2.08,176,2.08,181,3.11,262,2.67,417,3.11,418,3.11,419,3.778,420,3.778,421,3.778,422,3.778,423,4.321,424,6.113,425,6.113,426,6.113,427,3.11,428,2.67,429,3.778,430,3.778,431,3.778,432,3.778,433,3.778,434,3.778,435,5.179,436,5.179,437,3.778,438,3.778,439,3.778,440,3.778,441,3.778,442,3.778,443,4.74,444,4.74,445,3.778,446,3.778,447,3.778,448,3.778,449,3.778,450,3.778,451,3.778,452,3.778,453,3.778,454,3.778]],["title/dependencies.html",[378,2.246,455,2.085]],["body/dependencies.html",[24,0.04,42,0.612,45,0.612,48,0.527,49,0.527,173,0.035,174,0.035,279,3.852,378,2.901,390,3.852,456,4.679,457,6.086,458,4.679,459,5.391,460,4.438,461,3.852,462,4.679,463,3.852,464,4.679,465,4.679,466,4.679,467,4.679,468,4.679,469,4.679]],["title/index.html",[12,0.285,470,2.085,471,2.085]],["body/index.html",[7,0.479,13,0.414,17,0.609,22,0.576,24,0.041,25,0.703,32,0.609,34,0.762,35,0.699,40,0.762,48,0.525,49,0.525,58,0.529,61,0.753,62,0.605,76,0.794,77,0.626,78,0.626,79,0.807,81,0.626,82,0.551,85,0.695,87,0.699,99,0.525,100,0.851,112,0.551,138,0.667,145,0.576,149,0.551,155,0.626,157,0.626,173,0.03,174,0.03,175,3.3,191,2.279,219,3.835,223,4.427,227,3.835,262,2.598,281,4.07,317,3.835,318,3.026,375,2.598,376,2.815,391,3.026,416,3.026,428,2.598,461,3.026,463,3.835,472,5.882,473,3.676,474,5.114,475,5.549,476,3.676,477,4.659,478,5.114,479,4.659,480,5.114,481,3.676,482,3.676,483,3.676,484,3.676,485,3.676,486,3.835,487,3.676,488,3.676,489,4.659,490,3.676,491,3.676,492,3.676,493,3.676,494,3.676,495,3.676,496,3.676,497,3.676,498,3.676,499,3.676,500,3.676,501,3.676,502,3.676,503,3.676,504,4.659,505,4.659,506,4.659,507,4.659,508,4.659,509,4.659,510,4.211,511,4.659,512,3.676,513,3.676,514,3.676,515,3.676,516,3.676,517,3.676,518,3.676,519,3.676,520,3.676,521,3.676,522,3.676,523,3.676,524,3.676,525,3.676,526,3.676,527,3.676,528,3.676,529,3.676,530,3.026,531,3.676,532,3.026,533,3.676,534,3.676,535,3.676,536,3.676,537,5.114,538,4.659,539,3.676,540,3.676,541,3.676,542,3.676,543,3.676,544,3.676,545,3.676]],["title/license.html",[470,2.085,471,2.085,546,2.085]],["body/license.html",[24,0.034,89,0.763,102,0.763,167,0.763,173,0.034,174,0.034,261,3.686,385,3.164,418,3.686,510,4.326,532,3.686,546,3.686,547,4.477,548,5.577,549,4.477,550,4.477,551,5.254,552,4.477,553,4.477,554,4.477,555,4.477,556,4.477,557,4.477,558,5.254,559,6.075,560,4.477,561,4.477,562,4.477,563,5.577,564,4.477,565,5.254,566,4.477,567,4.477,568,4.477,569,4.477,570,4.477,571,4.477,572,4.477,573,4.477,574,4.477,575,5.254,576,4.477,577,4.477,578,4.477,579,4.477,580,4.477,581,5.254,582,5.254,583,4.477,584,4.477,585,4.477,586,4.477,587,4.477,588,4.477,589,4.477,590,4.477,591,4.477,592,4.477,593,4.477,594,4.477,595,4.477,596,4.477,597,4.477,598,4.477,599,4.477,600,4.477,601,4.477,602,4.477,603,4.477,604,4.477,605,4.477,606,4.477,607,4.477,608,4.477,609,4.477,610,4.477]],["title/modules.html",[377,2.893]],["body/modules.html",[24,0.036,35,0.726,173,0.036,174,0.036,376,2.662,377,3.419,460,3.982,611,4.837,612,4.837]],["title/overview.html",[613,3.37]],["body/overview.html",[2,0.776,24,0.04,173,0.034,174,0.034,175,2.506,176,3.404,186,3.969,187,3.969,188,3.969,189,3.969,190,4.164,191,3.652,375,3.217,376,3.243,378,3.289,379,3.747,380,3.747,381,3.747,382,3.747,383,4.368,384,3.747,385,3.217,530,4.368,613,3.747,614,4.552]],["title/properties.html",[13,0.408,455,2.085]],["body/properties.html",[13,0.546,24,0.037,173,0.036,174,0.036,615,4.846,616,4.846]],["title/miscellaneous/typealiases.html",[617,1.57,618,3.623]],["body/miscellaneous/typealiases.html",[1,0.608,6,0.512,7,0.423,8,0.512,9,0.806,12,0.524,22,0.524,24,0.04,62,0.605,63,0.608,64,0.608,65,0.608,66,0.608,67,0.608,68,0.608,69,0.608,70,0.608,71,0.608,72,0.608,73,0.608,74,0.608,173,0.035,174,0.035,246,3.828,423,3.797,617,2.882,619,4.65,620,4.422,621,4.422,622,4.65,623,4.65]],["title/miscellaneous/variables.html",[617,1.57,624,2.983]],["body/miscellaneous/variables.html",[6,0.386,7,0.319,8,0.386,12,0.456,17,0.803,24,0.041,25,0.53,26,0.923,32,0.809,34,0.647,39,0.742,58,0.471,62,0.456,85,0.602,99,0.557,106,0.647,107,0.742,117,0.742,138,0.557,140,0.647,145,0.557,150,0.742,164,0.647,168,0.742,172,0.647,173,0.032,174,0.032,228,5.065,282,3.334,423,4.357,427,4.074,428,3.498,486,3.334,617,2.51,620,5.065,621,3.334,624,3.334,625,4.05,626,4.05,627,4.05,628,4.05,629,4.05,630,4.05,631,4.05,632,4.05,633,4.05,634,4.05,635,4.05,636,4.05,637,4.05,638,4.05,639,4.05,640,4.05,641,4.05,642,4.05,643,4.05,644,4.05,645,4.05]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":616,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":530,"title":{},"body":{"index.html":{},"overview.html":{}}}],["1/4",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":432,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":508,"title":{},"body":{"index.html":{}}}],["10/11",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":366,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["13.0.0",{"_index":489,"title":{},"body":{"index.html":{}}}],["13.1.1",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":457,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":614,"title":{},"body":{"overview.html":{}}}],["2",{"_index":533,"title":{},"body":{"index.html":{}}}],["2.3.0",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["2/25",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":436,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":446,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":431,"title":{},"body":{"coverage.html":{}}}],["2022",{"_index":532,"title":{},"body":{"index.html":{},"license.html":{}}}],["22",{"_index":534,"title":{},"body":{"index.html":{}}}],["25",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":435,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":434,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":364,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["6",{"_index":511,"title":{},"body":{"index.html":{}}}],["6/10",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["7.5px",{"_index":362,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["7/10",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":443,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":433,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["_model",{"_index":198,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["_schema",{"_index":199,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["a'date",{"_index":525,"title":{},"body":{"index.html":{}}}],["above",{"_index":580,"title":{},"body":{"license.html":{}}}],["abstractcontrol",{"_index":273,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["accessors",{"_index":222,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["action",{"_index":604,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":374,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["adapt",{"_index":120,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["addonafter",{"_index":215,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["addonbefore",{"_index":216,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["aliases",{"_index":619,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":573,"title":{},"body":{"license.html":{}}}],["angular",{"_index":474,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":456,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":390,"title":{},"body":{"modules/FluentFormModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":458,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":45,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":459,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":462,"title":{},"body":{"dependencies.html":{}}}],["antd",{"_index":463,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["antd/button",{"_index":394,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/cascader",{"_index":50,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/checkbox",{"_index":276,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{}}}],["antd/core/types",{"_index":52,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/date",{"_index":54,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/divider",{"_index":399,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/form",{"_index":401,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/input",{"_index":57,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/radio",{"_index":405,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/select",{"_index":60,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/slider",{"_index":408,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/spin",{"_index":410,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/switch",{"_index":412,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/time",{"_index":414,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["anycontroloptions",{"_index":62,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":475,"title":{},"body":{"index.html":{}}}],["arising",{"_index":608,"title":{},"body":{"license.html":{}}}],["array",{"_index":155,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["array.isarray(option.name",{"_index":307,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["associated",{"_index":560,"title":{},"body":{"license.html":{}}}],["async",{"_index":96,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["asynchronously",{"_index":162,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["asyncvalidator",{"_index":98,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["asyncvalidatorfn",{"_index":43,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["authors",{"_index":598,"title":{},"body":{"license.html":{}}}],["autosize",{"_index":123,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["b",{"_index":622,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["back",{"_index":113,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["based",{"_index":487,"title":{},"body":{"index.html":{}}}],["before",{"_index":110,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["boolean",{"_index":28,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["both",{"_index":521,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":361,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["box",{"_index":109,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["browse",{"_index":612,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":460,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":504,"title":{},"body":{"index.html":{}}}],["builder",{"_index":621,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["builder().type('cascader').name(name",{"_index":625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('checkbox').name(name",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('date').name(name",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('email').name(name",{"_index":632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('embed').name(name",{"_index":633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('number').name(name",{"_index":636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('password').name(name",{"_index":637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('radio').name(name",{"_index":638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('range').name(name",{"_index":639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('select').name(name",{"_index":640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('slider').name(name",{"_index":641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('switch').name(name",{"_index":642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('text').name(name",{"_index":643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('textarea').name(name",{"_index":644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('time').name(name",{"_index":645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":473,"title":{},"body":{"index.html":{}}}],["built",{"_index":483,"title":{},"body":{"index.html":{}}}],["button",{"_index":31,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["c",{"_index":549,"title":{},"body":{"license.html":{}}}],["callback",{"_index":27,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["cancel",{"_index":220,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["cansave",{"_index":217,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["cascader",{"_index":39,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cascadercontroloptions",{"_index":1,"title":{"interfaces/CascaderControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["change",{"_index":15,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["charge",{"_index":555,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":172,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkboxcontroloptions",{"_index":74,"title":{"interfaces/CheckboxControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["checked",{"_index":322,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["claim",{"_index":601,"title":{},"body":{"license.html":{}}}],["class",{"_index":281,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"index.html":{}}}],["clean",{"_index":30,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["clear",{"_index":16,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["clearformcontrols",{"_index":203,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["clearformcontrols(form",{"_index":236,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["cluster_fluentformmodule",{"_index":379,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_declarations",{"_index":381,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_exports",{"_index":380,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_fluentformcomponent_providers",{"_index":382,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["code",{"_index":501,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":389,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["component",{"_index":175,"title":{"components/FluentFormComponent.html":{}},"body":{"components/FluentFormComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":372,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["components",{"_index":177,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["conditions",{"_index":579,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":482,"title":{},"body":{"index.html":{}}}],["connection",{"_index":609,"title":{},"body":{"license.html":{}}}],["const",{"_index":326,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["constructor",{"_index":224,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["containment",{"_index":165,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["content",{"_index":121,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["contract",{"_index":605,"title":{},"body":{"license.html":{}}}],["control",{"_index":25,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["control's",{"_index":86,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["control.addvalidators(validators.email",{"_index":348,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["control.addvalidators(validators.required",{"_index":350,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["control.label",{"_index":354,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["controlname",{"_index":327,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["controls",{"_index":486,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["controls.reduce((form",{"_index":634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["copies",{"_index":575,"title":{},"body":{"license.html":{}}}],["copy",{"_index":558,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":548,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":159,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["coverage",{"_index":417,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["damages",{"_index":602,"title":{},"body":{"license.html":{}}}],["data",{"_index":154,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["date",{"_index":138,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["date('date').label('label').placeholder('placeholder').span(6",{"_index":507,"title":{},"body":{"index.html":{}}}],["date('date').label('label').placeholder('placeholder').span(6).mapper",{"_index":527,"title":{},"body":{"index.html":{}}}],["date(name).format('yyyy",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(o",{"_index":318,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["date(value",{"_index":314,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["date)?.gettime",{"_index":332,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["date.now",{"_index":509,"title":{},"body":{"index.html":{}}}],["datecontroloptions",{"_index":137,"title":{"interfaces/DateControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["datepickercontroloptions",{"_index":67,"title":{"interfaces/DatePickerControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datetime",{"_index":427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deal",{"_index":562,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":610,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":277,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["debouncetime(50",{"_index":292,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["decimal",{"_index":130,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["declarations",{"_index":387,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["deep",{"_index":357,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["default",{"_index":228,"title":{},"body":{"components/FluentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":225,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["definition",{"_index":494,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":378,"title":{"dependencies.html":{}},"body":{"modules/FluentFormModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":104,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["destroy",{"_index":200,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["detail",{"_index":516,"title":{},"body":{"index.html":{}}}],["directive",{"_index":370,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["directives",{"_index":373,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["disable",{"_index":90,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["disabled",{"_index":91,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["display",{"_index":142,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["distribute",{"_index":571,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":418,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":179,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["dynamic",{"_index":461,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["element",{"_index":369,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["elements",{"_index":538,"title":{},"body":{"index.html":{}}}],["email",{"_index":106,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":99,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["embed('detail').label('detail').span(24).schema(form",{"_index":514,"title":{},"body":{"index.html":{}}}],["embedded",{"_index":101,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["embeddedformoptions",{"_index":63,"title":{"interfaces/EmbeddedFormOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["end",{"_index":545,"title":{},"body":{"index.html":{}}}],["end']).label('label').span(6",{"_index":543,"title":{},"body":{"index.html":{}}}],["endvalue",{"_index":334,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["endvalue?.gettime",{"_index":338,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["error",{"_index":92,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["errortip",{"_index":94,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["event",{"_index":597,"title":{},"body":{"license.html":{}}}],["eventemitter",{"_index":234,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["example",{"_index":523,"title":{},"body":{"index.html":{}}}],["examples",{"_index":499,"title":{},"body":{"index.html":{}}}],["expand",{"_index":38,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["expect",{"_index":526,"title":{},"body":{"index.html":{}}}],["expects",{"_index":524,"title":{},"body":{"index.html":{}}}],["export",{"_index":61,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["exports",{"_index":388,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["express",{"_index":588,"title":{},"body":{"license.html":{}}}],["extends",{"_index":10,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["features",{"_index":476,"title":{},"body":{"index.html":{}}}],["field",{"_index":75,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["files",{"_index":561,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":593,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":7,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fluentformcomponent",{"_index":176,"title":{"components/FluentFormComponent.html":{}},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["fluentformmodule",{"_index":376,"title":{"modules/FluentFormModule.html":{}},"body":{"modules/FluentFormModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["fn",{"_index":254,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["following",{"_index":102,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"license.html":{}}}],["form",{"_index":85,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["form.component",{"_index":415,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["form.component.html",{"_index":196,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.scss",{"_index":194,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts",{"_index":181,"title":{},"body":{"components/FluentFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:127",{"_index":242,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:164",{"_index":244,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:19",{"_index":265,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:191",{"_index":238,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:20",{"_index":263,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:21",{"_index":259,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:23",{"_index":267,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:24",{"_index":269,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:29",{"_index":260,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:32",{"_index":232,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:33",{"_index":272,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:40",{"_index":264,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:42",{"_index":231,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:43",{"_index":230,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:44",{"_index":229,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:45",{"_index":233,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:47",{"_index":235,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:48",{"_index":226,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:52",{"_index":249,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:62",{"_index":248,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:67",{"_index":258,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:72",{"_index":253,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:76",{"_index":256,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:78",{"_index":251,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:82",{"_index":250,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:92",{"_index":247,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.control.ts",{"_index":423,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["form.controls[controlname].setvalue(value",{"_index":329,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.controls[option.name",{"_index":324,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.interface",{"_index":280,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.interface.ts",{"_index":9,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["form.module.ts",{"_index":386,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["form.push(control.build",{"_index":635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.removecontrol(name",{"_index":353,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.setcontrol(controlname",{"_index":351,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form/src/lib/fluent",{"_index":8,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["form2model",{"_index":204,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form2model(form",{"_index":241,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form[controlname",{"_index":330,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["format",{"_index":143,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["formcontrol",{"_index":274,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["formcontroloptions",{"_index":11,"title":{"interfaces/FormControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["formdocs",{"_index":492,"title":{},"body":{"index.html":{}}}],["formgroup",{"_index":237,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["forms",{"_index":480,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":189,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["free",{"_index":554,"title":{},"body":{"license.html":{}}}],["full",{"_index":493,"title":{},"body":{"index.html":{}}}],["function",{"_index":23,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["furnished",{"_index":578,"title":{},"body":{"license.html":{}}}],["getmodel",{"_index":266,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["getschema",{"_index":270,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["getting",{"_index":470,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":553,"title":{},"body":{"license.html":{}}}],["grid",{"_index":77,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["height",{"_index":122,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["hereby",{"_index":552,"title":{},"body":{"license.html":{}}}],["hh:mm:ss').showtime(true",{"_index":631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":599,"title":{},"body":{"license.html":{}}}],["host",{"_index":356,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["hour",{"_index":146,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["html",{"_index":368,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["https://hyperlife1119.github.io/ngx",{"_index":497,"title":{},"body":{"index.html":{}}}],["hyperlifelll9",{"_index":550,"title":{},"body":{"license.html":{}}}],["i/o",{"_index":80,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["icon",{"_index":111,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["identifier",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":103,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["implements",{"_index":182,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["implied",{"_index":589,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["imports",{"_index":416,"title":{},"body":{"modules/FluentFormModule.html":{},"index.html":{}}}],["included",{"_index":167,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"license.html":{}}}],["including",{"_index":565,"title":{},"body":{"license.html":{}}}],["index",{"_index":12,"title":{"index.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["initformcontrol",{"_index":205,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["initformcontrol(form",{"_index":243,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["inline",{"_index":144,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["input",{"_index":82,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["inputcontroloptions",{"_index":64,"title":{"interfaces/InputControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":214,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["install",{"_index":490,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"overview.html":{}}}],["item",{"_index":359,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["json",{"_index":478,"title":{},"body":{"index.html":{}}}],["kind",{"_index":587,"title":{},"body":{"license.html":{}}}],["label",{"_index":79,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["layout",{"_index":78,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["legend",{"_index":367,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["length",{"_index":136,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["liability",{"_index":603,"title":{},"body":{"license.html":{}}}],["liable",{"_index":600,"title":{},"body":{"license.html":{}}}],["license",{"_index":546,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":153,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["limitation",{"_index":566,"title":{},"body":{"license.html":{}}}],["limited",{"_index":590,"title":{},"body":{"license.html":{}}}],["lines",{"_index":118,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["literal",{"_index":33,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["load",{"_index":161,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["map",{"_index":541,"title":{},"body":{"index.html":{}}}],["mapped",{"_index":520,"title":{},"body":{"index.html":{}}}],["mapper",{"_index":81,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["maps",{"_index":83,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["margin",{"_index":360,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["matching",{"_index":174,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":127,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["maximum",{"_index":126,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["maxrows",{"_index":125,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["merchantability",{"_index":592,"title":{},"body":{"license.html":{}}}],["merge",{"_index":569,"title":{},"body":{"license.html":{}}}],["message",{"_index":93,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["metadata",{"_index":184,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["methods",{"_index":202,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["min",{"_index":129,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["minimum",{"_index":128,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["minrows",{"_index":124,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["minute",{"_index":147,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["miscellaneous",{"_index":617,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":547,"title":{},"body":{"license.html":{}}}],["mix",{"_index":512,"title":{},"body":{"index.html":{}}}],["mm",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":132,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["model",{"_index":223,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["model's",{"_index":84,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["model(value",{"_index":285,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model2form",{"_index":206,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model2form(model",{"_index":245,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model?.[option.name",{"_index":310,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model?.[option.name[0",{"_index":308,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model?.[option.name[1",{"_index":309,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model[option.name",{"_index":343,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model[option.name[0",{"_index":335,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model[option.name[1",{"_index":337,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["modify",{"_index":568,"title":{},"body":{"license.html":{}}}],["module",{"_index":375,"title":{"modules/FluentFormModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":377,"title":{"modules.html":{}},"body":{"modules/FluentFormModule.html":{},"modules.html":{}}}],["multi",{"_index":190,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["name",{"_index":17,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":519,"title":{},"body":{"index.html":{}}}],["nested",{"_index":479,"title":{},"body":{"index.html":{}}}],["never",{"_index":105,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["new",{"_index":262,"title":{},"body":{"components/FluentFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":48,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":187,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["ngmodule",{"_index":391,"title":{},"body":{"modules/FluentFormModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":207,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["ngoninit",{"_index":208,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["ngx",{"_index":472,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":596,"title":{},"body":{"license.html":{}}}],["notice",{"_index":581,"title":{},"body":{"license.html":{}}}],["npm",{"_index":491,"title":{},"body":{"index.html":{}}}],["null",{"_index":227,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["number",{"_index":58,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number('number').label('label').placeholder('placeholder').span(3).build",{"_index":513,"title":{},"body":{"index.html":{}}}],["number('number').label('label').placeholder('placeholder').span(3).max(100",{"_index":506,"title":{},"body":{"index.html":{}}}],["numberinputcontroloptions",{"_index":66,"title":{"interfaces/NumberInputControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["nz",{"_index":358,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["nzbuttonmodule",{"_index":393,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzcascadercomponent",{"_index":46,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcascadercomponent['nzexpandtrigger",{"_index":160,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcascadercomponent['nzloaddata",{"_index":163,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcascadermodule",{"_index":395,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzcascaderoption",{"_index":47,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcheckboxmodule",{"_index":396,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzcheckboxoptioninterface",{"_index":275,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["nzcheckboxoptioninterface[])?.filter(o",{"_index":339,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["nzdatepickercomponent",{"_index":53,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzdatepickercomponent['nzmode",{"_index":139,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzdatepickermodule",{"_index":397,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzdividermodule",{"_index":398,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzformmodule",{"_index":400,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzinputmodule",{"_index":402,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzinputnumbercomponent",{"_index":56,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzinputnumbercomponent['nzprecisionmode",{"_index":134,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzinputnumbermodule",{"_index":403,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzradiomodule",{"_index":404,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzsafeany",{"_index":51,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzselectcomponent",{"_index":59,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzselectcomponent['nzmode",{"_index":151,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzselectmodule",{"_index":406,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzslidermodule",{"_index":407,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzspinmodule",{"_index":409,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzswitchmodule",{"_index":411,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nztimepickermodule",{"_index":413,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["o",{"_index":317,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["o.checked).map(o",{"_index":340,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o.getdate()].join",{"_index":531,"title":{},"body":{"index.html":{}}}],["o.getfullyear",{"_index":528,"title":{},"body":{"index.html":{}}}],["o.getmonth",{"_index":529,"title":{},"body":{"index.html":{}}}],["o.value",{"_index":341,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o[option.options.label",{"_index":320,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o[option.options.value",{"_index":321,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["object",{"_index":157,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["object.keys(form.controls).foreach(name",{"_index":352,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["obtaining",{"_index":557,"title":{},"body":{"license.html":{}}}],["oncancel",{"_index":209,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["oninit",{"_index":183,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["online",{"_index":498,"title":{},"body":{"index.html":{}}}],["onsubmit",{"_index":210,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["onvaluechange",{"_index":201,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option",{"_index":517,"title":{},"body":{"index.html":{}}}],["option.asyncvalidator",{"_index":347,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.disabled",{"_index":345,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.mapper",{"_index":311,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.mapper.input(value",{"_index":312,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.mapper.output(value",{"_index":331,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.name.tostring",{"_index":328,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.options.data.map(o",{"_index":319,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.required",{"_index":349,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.schema",{"_index":325,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.type",{"_index":315,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.validator",{"_index":346,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option[control.options.label",{"_index":355,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["optional",{"_index":14,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["options",{"_index":18,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["options.load",{"_index":37,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["otherwise",{"_index":607,"title":{},"body":{"license.html":{}}}],["out",{"_index":385,"title":{},"body":{"modules/FluentFormModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":170,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["output",{"_index":87,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["outputs",{"_index":219,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["overview",{"_index":613,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":455,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":363,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["param",{"_index":305,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["parameters",{"_index":239,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["particular",{"_index":594,"title":{},"body":{"license.html":{}}}],["password",{"_index":107,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":551,"title":{},"body":{"license.html":{}}}],["permit",{"_index":576,"title":{},"body":{"license.html":{}}}],["person",{"_index":556,"title":{},"body":{"license.html":{}}}],["persons",{"_index":577,"title":{},"body":{"license.html":{}}}],["picker",{"_index":55,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["placeholder",{"_index":19,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["please",{"_index":495,"title":{},"body":{"index.html":{}}}],["portions",{"_index":584,"title":{},"body":{"license.html":{}}}],["pre",{"_index":108,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["precision",{"_index":131,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["precisionmode",{"_index":133,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["prefix",{"_index":114,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["prerequisites",{"_index":488,"title":{},"body":{"index.html":{}}}],["private",{"_index":197,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["projects/.../fluent",{"_index":620,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":13,"title":{"properties.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":158,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["provide",{"_index":186,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["provided",{"_index":585,"title":{},"body":{"license.html":{}}}],["providers",{"_index":185,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["publish",{"_index":570,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":595,"title":{},"body":{"license.html":{}}}],["radio",{"_index":168,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["radiocontroloptions",{"_index":73,"title":{"interfaces/RadioControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["range",{"_index":145,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["range(['start",{"_index":542,"title":{},"body":{"index.html":{}}}],["rangepickercontroloptions",{"_index":68,"title":{"interfaces/RangePickerControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["reactive",{"_index":485,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":392,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["record",{"_index":156,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["registeronchange",{"_index":211,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["registeronchange(fn",{"_index":252,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["registerontouched",{"_index":212,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["registerontouched(fn",{"_index":255,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["relationship",{"_index":166,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["required",{"_index":88,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["reset",{"_index":384,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["restriction",{"_index":564,"title":{},"body":{"license.html":{}}}],["results",{"_index":173,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":282,"title":{},"body":{"components/FluentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":240,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["rights",{"_index":567,"title":{},"body":{"license.html":{}}}],["rows",{"_index":119,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["rxjs",{"_index":279,"title":{},"body":{"components/FluentFormComponent.html":{},"dependencies.html":{}}}],["safe",{"_index":481,"title":{},"body":{"index.html":{}}}],["sample",{"_index":500,"title":{},"body":{"index.html":{}}}],["schema",{"_index":100,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["schema(value",{"_index":288,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["schema.foreach(option",{"_index":306,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["search",{"_index":20,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["second",{"_index":148,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["select",{"_index":150,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcontroloptions",{"_index":71,"title":{"interfaces/SelectControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["selected",{"_index":152,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["selection",{"_index":535,"title":{},"body":{"index.html":{}}}],["selector",{"_index":192,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["sell",{"_index":574,"title":{},"body":{"license.html":{}}}],["set",{"_index":284,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["setmodel(value",{"_index":268,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["setschema(value",{"_index":271,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["shall",{"_index":582,"title":{},"body":{"license.html":{}}}],["show",{"_index":29,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["showtime",{"_index":141,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["slider",{"_index":164,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slidercontroloptions",{"_index":72,"title":{"interfaces/SliderControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["software",{"_index":559,"title":{},"body":{"license.html":{}}}],["solid",{"_index":171,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["span",{"_index":76,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["spinning",{"_index":218,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["start",{"_index":544,"title":{},"body":{"index.html":{}}}],["started",{"_index":471,"title":{"index.html":{},"license.html":{}},"body":{}}],["startvalue",{"_index":333,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["startvalue?.gettime",{"_index":336,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["statements",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":135,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["string",{"_index":32,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":169,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["styles",{"_index":178,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["styleurls",{"_index":193,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["subject",{"_index":261,"title":{},"body":{"components/FluentFormComponent.html":{},"license.html":{}}}],["sublicense",{"_index":572,"title":{},"body":{"license.html":{}}}],["submit",{"_index":221,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["subscribe((form",{"_index":294,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["substantial",{"_index":583,"title":{},"body":{"license.html":{}}}],["such",{"_index":536,"title":{},"body":{"index.html":{}}}],["suffix",{"_index":115,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["support",{"_index":35,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"modules.html":{}}}],["suppose",{"_index":539,"title":{},"body":{"index.html":{}}}],["svg",{"_index":611,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":149,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["switchcontroloptions",{"_index":70,"title":{"interfaces/SwitchControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["switcher",{"_index":428,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["switcher('switch').label('label').span(2",{"_index":515,"title":{},"body":{"index.html":{}}}],["t",{"_index":246,"title":{},"body":{"components/FluentFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":453,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":278,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["takeuntil(this.destroy",{"_index":293,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["template",{"_index":112,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["templateref",{"_index":41,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["templateurl",{"_index":195,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["text",{"_index":34,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["text('text').label('label').placeholder('placeholder').span(6",{"_index":505,"title":{},"body":{"index.html":{}}}],["textarea",{"_index":117,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["textareacontroloptions",{"_index":65,"title":{"interfaces/TextareaControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["this._model",{"_index":283,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this._schema",{"_index":287,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.cancel.emit",{"_index":304,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.clearformcontrols(this.form",{"_index":289,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.destroy$.complete",{"_index":299,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.destroy$.next",{"_index":298,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form",{"_index":301,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form.valuechanges.pipe",{"_index":291,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form2model(form",{"_index":295,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form2model(value",{"_index":342,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.initformcontrol(control",{"_index":344,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.initformcontrol(this.form",{"_index":290,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.model",{"_index":296,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.model2form(value",{"_index":300,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.onvaluechange",{"_index":302,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.onvaluechange(value",{"_index":286,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.schema",{"_index":297,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.submit.emit(this.model",{"_index":303,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["time",{"_index":140,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["time'].includes(option.type",{"_index":313,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["timepickercontroloptions",{"_index":69,"title":{"interfaces/TimePickerControlOptions.html":{}},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["top",{"_index":484,"title":{},"body":{"index.html":{}}}],["tort",{"_index":606,"title":{},"body":{"license.html":{}}}],["tree",{"_index":180,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["trigger",{"_index":21,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["true",{"_index":191,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"index.html":{},"overview.html":{}}}],["tslib",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":537,"title":{},"body":{"index.html":{}}}],["type",{"_index":22,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":618,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":623,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["unknown[])?.includes(o[option.options.value",{"_index":323,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["usage",{"_index":502,"title":{},"body":{"index.html":{}}}],["use",{"_index":510,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":36,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["useexisting",{"_index":188,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["using",{"_index":477,"title":{},"body":{"index.html":{}}}],["validator",{"_index":95,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["validatorfn",{"_index":44,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["validators",{"_index":97,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["value",{"_index":26,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/variables.html":{}}}],["value.map((o",{"_index":316,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["values",{"_index":518,"title":{},"body":{"index.html":{}}}],["var",{"_index":371,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["variable",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":624,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":615,"title":{},"body":{"properties.html":{}}}],["visit",{"_index":496,"title":{},"body":{"index.html":{}}}],["void",{"_index":116,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["want",{"_index":540,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":591,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":586,"title":{},"body":{"license.html":{}}}],["ways",{"_index":522,"title":{},"body":{"index.html":{}}}],["whether",{"_index":89,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"license.html":{}}}],["width",{"_index":365,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["without",{"_index":563,"title":{},"body":{"license.html":{}}}],["writevalue",{"_index":213,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["writevalue(value",{"_index":257,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["yourmodule",{"_index":503,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":383,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["zorro",{"_index":49,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/FormControlOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/CascaderControlOptions.html":{"url":"interfaces/CascaderControlOptions.html","title":"interface - CascaderControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CascaderControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            search\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trigger\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Support search, cannot be used with options.load\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trigger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trigger:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Expand trigger for cascader control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckboxControlOptions.html":{"url":"interfaces/CheckboxControlOptions.html","title":"interface - CheckboxControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CheckboxControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateControlOptions.html":{"url":"interfaces/DateControlOptions.html","title":"interface - DateControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DateControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Date display format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Inline mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Mode of date picker control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show time picker in date picker\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePickerControlOptions.html":{"url":"interfaces/DatePickerControlOptions.html","title":"interface - DatePickerControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatePickerControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmbeddedFormOptions.html":{"url":"interfaces/EmbeddedFormOptions.html","title":"interface - EmbeddedFormOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmbeddedFormOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            schema\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schema:         AnyControlOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnyControlOptions[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Schema for embedded form\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FluentFormComponent.html":{"url":"components/FluentFormComponent.html","title":"component - FluentFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FluentFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-fluent-form/src/lib/fluent-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                fluent-form\n            \n\n            \n                styleUrls\n                ./fluent-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fluent-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _model\n                            \n                            \n                                    Private\n                                _schema\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                onValueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearFormControls\n                            \n                            \n                                    Private\n                                form2model\n                            \n                            \n                                    Private\n                                initFormControl\n                            \n                            \n                                    Private\n                                model2form\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addOnAfter\n                            \n                            \n                                addOnBefore\n                            \n                            \n                                canSave\n                            \n                            \n                                schema\n                            \n                            \n                                spinning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                                \n                                    schema\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addOnAfter\n                    \n                \n                \n                    \n                        Type :     TemplateRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addOnBefore\n                    \n                \n                \n                    \n                        Type :     TemplateRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        canSave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spinning\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:45\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearFormControls\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearFormControls(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        form2model\n                        \n                    \n                \n            \n            \n                \n                    \n                    form2model(form: Record, model: Record, schema: AnyControlOptions[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:127\n                \n            \n\n\n            \n                \n                    从表单赋值到模型\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                                AnyControlOptions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initFormControl\n                        \n                    \n                \n            \n            \n                \n                    \n                    initFormControl(form: FormGroup, schema: AnyControlOptions[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:164\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                                AnyControlOptions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        model2form\n                        \n                    \n                \n            \n            \n                \n                    \n                    model2form(model: T, form: FormGroup, schema: AnyControlOptions[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:92\n                \n            \n\n\n            \n                \n                    从模型赋值到表单\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                                AnyControlOptions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: NzSafeAny)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                            NzSafeAny\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: NzSafeAny)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                            NzSafeAny\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnyControlOptions[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        onValueChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:23\n                                \n                            \n\n                \n                    \n                        setmodel(value: T)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:32\n                                \n                            \n\n                \n                    \n                        setschema(value: AnyControlOptions[])\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            AnyControlOptions[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, forwardRef, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { NzCheckBoxOptionInterface } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { debounceTime, Subject, takeUntil } from 'rxjs';\nimport { AnyControlOptions } from './fluent-form.interface';\n\n@Component({\n  selector: 'fluent-form',\n  templateUrl: './fluent-form.component.html',\n  styleUrls: ['./fluent-form.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FluentFormComponent),\n    multi: true\n  }]\n})\nexport class FluentFormComponent> implements OnInit {\n  private onValueChange = (value: T) => { };\n  private destroy$: Subject = new Subject();\n  private _model!: T;\n\n  get model(): T { return this._model; }\n  set model(value: T) {\n    this._model = value;\n    this.onValueChange(value);\n  }\n\n  private _schema!: AnyControlOptions[];\n\n  @Input()\n  get schema() { return this._schema; }\n  set schema(value: AnyControlOptions[]) {\n    this.clearFormControls(this.form);\n    this.initFormControl(this.form, value);\n\n    this._schema = value;\n  }\n\n  form: FormGroup = new FormGroup({});\n\n  @Input() canSave: boolean = true;\n  @Input() addOnBefore: TemplateRef | null = null;\n  @Input() addOnAfter: TemplateRef | null = null;\n  @Input() spinning?: boolean;\n\n  @Output() submit: EventEmitter = new EventEmitter();\n  @Output() cancel: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.form.valueChanges.pipe(\n      debounceTime(50),\n      takeUntil(this.destroy$)\n    ).subscribe((form: T) => {\n      this.form2model(form, this.model, this.schema);\n      this.model = this.model;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value: T): void {\n    this.model = value;\n    value && this.model2form(value, this.form, this.schema);\n  }\n\n  registerOnChange(fn: NzSafeAny): void {\n    this.onValueChange = fn;\n  }\n\n  registerOnTouched(fn: NzSafeAny): void { }\n\n  onSubmit() {\n    this.submit.emit(this.model);\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  /**\n   * 从模型赋值到表单\n   * @param model\n   * @param form\n   * @param schema\n   */\n  private model2form(model: T, form: FormGroup, schema: AnyControlOptions[]) {\n    schema.forEach(option => {\n      // 如果是双字段模式，value 也将会是一个数组\n      let value = Array.isArray(option.name) ? [model?.[option.name[0]], model?.[option.name[1]]] : model?.[option.name]\n\n      if (option.mapper) {\n        value = option.mapper.input(value);\n      } else if (['date', 'time'].includes(option.type)) {\n        value = value ? new Date(value) : null;\n      } else if (option.type === 'range') {\n        // 如果是双字段模式\n        if (Array.isArray(option.name)) {\n          value = value.map((o: string | number | Date) => o && new Date(o));\n        }\n      } else if (option.type === 'checkbox') {\n        value = option.options.data.map(o => ({\n          label: o[option.options.label ?? 'label'],\n          value: o[option.options.value ?? 'value'],\n          checked: (value as unknown[])?.includes(o[option.options.value ?? 'value'])\n        })) as NzCheckBoxOptionInterface[];\n      } else if (option.type === 'embed') {\n        return this.model2form(value, form.controls[option.name] as FormGroup, option.schema);\n      }\n\n      const controlName = option.name.toString();\n      form.controls[controlName].setValue(value);\n    });\n  }\n\n  /**\n   * 从表单赋值到模型\n   * @param form\n   * @param model\n   * @param schema\n   */\n  private form2model(form: Record, model: Record, schema: AnyControlOptions[]) {\n    schema.forEach(option => {\n      const controlName = option.name.toString();\n      let value = form[controlName];\n\n      if (option.mapper) {\n        value = option.mapper.output(value);\n      } else if (['date', 'time'].includes(option.type)) {\n        value = (value as Date)?.getTime();\n      } else if (option.type === 'range') {\n        const [startValue, endValue] = (value ?? []) as [Date, Date];\n        // 如果是双字段模式，将数组拆分并分别赋值到两个字段中去\n        if (Array.isArray(option.name)) {\n          model[option.name[0]] = startValue?.getTime();\n          model[option.name[1]] = endValue?.getTime();\n          return;\n        }\n\n        value = [startValue?.getTime(), endValue?.getTime()];\n      } else if (option.type === 'slider') {\n        // 如果是双字段模式，将数组拆分并分别赋值到两个字段中去\n        if (Array.isArray(option.name)) {\n          const [startValue, endValue] = (value ?? []) as [number, number];\n          model[option.name[0]] = startValue;\n          model[option.name[1]] = endValue;\n          return;\n        }\n      } else if (option.type === 'checkbox') {\n        value = (value as NzCheckBoxOptionInterface[])?.filter(o => o.checked).map(o => o.value);\n      } else if (option.type === 'embed') {\n        return this.form2model(value, model[option.name] ??= {}, option.schema);\n      }\n\n      model[option.name as string] = value;\n    });\n  }\n\n  private initFormControl(form: FormGroup, schema: AnyControlOptions[]) {\n    schema.forEach(option => {\n      let control!: AbstractControl;\n\n      if (option.type === 'embed') {\n        this.initFormControl(control = new FormGroup({}), option.schema);\n      } else {\n        control = new FormControl(\n          { value: null, disabled: option.disabled },\n          option.validator,\n          option.asyncValidator,\n        );\n\n        if (option.type === 'email') {\n          control.addValidators(Validators.email);\n        }\n\n        if (option.required) {\n          control.addValidators(Validators.required);\n        }\n      }\n\n      const controlName = option.name.toString();\n      form.setControl(controlName, control);\n    });\n  }\n\n  private clearFormControls(form: FormGroup) {\n    Object.keys(form.controls).forEach(name => {\n      form.removeControl(name);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n    \n    \n      取消\n      保存\n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n         -->\n        \n        \n        \n         -->\n      \n\n      \n        {{ control.label }}\n        \n          \n            \n              \n                \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n            \n\n            \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n                \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n                \n                  \n                    {{ option[control.options.label ?? 'label'] }}\n                  \n                  \n                    {{ option[control.options.label ?? 'label'] }}\n                  \n                \n              \n            \n\n            \n              \n              \n            \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./fluent-form.component.scss\n                \n                :host ::ng-deep nz-form-item {\n  margin-bottom: 7.5px;\n\n  > nz-form-label {\n    padding-bottom: 5px;\n  }\n}\n\nnz-switch,\nnz-input-number,\nnz-date-picker,\nnz-range-picker,\nnz-time-picker {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  取消      保存                                                                         -->                                 -->                    {{ control.label }}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            {{ option[control.options.label ?? \\'label\\'] }}                                                        {{ option[control.options.label ?? \\'label\\'] }}                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'FluentFormComponent', 'selector': 'fluent-form'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FluentFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FluentFormModule.html":{"url":"modules/FluentFormModule.html","title":"module - FluentFormModule","body":"\n                   \n\n\n\n\n    Modules\n    FluentFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FluentFormModule\n\n\n\ncluster_FluentFormModule_exports\n\n\n\ncluster_FluentFormModule_declarations\n\n\n\ncluster_FluentFormModule_FluentFormComponent_providers\n\n\n\n\nFluentFormComponent\n\nFluentFormComponent\n\n\n\nFluentFormModule\n\nFluentFormModule\n\nFluentFormModule -->\n\nFluentFormComponent->FluentFormModule\n\n\n\n\n\nFluentFormComponent \n\nFluentFormComponent \n\nFluentFormComponent  -->\n\nFluentFormModule->FluentFormComponent \n\n\n\n FluentFormComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n FluentFormComponent), multi: true\n}->FluentFormComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}->FluentFormComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FluentFormComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FluentFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { FluentFormComponent } from './fluent-form.component';\n\n@NgModule({\n  declarations: [\n    FluentFormComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NzSpinModule,\n    NzButtonModule,\n    NzInputModule,\n    NzInputNumberModule,\n    NzCascaderModule,\n    NzDatePickerModule,\n    NzFormModule,\n    NzCheckboxModule,\n    NzSwitchModule,\n    NzDividerModule,\n    NzSelectModule,\n    NzTimePickerModule,\n    NzSliderModule,\n    NzRadioModule\n  ],\n  exports: [\n    FluentFormComponent\n  ]\n})\nexport class FluentFormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormControlOptions.html":{"url":"interfaces/FormControlOptions.html","title":"interface - FormControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FormControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            asyncValidator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorTip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mapper\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                        \n                                            span\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validator\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asyncValidator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asyncValidator:     AsyncValidatorFn | AsyncValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AsyncValidatorFn | AsyncValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Async validators for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorTip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorTip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Error message for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Label for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapper\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapper:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    I/O mapper for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Is it a required control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        span\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        span:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Span of the control in grid layout\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validator:     ValidatorFn | ValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidatorFn | ValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Validator for the control\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputControlOptions.html":{"url":"interfaces/InputControlOptions.html","title":"interface - InputControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            suffix\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The back label of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The pre-label of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:     string | TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The prefix of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suffix:     string | TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The suffix of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"text\" | \"email\" | \"password\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"text\" | \"email\" | \"password\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumberInputControlOptions.html":{"url":"interfaces/NumberInputControlOptions.html","title":"interface - NumberInputControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NumberInputControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            precision\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            precisionMode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Minimum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precision\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precision:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Decimal precision\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precisionMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precisionMode:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Decimal precision mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Step length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RadioControlOptions.html":{"url":"interfaces/RadioControlOptions.html","title":"interface - RadioControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RadioControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            style\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:     \"outline\" | \"solid\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"outline\" | \"solid\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Radio control style\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RangePickerControlOptions.html":{"url":"interfaces/RangePickerControlOptions.html","title":"interface - RangePickerControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RangePickerControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     [string, string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string, string]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectControlOptions.html":{"url":"interfaces/SelectControlOptions.html","title":"interface - SelectControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            search\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max selected\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Mode of select control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Support search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SliderControlOptions.html":{"url":"interfaces/SliderControlOptions.html","title":"interface - SliderControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SliderControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            included\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            range\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        included\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        included:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Containment relationship\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Minimum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     never\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     never\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        range\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        range:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Range slider mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Step length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwitchControlOptions.html":{"url":"interfaces/SwitchControlOptions.html","title":"interface - SwitchControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwitchControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextareaControlOptions.html":{"url":"interfaces/TextareaControlOptions.html","title":"interface - TextareaControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextareaControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autosize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rows\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autosize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosize:     boolean | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to adapt the content height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of lines in the text field\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimePickerControlOptions.html":{"url":"interfaces/TimePickerControlOptions.html","title":"interface - TimePickerControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimePickerControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Time display format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Time step length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\nexport interface FormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Field name for control */\n  name: string | [string, string];\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends FormControlOptions {\n  type: 'embed';\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n  // Disable the following properties\n  /**\n   * @ignore\n   * @deprecated\n   */\n  mapper?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  required?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  disabled?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  errorTip?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  validators?: never;\n  /**\n   * @ignore\n   * @deprecated\n   */\n  asyncValidator?: never;\n}\n\nexport interface InputControlOptions extends FormControlOptions {\n  type: 'text' | 'email' | 'password';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n}\n\nexport interface TextareaControlOptions extends FormControlOptions {\n  type: 'textarea';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n}\n\nexport interface NumberInputControlOptions extends FormControlOptions {\n  type: 'number';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'date';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n}\n\nexport interface RangePickerControlOptions extends FormControlOptions, DateControlOptions {\n  type: 'range';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n}\n\nexport interface TimePickerControlOptions extends FormControlOptions {\n  type: 'time';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n}\n\nexport interface SwitchControlOptions extends FormControlOptions {\n  type: 'switch';\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n}\n\nexport interface SelectControlOptions extends FormControlOptions {\n  type: 'select';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n}\n\nexport interface CascaderControlOptions extends FormControlOptions {\n  type: 'cascader';\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n}\n\nexport interface SliderControlOptions extends FormControlOptions {\n  type: 'slider';\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n}\n\nexport interface RadioControlOptions extends FormControlOptions {\n  type: 'radio';\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n}\n\nexport interface CheckboxControlOptions extends FormControlOptions {\n  type: 'checkbox';\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.component.ts\n            \n            component\n            FluentFormComponent\n            \n                8 %\n                (2/25)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            cascader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            checkbox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            date\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            datetime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            email\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            embed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            form\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            number\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            password\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            radio\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            range\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            select\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            slider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            switcher\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            text\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            textarea\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            time\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            CascaderControlOptions\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            CheckboxControlOptions\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            DateControlOptions\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            DatePickerControlOptions\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            EmbeddedFormOptions\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            FormControlOptions\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            InputControlOptions\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            NumberInputControlOptions\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            RadioControlOptions\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            RangePickerControlOptions\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            SelectControlOptions\n            \n                60 %\n                (6/10)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            SliderControlOptions\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            SwitchControlOptions\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            TextareaControlOptions\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            TimePickerControlOptions\n            \n                62 %\n                (5/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            ng-zorro-antd : ^13.1.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-fluent-form\nBuilding dynamic form in Angular with Fluent API.\n\n\n\n\n\n\nFeatures\n\nSupport using Fluent API and JSON.\nSupport for nested forms.\nType-safe form configuration.\nBuilt on top of Angular Reactive Forms.\nForm controls and grid layout based on ng-zorro-antd.\n\nPrerequisites\n\nAngular >= 13.0.0\nng-zorro-antd >= 13.0.0\n\nInstall\nnpm i ngx-fluent-formDocs\n\nFor the full API definition, please visit https://hyperlife1119.github.io/ngx-fluent-form.\nOnline examples, and sample code.\n\nUsage\nImport the FluentFormModule into your module:\nimport { FluentFormModule } from 'ngx-fluent-form';\n\n@NgModule({\n  imports: [\n    FluentFormModule\n  ]\n})\nexport class YourModule { }Build the form using the Fluent API:\nimport { date, form, number, text } from 'ngx-fluent-form';\n\n@Component({\n  template: ``\n})\nexport class Component {\n  schema = form(\n    text('text').label('label').placeholder('placeholder').span(6),\n    number('number').label('label').placeholder('placeholder').span(3).max(100),\n    date('date').label('label').placeholder('placeholder').span(6)\n  );\n\n  model = {\n    text: 'fluent-form',\n    number: 10,\n    date: Date.now()\n  };\n}You can also use JSON to build the form:\nimport { AnyControlOptions } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema: AnyControlOptions[] = [\n    { type: 'text', name: 'text', label: 'label', span: 6 }\n  ];\n}You can also mix Fluent API and JSON:\nimport { AnyControlOptions, number } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema: AnyControlOptions[] = [\n    { type: 'text', name: 'text', label: 'label', span: 6 },\n    number('number').label('label').placeholder('placeholder').span(3).build(),\n  ];\n}For nested forms, you can use the embed control:\nimport { date, form, number, text, embed, switcher } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    text('text').label('label').placeholder('placeholder').span(6),\n    number('number').label('label').placeholder('placeholder').span(3).max(100),\n\n    embed('detail').label('detail').span(24).schema(form(\n      date('date').label('label').placeholder('placeholder').span(6),\n      switcher('switch').label('label').span(2),\n    ))\n  );\n\n  model = {\n    text: 'fluent-form',\n    number: 10,\n    detail: {\n      date: Date.now(),\n      switch: true\n    }\n  };\n}Use the `mapper 'option for values that need to be mapped both ways. For example, the date control expects and outputs a'Date 'object, while we expect a date string from the date control output:\nimport { date, form } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    date('date').label('label').placeholder('placeholder').span(6).mapper({\n      input: (o: string) => new Date(o),\n      output: (o: Date) => [o.getFullYear(), o.getMonth() + 1, o.getDate()].join('-')\n    })\n  );\n\n  model = {\n    date: '2022-2-22'\n  };\n}For range selection controls, such as the range control, it outputs an array with two elements. Suppose we want to map these two elements to two properties:\nimport { form, range } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    range(['start', 'end']).label('label').span(6),\n  );\n\n  model = {\n    start: null,\n    end: null\n  };\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 HyperLifelll9\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FluentFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FluentFormModule\n\n\n\ncluster_FluentFormModule_declarations\n\n\n\ncluster_FluentFormModule_FluentFormComponent_providers\n\n\n\ncluster_FluentFormModule_exports\n\n\n\n\nFluentFormComponent\n\nFluentFormComponent\n\n\n\nFluentFormModule\n\nFluentFormModule\n\nFluentFormModule -->\n\nFluentFormComponent->FluentFormModule\n\n\n\n\n\nFluentFormComponent \n\nFluentFormComponent \n\nFluentFormComponent  -->\n\nFluentFormModule->FluentFormComponent \n\n\n\n FluentFormComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n FluentFormComponent), multi: true\n}->FluentFormComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}->FluentFormComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    15 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyControlOptions   (projects/.../fluent-form.interface.ts)\n                        \n                        \n                            Builder   (projects/.../fluent-form.control.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n    \n    \n        \n            \n                \n                    \n                    AnyControlOptions\n                \n            \n            \n                \n                        EmbeddedFormOptions | InputControlOptions | TextareaControlOptions | NumberInputControlOptions | DatePickerControlOptions | RangePickerControlOptions | TimePickerControlOptions | SwitchControlOptions | SelectControlOptions | CascaderControlOptions | SliderControlOptions | RadioControlOptions | CheckboxControlOptions\n\n                \n            \n        \n    \n    projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n    \n    \n        \n            \n                \n                    \n                    Builder\n                \n            \n            \n                \n                    T 原型，B 已选，U 未选\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cascader   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            checkbox   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            date   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            datetime   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            email   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            embed   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            form   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            number   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            password   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            radio   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            range   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            select   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            slider   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            switcher   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            text   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            textarea   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            time   (projects/.../fluent-form.control.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cascader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('cascader').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkbox\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('checkbox').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('date').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        datetime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => date(name).format('yyyy-MM-dd HH:mm:ss').showTime(true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('email').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('embed').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...controls: Builder[]) => (\n  controls.reduce((form, control) => {\n    form.push(control.build());\n    return form;\n  }, [] as AnyControlOptions[])\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('number').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('password').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        radio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('radio').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string | [string, string]) => builder().type('range').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('select').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string | [string, string]) => builder().type('slider').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switcher\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('switch').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('text').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textarea\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('textarea').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('time').name(name)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
