var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/BaseFormControlOptions.html",[0,0.103,1,0.503]],["body/interfaces/BaseFormControlOptions.html",[0,0.198,1,0.748,2,0.441,3,0.312,4,0.312,5,0.273,6,0.2,7,0.166,8,0.273,9,0.396,10,0.235,11,0.748,12,0.713,13,0.962,14,0.925,15,0.598,16,0.918,17,0.037,18,0.91,19,0.683,20,0.643,21,0.643,22,0.649,23,0.577,24,0.955,25,0.273,26,0.842,27,0.842,28,0.353,29,0.775,30,0.489,31,0.489,32,0.713,33,0.627,34,0.627,35,0.441,36,0.489,37,0.396,38,0.91,39,0.396,40,0.489,41,0.489,42,0.441,43,0.795,44,0.489,45,0.441,46,0.489,47,0.441,48,0.489,49,0.441,50,0.489,51,0.441,52,0.489,53,0.441,54,0.489,55,0.441,56,0.67,57,0.343,58,0.397,59,0.606,60,0.606,61,0.606,62,0.666,63,0.514,64,0.606,65,0.606,66,0.606,67,0.606,68,0.606,69,0.606,70,0.606,71,0.396,72,0.681,73,0.842,74,0.577,75,0.489,76,0.654,77,0.489,78,0.899,79,0.454,80,0.846,81,0.759,82,0.441,83,0.842,84,0.441,85,0.441,86,0.922,87,0.489,88,1.182,89,0.489,90,0.441,91,0.441,92,0.577,93,0.605,94,0.441,95,0.441,96,0.489,97,0.396,98,1.028,99,0.759,100,0.489,101,0.941,102,0.489,103,0.834,104,0.713,105,0.713,106,1.022,107,0.536,108,0.713,109,0.577,110,0.713,111,1.058,112,0.643,113,0.489,114,0.441,115,0.489,116,0.489,117,0.489,118,0.713,119,0.489,120,0.441,121,0.489,122,0.312,123,1.174,124,0.903,125,0.577,126,0.489,127,0.831,128,0.353,129,0.396,130,1.213,131,0.489,132,0.925,133,0.489,134,0.713,135,0.514,136,0.489,137,0.713,138,0.713,139,1.229,140,1.153,141,1.04,142,1.04,143,1.153,144,1.153,145,0.396,146,0.489,147,0.489,148,0.489,149,0.489,150,0.489,151,0.489,152,0.489,153,0.489,154,0.713,155,0.842,156,0.713,157,0.713,158,0.713,159,0.842,160,1.06,161,0.489,162,0.489,163,1.026,164,0.842,165,0.681,166,0.692,167,0.489,168,0.983,169,0.925,170,0.925,171,0.925,172,0.589,173,0.489,174,0.713,175,0.925,176,0.713,177,0.536,178,0.489,179,0.489,180,0.489,181,0.396,182,0.577,183,0.489,184,0.489,185,0.489,186,0.577,187,0.925,188,1.107,189,0.834,190,0.759,191,0.979,192,1.086,193,0.577,194,0.489,195,0.713,196,0.489,197,0.441,198,0.489,199,0.713,200,0.489,201,0.489,202,0.514,203,0.489,204,0.489,205,0.441,206,0.577,207,0.713,208,0.489,209,0.489,210,0.353,211,0.02,212,0.02]],["title/interfaces/CascaderControlOptions.html",[0,0.103,67,0.448]],["body/interfaces/CascaderControlOptions.html",[0,0.197,1,0.67,2,0.429,3,0.303,4,0.303,5,0.265,6,0.194,7,0.161,8,0.265,9,0.385,10,0.229,11,0.75,12,1.168,13,0.927,14,0.63,15,0.603,16,0.917,17,0.037,18,0.909,19,0.676,20,0.429,21,0.429,22,0.645,23,0.565,24,0.947,25,0.265,26,0.828,27,0.828,28,0.343,29,0.78,30,0.476,31,0.476,32,0.699,33,0.623,34,0.623,35,0.429,36,0.476,37,0.385,38,0.904,39,0.385,40,0.476,41,0.476,42,0.429,43,0.786,44,0.476,45,0.429,46,0.476,47,0.429,48,0.476,49,0.429,50,0.476,51,0.429,52,0.476,53,0.429,54,0.476,55,0.429,56,0.668,57,0.336,58,0.389,59,0.597,60,0.597,61,0.597,62,0.658,63,0.504,64,0.597,65,0.597,66,0.597,67,0.658,68,0.597,69,0.597,70,0.597,71,0.385,72,0.67,73,0.828,74,0.565,75,0.476,76,0.656,77,0.476,78,0.901,79,0.445,80,0.842,81,0.747,82,0.429,83,0.828,84,0.429,85,0.429,86,0.936,87,0.476,88,1.185,89,0.476,90,0.429,91,0.429,92,0.565,93,0.601,94,0.429,95,0.429,96,0.476,97,0.385,98,1.044,99,0.747,100,0.476,101,0.945,102,0.476,103,0.823,104,0.699,105,0.699,106,1.022,107,0.528,108,0.699,109,0.565,110,0.699,111,1.08,112,0.63,113,0.476,114,0.429,115,0.476,116,0.476,117,0.476,118,0.699,119,0.476,120,0.429,121,0.476,122,0.303,123,1.177,124,0.906,125,0.565,126,0.476,127,0.834,128,0.343,129,0.385,130,1.225,131,0.476,132,0.913,133,0.476,134,0.699,135,0.504,136,0.476,137,0.699,138,0.699,139,1.237,140,1.158,141,1.044,142,1.061,143,1.158,144,1.158,145,0.385,146,0.476,147,0.476,148,0.476,149,0.476,150,0.476,151,0.476,152,0.476,153,0.476,154,0.699,155,0.828,156,0.699,157,0.699,158,0.699,159,0.828,160,1.051,161,0.476,162,0.476,163,1.016,164,0.828,165,0.67,166,0.686,167,0.476,168,1.016,169,0.972,170,0.972,171,1.051,172,0.581,173,0.476,174,0.699,175,0.913,176,0.699,177,0.528,178,0.476,179,0.476,180,0.476,181,0.385,182,0.565,183,0.476,184,0.476,185,0.476,186,0.67,187,1.078,188,1.1,189,0.823,190,0.747,191,0.972,192,1.078,193,0.67,194,0.699,195,1.016,196,0.476,197,0.63,198,0.699,199,0.699,200,0.476,201,0.476,202,0.504,203,0.476,204,0.476,205,0.429,206,0.565,207,0.699,208,0.476,209,0.476,210,0.343,211,0.02,212,0.02,213,0.933,214,1.121]],["title/interfaces/CheckboxControlOptions.html",[0,0.103,70,0.448]],["body/interfaces/CheckboxControlOptions.html",[0,0.197,1,0.676,2,0.436,3,0.308,4,0.308,5,0.27,6,0.198,7,0.164,8,0.27,9,0.391,10,0.233,11,0.752,12,1.022,13,0.93,14,0.638,15,0.601,16,0.917,17,0.037,18,0.909,19,0.677,20,0.436,21,0.436,22,0.647,23,0.572,24,0.952,25,0.27,26,0.836,27,0.836,28,0.349,29,0.782,30,0.484,31,0.484,32,0.707,33,0.625,34,0.625,35,0.436,36,0.484,37,0.391,38,0.908,39,0.391,40,0.484,41,0.484,42,0.436,43,0.792,44,0.484,45,0.436,46,0.484,47,0.436,48,0.484,49,0.436,50,0.484,51,0.436,52,0.484,53,0.436,54,0.484,55,0.436,56,0.669,57,0.34,58,0.394,59,0.603,60,0.603,61,0.603,62,0.663,63,0.51,64,0.603,65,0.603,66,0.603,67,0.603,68,0.603,69,0.603,70,0.663,71,0.391,72,0.676,73,0.836,74,0.572,75,0.484,76,0.658,77,0.484,78,0.902,79,0.451,80,0.844,81,0.754,82,0.436,83,0.836,84,0.436,85,0.436,86,0.939,87,0.484,88,1.188,89,0.484,90,0.436,91,0.436,92,0.572,93,0.603,94,0.436,95,0.436,96,0.484,97,0.391,98,1.047,99,0.754,100,0.484,101,0.947,102,0.484,103,0.83,104,0.707,105,0.707,106,1.023,107,0.533,108,0.707,109,0.572,110,0.707,111,1.056,112,0.638,113,0.484,114,0.436,115,0.484,116,0.484,117,0.484,118,0.707,119,0.484,120,0.436,121,0.484,122,0.308,123,1.18,124,0.907,125,0.572,126,0.484,127,0.829,128,0.349,129,0.391,130,1.211,131,0.484,132,0.92,133,0.484,134,0.707,135,0.51,136,0.484,137,0.707,138,0.707,139,1.239,140,1.162,141,1.047,142,1.064,143,1.162,144,1.162,145,0.391,146,0.484,147,0.484,148,0.484,149,0.484,150,0.484,151,0.484,152,0.484,153,0.484,154,0.707,155,0.836,156,0.707,157,0.707,158,0.707,159,0.836,160,1.056,161,0.484,162,0.484,163,1.022,164,0.836,165,0.676,166,0.69,167,0.484,168,0.979,169,0.92,170,0.92,171,0.92,172,0.586,173,0.484,174,0.707,175,0.92,176,0.707,177,0.533,178,0.484,179,0.484,180,0.484,181,0.391,182,0.572,183,0.484,184,0.484,185,0.484,186,0.572,187,0.92,188,1.104,189,0.83,190,0.754,191,0.976,192,1.083,193,0.572,194,0.484,195,0.707,196,0.484,197,0.436,198,0.484,199,0.707,200,0.484,201,0.484,202,0.51,203,0.484,204,0.484,205,0.436,206,0.572,207,0.707,208,0.484,209,0.484,210,0.349,211,0.02,212,0.02,213,0.945,214,1.135]],["title/interfaces/DateControlOptions.html",[0,0.103,165,0.503]],["body/interfaces/DateControlOptions.html",[0,0.197,1,0.677,2,0.437,3,0.308,4,0.308,5,0.27,6,0.198,7,0.164,8,0.27,9,0.392,10,0.233,11,0.746,12,1.123,13,0.93,14,0.638,15,0.594,16,0.917,17,0.037,18,0.908,19,0.678,20,0.437,21,0.437,22,0.647,23,0.572,24,0.952,25,0.27,26,0.837,27,0.837,28,0.349,29,0.774,30,0.484,31,0.484,32,0.708,33,0.626,34,0.626,35,0.437,36,0.484,37,0.392,38,0.908,39,0.392,40,0.484,41,0.484,42,0.437,43,0.876,44,0.484,45,0.437,46,0.484,47,0.437,48,0.484,49,0.437,50,0.484,51,0.437,52,0.484,53,0.437,54,0.484,55,0.437,56,0.669,57,0.341,58,0.394,59,0.603,60,0.603,61,0.603,62,0.663,63,0.51,64,0.603,65,0.603,66,0.603,67,0.603,68,0.603,69,0.603,70,0.603,71,0.392,72,0.677,73,0.837,74,0.572,75,0.484,76,0.653,77,0.484,78,0.898,79,0.451,80,0.844,81,0.754,82,0.437,83,0.837,84,0.437,85,0.437,86,0.92,87,0.484,88,1.18,89,0.484,90,0.437,91,0.437,92,0.572,93,0.603,94,0.437,95,0.437,96,0.484,97,0.392,98,1.026,99,0.754,100,0.484,101,0.94,102,0.484,103,0.83,104,0.708,105,0.708,106,1.022,107,0.533,108,0.708,109,0.572,110,0.708,111,1.092,112,0.638,113,0.484,114,0.437,115,0.484,116,0.484,117,0.484,118,0.708,119,0.484,120,0.437,121,0.484,122,0.308,123,1.172,124,0.902,125,0.572,126,0.484,127,0.829,128,0.349,129,0.392,130,1.211,131,0.484,132,0.92,133,0.484,134,0.708,135,0.51,136,0.484,137,0.708,138,0.708,139,1.227,140,1.151,141,1.037,142,1.037,143,1.151,144,1.151,145,0.392,146,0.484,147,0.484,148,0.484,149,0.484,150,0.484,151,0.484,152,0.484,153,0.484,154,0.708,155,0.837,156,0.708,157,0.708,158,0.708,159,0.837,160,1.151,161,0.484,162,0.484,163,1.023,164,0.837,165,0.744,166,0.725,167,0.484,168,1.056,169,0.979,170,0.979,171,1.056,172,0.624,173,0.92,174,0.837,175,1.083,176,1.023,177,0.533,178,0.484,179,0.484,180,0.484,181,0.392,182,0.572,183,0.484,184,0.484,185,0.484,186,0.572,187,0.92,188,1.105,189,0.83,190,0.754,191,0.976,192,1.083,193,0.572,194,0.484,195,0.708,196,0.484,197,0.437,198,0.484,199,0.708,200,0.484,201,0.484,202,0.51,203,0.484,204,0.484,205,0.437,206,0.572,207,0.708,208,0.484,209,0.484,210,0.349,211,0.02,212,0.02]],["title/interfaces/DatePickerControlOptions.html",[0,0.103,62,0.448]],["body/interfaces/DatePickerControlOptions.html",[0,0.197,1,0.676,2,0.436,3,0.308,4,0.308,5,0.269,6,0.198,7,0.164,8,0.269,9,0.391,10,0.233,11,0.752,12,1.082,13,0.93,14,0.638,15,0.599,16,0.918,17,0.037,18,0.909,19,0.677,20,0.436,21,0.436,22,0.647,23,0.572,24,0.952,25,0.269,26,0.836,27,0.836,28,0.348,29,0.782,30,0.484,31,0.484,32,0.707,33,0.625,34,0.625,35,0.436,36,0.484,37,0.391,38,0.907,39,0.391,40,0.484,41,0.484,42,0.436,43,0.791,44,0.484,45,0.436,46,0.484,47,0.436,48,0.484,49,0.436,50,0.484,51,0.436,52,0.484,53,0.436,54,0.484,55,0.436,56,0.669,57,0.34,58,0.394,59,0.602,60,0.602,61,0.602,62,0.705,63,0.51,64,0.602,65,0.602,66,0.602,67,0.602,68,0.602,69,0.602,70,0.602,71,0.391,72,0.676,73,0.836,74,0.572,75,0.484,76,0.658,77,0.484,78,0.898,79,0.45,80,0.844,81,0.754,82,0.436,83,0.836,84,0.436,85,0.436,86,0.939,87,0.484,88,1.188,89,0.484,90,0.436,91,0.436,92,0.572,93,0.603,94,0.436,95,0.436,96,0.484,97,0.391,98,1.047,99,0.754,100,0.484,101,0.947,102,0.484,103,0.829,104,0.707,105,0.707,106,1.023,107,0.532,108,0.707,109,0.572,110,0.707,111,1.056,112,0.638,113,0.484,114,0.436,115,0.484,116,0.484,117,0.484,118,0.707,119,0.484,120,0.436,121,0.484,122,0.308,123,1.18,124,0.907,125,0.572,126,0.484,127,0.837,128,0.348,129,0.391,130,1.227,131,0.484,132,0.92,133,0.484,134,0.707,135,0.51,136,0.484,137,0.707,138,0.707,139,1.239,140,1.162,141,1.047,142,1.064,143,1.162,144,1.162,145,0.391,146,0.484,147,0.484,148,0.484,149,0.484,150,0.484,151,0.484,152,0.484,153,0.484,154,0.707,155,0.836,156,0.707,157,0.707,158,0.707,159,0.836,160,1.056,161,0.484,162,0.484,163,1.022,164,0.836,165,0.676,166,0.689,167,0.484,168,0.979,169,0.92,170,0.92,171,0.92,172,0.586,173,0.484,174,0.707,175,0.92,176,0.707,177,0.532,178,0.484,179,0.484,180,0.484,181,0.391,182,0.572,183,0.484,184,0.484,185,0.484,186,0.572,187,0.92,188,1.104,189,0.829,190,0.754,191,0.976,192,1.082,193,0.572,194,0.484,195,0.707,196,0.484,197,0.436,198,0.484,199,0.707,200,0.484,201,0.484,202,0.51,203,0.484,204,0.484,205,0.436,206,0.572,207,0.707,208,0.484,209,0.484,210,0.348,211,0.02,212,0.02,213,0.944]],["title/interfaces/EmbeddedFormOptions.html",[0,0.103,58,0.346]],["body/interfaces/EmbeddedFormOptions.html",[0,0.198,1,0.749,2,0.442,3,0.312,4,0.312,5,0.273,6,0.2,7,0.166,8,0.273,9,0.396,10,0.236,11,0.748,13,0.933,14,0.644,15,0.596,16,0.917,17,0.037,18,0.909,19,0.679,20,0.442,21,0.442,22,0.649,23,0.578,24,0.956,25,0.273,26,0.843,27,0.843,28,0.353,29,0.776,30,0.49,31,0.49,32,0.714,33,0.627,34,0.627,35,0.442,36,0.49,37,0.396,38,0.91,39,0.396,40,0.49,41,0.49,42,0.442,43,0.796,44,0.49,45,0.442,46,0.49,47,0.442,48,0.49,49,0.442,50,0.49,51,0.442,52,0.49,53,0.442,54,0.49,55,0.442,56,0.67,57,0.446,58,0.47,59,0.607,60,0.607,61,0.607,62,0.667,63,0.515,64,0.607,65,0.607,66,0.607,67,0.607,68,0.607,69,0.607,70,0.607,71,0.396,72,0.681,73,0.843,74,0.578,75,0.49,76,0.654,77,0.49,78,0.899,79,0.455,80,0.846,81,0.76,82,0.442,83,0.843,84,0.442,85,0.442,86,0.922,87,0.49,88,1.19,89,0.49,90,0.442,91,0.442,92,0.578,93,0.606,94,0.442,95,0.442,96,0.49,97,0.396,98,1.028,99,0.76,100,0.49,101,0.942,102,0.49,103,0.835,104,0.714,105,0.714,106,1.023,107,0.59,108,0.714,109,0.578,110,0.714,111,1.059,112,0.644,113,0.49,114,0.442,115,0.49,116,0.49,117,0.49,118,0.714,119,0.49,120,0.442,121,0.49,122,0.312,123,1.183,124,0.908,125,0.831,126,0.714,127,0.831,128,0.353,129,0.396,130,1.213,131,0.49,132,0.926,133,0.49,134,0.714,135,0.515,136,0.49,137,0.714,138,0.714,139,1.229,140,1.154,141,1.04,142,1.04,143,1.154,144,1.154,145,0.396,146,0.49,147,0.49,148,0.49,149,0.49,150,0.49,151,0.49,152,0.49,153,0.49,154,0.714,155,0.843,156,0.714,157,0.714,158,0.714,159,0.843,160,1.06,161,0.49,162,0.49,163,1.027,164,0.843,165,0.681,166,0.692,167,0.49,168,0.984,169,0.926,170,0.926,171,0.926,172,0.59,173,0.49,174,0.714,175,0.926,176,0.714,177,0.537,178,0.49,179,0.49,180,0.49,181,0.396,182,0.578,183,0.49,184,0.49,185,0.49,186,0.578,187,0.926,188,1.108,189,0.835,190,0.76,191,0.98,192,1.087,193,0.578,194,0.49,195,0.714,196,0.49,197,0.442,198,0.49,199,0.714,200,0.49,201,0.49,202,0.515,203,0.49,204,0.49,205,0.442,206,0.578,207,0.714,208,0.49,209,0.49,210,0.353,211,0.02,212,0.02]],["title/directives/FluentEventBinderDirective.html",[215,1.59,216,1.59]],["body/directives/FluentEventBinderDirective.html",[3,0.574,4,0.574,5,0.502,6,0.482,7,0.408,10,0.434,15,0.515,17,0.037,22,0.636,23,0.729,25,0.502,33,0.502,34,0.502,38,0.922,39,0.729,56,0.502,57,0.434,58,0.502,72,0.922,74,0.922,76,0.688,78,0.85,79,0.574,80,0.65,86,0.922,93,0.596,211,0.03,212,0.03,214,1.446,215,2.736,216,2.736,217,2.86,218,4.24,219,3.239,220,3.844,221,4.099,222,3.239,223,3.844,224,6.036,225,3.844,226,4.24,227,3.844,228,4.099,229,4.099,230,5.36,231,4.517,232,3.239,233,3.239,234,2.558,235,4.099,236,4.446,237,3.239,238,4.517,239,5.716,240,4.517,241,4.517,242,4.517,243,4.517,244,5.36,245,4.517,246,3.747,247,4.517]],["title/components/FluentFormComponent.html",[248,1.764,249,1.764]],["body/components/FluentFormComponent.html",[3,0.34,4,0.34,5,0.298,6,0.511,7,0.429,8,0.698,10,0.426,11,0.484,12,1.182,13,0.88,15,0.592,16,0.694,17,0.037,18,0.637,19,0.537,22,0.589,23,0.88,24,0.918,25,0.298,28,0.385,33,0.493,34,0.424,37,0.432,38,0.779,39,0.432,43,0.715,56,0.298,57,0.577,71,0.615,79,0.34,80,0.883,85,0.869,92,0.88,93,0.606,106,1.022,107,0.768,109,0.715,111,0.869,114,0.482,120,0.482,122,0.563,124,0.845,125,0.975,128,0.385,135,0.385,166,0.648,172,0.34,177,0.563,181,0.432,190,0.954,202,0.385,210,0.548,211,0.021,212,0.021,213,1.015,215,1.367,216,1.367,217,1.696,220,2.731,221,3.179,222,1.921,223,3.658,225,2.731,226,3.462,227,2.731,228,3.179,229,4.492,232,4.249,233,1.921,234,1.517,235,1.921,237,3.179,248,2.51,249,3.001,250,3.809,251,2.678,252,2.678,253,2.678,254,2.221,255,4.432,256,3.809,257,2.731,258,3.179,259,2.731,260,3.179,261,2.731,262,3.057,263,3.809,264,4.432,265,3.809,266,3.809,267,6.212,268,4.432,269,4.432,270,4.432,271,4.432,272,3.809,273,3.809,274,3.809,275,3.809,276,4.827,277,4.827,278,4.827,279,3.809,280,3.809,281,3.809,282,4.432,283,4.432,284,4.432,285,4.432,286,3.809,287,4.432,288,4.432,289,3.809,290,4.703,291,3.809,292,4.873,293,4.231,294,2.678,295,2.678,296,2.678,297,3.809,298,2.678,299,2.678,300,3.809,301,6.039,302,2.678,303,5.67,304,3.809,305,2.678,306,3.809,307,2.678,308,3.809,309,5.034,310,2.678,311,2.678,312,2.678,313,2.678,314,2.678,315,3.809,316,2.678,317,4.432,318,3.809,319,2.678,320,3.809,321,2.678,322,2.678,323,2.678,324,2.678,325,4.231,326,4.124,327,2.678,328,2.678,329,2.678,330,2.678,331,2.678,332,2.678,333,2.678,334,2.678,335,2.678,336,2.678,337,3.809,338,3.809,339,3.809,340,2.678,341,2.678,342,2.221,343,4.396,344,3.809,345,3.809,346,2.678,347,3.809,348,2.678,349,3.809,350,2.678,351,3.809,352,2.678,353,2.678,354,2.678,355,2.678,356,2.678,357,2.678,358,2.678,359,2.678,360,3.809,361,2.678,362,2.678,363,2.678,364,2.678,365,2.678,366,2.678,367,5.3,368,4.432,369,4.827,370,2.678,371,2.678,372,2.678,373,5.67,374,2.678,375,4.432,376,3.809,377,2.678,378,3.809,379,2.678,380,2.678,381,2.221,382,2.678,383,2.678,384,2.678,385,2.678,386,2.678,387,4.432,388,4.432,389,2.678,390,2.678,391,2.678,392,3.809,393,2.678,394,2.678,395,3.809,396,3.809,397,2.678,398,2.678,399,2.678,400,2.678,401,2.678,402,2.678,403,2.678,404,2.678,405,2.678,406,2.678,407,2.678,408,2.678,409,2.678,410,2.678,411,2.678,412,2.678,413,2.678,414,3.809,415,4.827,416,2.678,417,2.678,418,2.678,419,3.809,420,2.678,421,2.678,422,2.678,423,2.678,424,2.678,425,2.678,426,3.809,427,4.827,428,2.678,429,2.678,430,1.367,431,2.221,432,2.678]],["title/modules/FluentFormModule.html",[433,2.234,434,1.764]],["body/modules/FluentFormModule.html",[3,0.531,4,0.531,5,0.465,6,0.341,7,0.346,8,0.465,17,0.037,19,0.465,22,0.712,25,0.465,28,0.601,29,0.531,33,0.704,34,0.704,35,0.752,37,0.675,42,0.752,43,0.826,45,0.92,47,0.752,49,0.752,51,0.752,53,0.752,55,0.752,56,0.465,76,0.465,211,0.029,212,0.029,216,3.07,234,2.367,249,3.622,257,3.965,258,3.965,259,3.965,260,3.965,261,4.238,262,3.742,430,3.07,434,3.546,435,2.998,436,3.24,437,3.468,438,3.468,439,3.468,440,3.468,441,4.244,442,3.468,443,2.998,444,4.181,445,5.116,446,5.116,447,5.116,448,3.468,449,4.244,450,5.116,451,5.116,452,4.181,453,5.116,454,5.116,455,5.116,456,5.116,457,4.181,458,5.116,459,4.181,460,5.116,461,5.116,462,5.116,463,5.116,464,5.116,465,5.116,466,4.181,467,5.116,468,5.116,469,5.116,470,5.116,471,4.181,472,3.468]],["title/directives/FluentPropertyBinderDirective.html",[215,1.59,430,1.59]],["body/directives/FluentPropertyBinderDirective.html",[3,0.586,4,0.586,5,0.513,6,0.485,7,0.41,10,0.443,15,0.521,17,0.036,22,0.603,25,0.513,29,0.771,56,0.513,57,0.443,58,0.513,74,0.93,78,0.78,79,0.586,80,0.663,93,0.603,211,0.03,212,0.03,214,1.476,215,2.77,217,2.92,218,4.268,219,3.306,220,3.891,221,4.135,222,3.306,223,3.891,225,3.891,226,4.268,227,3.891,228,4.135,229,4.135,232,3.306,233,3.306,234,2.611,235,3.891,236,4.782,237,3.306,246,3.824,430,2.77,431,5.034,473,5.425,474,4.61,475,4.61,476,5.765,477,4.61,478,4.61,479,5.765,480,4.61,481,4.61]],["title/interfaces/InputControlOptions.html",[0,0.103,59,0.448]],["body/interfaces/InputControlOptions.html",[0,0.197,1,0.666,2,0.425,3,0.3,4,0.3,5,0.262,6,0.192,7,0.16,8,0.262,9,0.381,10,0.227,11,0.748,12,1.183,13,0.943,14,0.625,15,0.605,16,0.919,17,0.037,18,0.907,19,0.675,20,0.425,21,0.425,22,0.644,23,0.561,24,1.02,25,0.262,26,0.823,27,0.823,28,0.339,29,0.779,30,0.471,31,0.471,32,0.694,33,0.622,34,0.622,35,0.425,36,0.471,37,0.381,38,0.902,39,0.381,40,0.471,41,0.471,42,0.425,43,0.783,44,0.471,45,0.425,46,0.471,47,0.425,48,0.471,49,0.425,50,0.471,51,0.425,52,0.471,53,0.425,54,0.471,55,0.425,56,0.667,57,0.334,58,0.387,59,0.654,60,0.593,61,0.593,62,0.654,63,0.5,64,0.593,65,0.593,66,0.593,67,0.593,68,0.593,69,0.593,70,0.593,71,0.381,72,0.783,73,0.823,74,0.561,75,0.471,76,0.655,77,0.471,78,0.896,79,0.442,80,0.84,81,0.742,82,0.425,83,0.823,84,0.425,85,0.425,86,0.915,87,0.471,88,1.183,89,0.471,90,0.425,91,0.425,92,0.561,93,0.638,94,0.425,95,0.425,96,0.471,97,0.381,98,1.02,99,0.873,100,0.471,101,0.943,102,0.471,103,0.819,104,0.694,105,0.694,106,1.021,107,0.524,108,0.694,109,0.561,110,0.694,111,1.051,112,0.625,113,0.471,114,0.425,115,0.471,116,0.471,117,0.471,118,0.694,119,0.471,120,0.425,121,0.471,122,0.3,123,1.175,124,0.905,125,0.561,126,0.471,127,0.847,128,0.593,129,0.666,130,1.224,131,0.694,132,1.074,133,0.908,134,0.694,135,0.5,136,0.694,137,1.013,138,1.013,139,1.236,140,1.156,141,1.042,142,1.059,143,1.156,144,1.156,145,0.381,146,0.471,147,0.471,148,0.471,149,0.471,150,0.471,151,0.471,152,0.471,153,0.471,154,0.694,155,0.823,156,0.694,157,0.694,158,0.694,159,0.823,160,1.047,161,0.471,162,0.471,163,1.013,164,0.823,165,0.666,166,0.684,167,0.471,168,0.968,169,0.908,170,0.908,171,0.908,172,0.578,173,0.471,174,0.694,175,0.908,176,0.694,177,0.524,178,0.471,179,0.471,180,0.471,181,0.381,182,0.561,183,0.471,184,0.471,185,0.471,186,0.561,187,0.908,188,1.097,189,0.819,190,0.742,191,0.969,192,1.074,193,0.561,194,0.471,195,0.694,196,0.471,197,0.425,198,0.471,199,0.694,200,0.471,201,0.471,202,0.5,203,0.471,204,0.471,205,0.425,206,0.561,207,0.694,208,0.471,209,0.471,210,0.339,211,0.019,212,0.019,213,0.926,214,1.457]],["title/interfaces/NumberInputControlOptions.html",[0,0.103,61,0.448]],["body/interfaces/NumberInputControlOptions.html",[0,0.197,1,0.668,2,0.428,3,0.302,4,0.302,5,0.264,6,0.194,7,0.161,8,0.264,9,0.384,10,0.228,11,0.749,12,1.197,13,0.927,14,0.629,15,0.602,16,0.917,17,0.037,18,0.907,19,0.691,20,0.428,21,0.428,22,0.645,23,0.564,24,0.946,25,0.264,26,0.827,27,0.827,28,0.342,29,0.78,30,0.474,31,0.474,32,0.697,33,0.623,34,0.623,35,0.428,36,0.474,37,0.384,38,0.903,39,0.384,40,0.474,41,0.474,42,0.428,43,0.785,44,0.474,45,0.428,46,0.474,47,0.428,48,0.474,49,0.428,50,0.474,51,0.428,52,0.474,53,0.428,54,0.474,55,0.428,56,0.667,57,0.335,58,0.388,59,0.596,60,0.596,61,0.657,62,0.657,63,0.502,64,0.596,65,0.596,66,0.596,67,0.596,68,0.596,69,0.596,70,0.596,71,0.384,72,0.668,73,0.827,74,0.564,75,0.474,76,0.655,77,0.474,78,0.896,79,0.444,80,0.841,81,0.745,82,0.428,83,0.827,84,0.428,85,0.428,86,0.936,87,0.474,88,1.184,89,0.474,90,0.428,91,0.428,92,0.564,93,0.6,94,0.428,95,0.428,96,0.474,97,0.384,98,1.043,99,0.745,100,0.474,101,0.944,102,0.474,103,0.822,104,0.697,105,0.697,106,1.023,107,0.527,108,0.697,109,0.564,110,0.697,111,1.052,112,0.629,113,0.474,114,0.428,115,0.474,116,0.474,117,0.474,118,0.697,119,0.474,120,0.428,121,0.474,122,0.302,123,1.176,124,0.905,125,0.564,126,0.474,127,0.834,128,0.342,129,0.384,130,1.225,131,0.474,132,0.911,133,0.474,134,0.697,135,0.502,136,0.474,137,0.697,138,0.697,139,1.237,140,1.157,141,1.043,142,1.06,143,1.157,144,1.157,145,0.384,146,0.474,147,0.474,148,0.474,149,0.474,150,0.474,151,0.474,152,0.474,153,0.474,154,0.827,155,1.015,156,0.827,157,0.971,158,0.911,159,1.077,160,1.077,161,0.911,162,0.474,163,1.117,164,0.911,165,0.668,166,0.686,167,0.474,168,0.971,169,0.911,170,0.911,171,0.911,172,0.58,173,0.474,174,0.697,175,0.911,176,0.697,177,0.527,178,0.474,179,0.474,180,0.474,181,0.384,182,0.564,183,0.474,184,0.474,185,0.474,186,0.564,187,0.911,188,1.099,189,0.822,190,0.745,191,0.971,192,1.077,193,0.564,194,0.474,195,0.697,196,0.474,197,0.428,198,0.474,199,0.697,200,0.474,201,0.474,202,0.502,203,0.474,204,0.474,205,0.428,206,0.564,207,0.697,208,0.474,209,0.474,210,0.342,211,0.02,212,0.02,213,0.931]],["title/interfaces/RadioControlOptions.html",[0,0.103,69,0.448]],["body/interfaces/RadioControlOptions.html",[0,0.197,1,0.674,2,0.434,3,0.306,4,0.306,5,0.268,6,0.196,7,0.163,8,0.268,9,0.389,10,0.231,11,0.751,12,1.081,13,0.929,14,0.635,15,0.601,16,0.917,17,0.037,18,0.909,19,0.677,20,0.434,21,0.434,22,0.647,23,0.57,24,0.95,25,0.268,26,0.833,27,0.833,28,0.347,29,0.781,30,0.481,31,0.481,32,0.704,33,0.625,34,0.625,35,0.434,36,0.481,37,0.389,38,0.906,39,0.389,40,0.481,41,0.481,42,0.434,43,0.79,44,0.481,45,0.434,46,0.481,47,0.434,48,0.481,49,0.434,50,0.481,51,0.434,52,0.481,53,0.434,54,0.481,55,0.434,56,0.669,57,0.339,58,0.393,59,0.601,60,0.601,61,0.601,62,0.661,63,0.508,64,0.601,65,0.601,66,0.601,67,0.601,68,0.601,69,0.661,70,0.601,71,0.389,72,0.674,73,0.833,74,0.57,75,0.481,76,0.657,77,0.481,78,0.902,79,0.449,80,0.843,81,0.751,82,0.434,83,0.833,84,0.434,85,0.434,86,0.938,87,0.481,88,1.187,89,0.481,90,0.434,91,0.434,92,0.57,93,0.602,94,0.434,95,0.434,96,0.481,97,0.389,98,1.046,99,0.751,100,0.481,101,0.946,102,0.481,103,0.827,104,0.704,105,0.704,106,1.022,107,0.531,108,0.704,109,0.57,110,0.704,111,1.055,112,0.635,113,0.481,114,0.434,115,0.481,116,0.481,117,0.481,118,0.704,119,0.481,120,0.434,121,0.481,122,0.306,123,1.179,124,0.906,125,0.57,126,0.481,127,0.828,128,0.347,129,0.389,130,1.21,131,0.481,132,0.917,133,0.481,134,0.704,135,0.508,136,0.481,137,0.704,138,0.704,139,1.239,140,1.16,141,1.046,142,1.063,143,1.16,144,1.16,145,0.389,146,0.481,147,0.481,148,0.481,149,0.481,150,0.481,151,0.481,152,0.481,153,0.481,154,0.704,155,0.833,156,0.704,157,0.704,158,0.704,159,0.833,160,1.054,161,0.481,162,0.481,163,1.02,164,0.833,165,0.674,166,0.688,167,0.481,168,0.977,169,0.917,170,0.917,171,0.917,172,0.584,173,0.481,174,0.704,175,0.917,176,0.704,177,0.531,178,0.481,179,0.481,180,0.481,181,0.389,182,0.57,183,0.481,184,0.481,185,0.481,186,0.57,187,0.917,188,1.103,189,0.827,190,0.751,191,0.975,192,1.081,193,0.57,194,0.481,195,0.704,196,0.481,197,0.434,198,0.481,199,0.704,200,0.481,201,0.481,202,0.508,203,0.481,204,0.481,205,0.434,206,0.674,207,1.02,208,0.833,209,0.833,210,0.347,211,0.02,212,0.02,213,0.941,214,1.13]],["title/interfaces/RangePickerControlOptions.html",[0,0.103,63,0.448]],["body/interfaces/RangePickerControlOptions.html",[0,0.197,1,0.675,2,0.435,3,0.308,4,0.308,5,0.269,6,0.197,7,0.164,8,0.269,9,0.39,10,0.232,11,0.751,12,1.082,13,0.93,14,0.637,15,0.599,16,0.919,17,0.037,18,0.909,19,0.677,20,0.435,21,0.435,22,0.647,23,0.571,24,0.951,25,0.269,26,0.835,27,0.835,28,0.348,29,0.782,30,0.483,31,0.483,32,0.706,33,0.625,34,0.625,35,0.435,36,0.483,37,0.39,38,0.907,39,0.39,40,0.483,41,0.483,42,0.435,43,0.791,44,0.483,45,0.435,46,0.483,47,0.435,48,0.483,49,0.435,50,0.483,51,0.435,52,0.483,53,0.435,54,0.483,55,0.435,56,0.669,57,0.34,58,0.394,59,0.602,60,0.602,61,0.602,62,0.662,63,0.602,64,0.602,65,0.602,66,0.602,67,0.602,68,0.602,69,0.602,70,0.602,71,0.39,72,0.675,73,0.835,74,0.571,75,0.483,76,0.657,77,0.483,78,0.898,79,0.45,80,0.844,81,0.753,82,0.435,83,0.835,84,0.435,85,0.435,86,0.939,87,0.483,88,1.187,89,0.483,90,0.435,91,0.435,92,0.571,93,0.603,94,0.435,95,0.435,96,0.483,97,0.39,98,1.047,99,0.753,100,0.483,101,0.947,102,0.483,103,0.829,104,0.706,105,0.706,106,1.023,107,0.532,108,0.706,109,0.571,110,0.706,111,1.056,112,0.637,113,0.483,114,0.435,115,0.483,116,0.483,117,0.483,118,0.706,119,0.483,120,0.435,121,0.483,122,0.308,123,1.18,124,0.907,125,0.571,126,0.483,127,0.837,128,0.348,129,0.39,130,1.227,131,0.483,132,0.919,133,0.483,134,0.706,135,0.509,136,0.483,137,0.706,138,0.706,139,1.239,140,1.161,141,1.047,142,1.064,143,1.161,144,1.161,145,0.39,146,0.483,147,0.483,148,0.483,149,0.483,150,0.483,151,0.483,152,0.483,153,0.483,154,0.706,155,0.835,156,0.706,157,0.706,158,0.706,159,0.835,160,1.055,161,0.483,162,0.483,163,1.022,164,0.835,165,0.675,166,0.689,167,0.483,168,0.978,169,0.919,170,0.919,171,0.919,172,0.585,173,0.483,174,0.706,175,0.919,176,0.706,177,0.532,178,0.483,179,0.483,180,0.483,181,0.39,182,0.571,183,0.483,184,0.483,185,0.483,186,0.571,187,0.919,188,1.104,189,0.829,190,0.753,191,0.976,192,1.082,193,0.571,194,0.483,195,0.706,196,0.483,197,0.435,198,0.483,199,0.706,200,0.483,201,0.483,202,0.509,203,0.483,204,0.483,205,0.435,206,0.571,207,0.706,208,0.483,209,0.483,210,0.348,211,0.02,212,0.02,213,0.943]],["title/interfaces/RealFormControlOptions.html",[0,0.103,101,0.503]],["body/interfaces/RealFormControlOptions.html",[0,0.197,1,0.741,2,0.433,3,0.306,4,0.306,5,0.267,6,0.196,7,0.163,8,0.267,9,0.388,10,0.231,11,0.745,12,1.149,13,0.929,14,0.634,15,0.598,16,0.916,17,0.037,18,0.912,19,0.677,20,0.433,21,0.433,22,0.646,23,0.569,24,0.95,25,0.267,26,1.053,27,1.053,28,0.346,29,0.774,30,0.48,31,0.48,32,0.703,33,0.624,34,0.624,35,0.433,36,0.48,37,0.388,38,0.906,39,0.388,40,0.48,41,0.48,42,0.433,43,0.789,44,0.48,45,0.433,46,0.48,47,0.433,48,0.48,49,0.433,50,0.48,51,0.433,52,0.48,53,0.433,54,0.48,55,0.433,56,0.668,57,0.338,58,0.392,59,0.6,60,0.6,61,0.6,62,0.66,63,0.507,64,0.6,65,0.6,66,0.6,67,0.6,68,0.6,69,0.6,70,0.6,71,0.388,72,0.673,73,0.832,74,0.569,75,0.48,76,0.652,77,0.48,78,0.897,79,0.448,80,0.843,81,0.75,82,0.433,83,0.832,84,0.433,85,0.433,86,0.918,87,0.48,88,1.186,89,0.48,90,0.433,91,0.433,92,0.569,93,0.602,94,0.433,95,0.433,96,0.48,97,0.388,98,1.024,99,0.75,100,0.48,101,0.946,102,0.703,103,0.974,104,0.703,105,0.703,106,1.021,107,0.53,108,0.703,109,0.569,110,1.019,111,1.081,112,0.75,113,0.703,114,0.826,115,0.703,116,0.703,117,0.916,118,1.019,119,0.703,120,0.634,121,0.916,122,0.306,123,1.17,124,0.902,125,0.569,126,0.48,127,0.828,128,0.346,129,0.388,130,1.21,131,0.48,132,0.916,133,0.48,134,0.703,135,0.507,136,0.48,137,0.703,138,0.703,139,1.226,140,1.149,141,1.036,142,1.036,143,1.149,144,1.149,145,0.388,146,0.48,147,0.48,148,0.48,149,0.48,150,0.48,151,0.48,152,0.48,153,0.48,154,0.703,155,0.832,156,0.703,157,0.703,158,0.703,159,0.832,160,1.053,161,0.48,162,0.48,163,1.019,164,0.832,165,0.673,166,0.688,167,0.48,168,0.976,169,0.916,170,0.916,171,0.916,172,0.584,173,0.48,174,0.703,175,0.916,176,0.703,177,0.53,178,0.48,179,0.48,180,0.48,181,0.388,182,0.569,183,0.48,184,0.48,185,0.48,186,0.569,187,0.916,188,1.102,189,0.826,190,0.75,191,0.974,192,1.08,193,0.569,194,0.48,195,0.703,196,0.48,197,0.433,198,0.48,199,0.703,200,0.48,201,0.48,202,0.507,203,0.48,204,0.48,205,0.433,206,0.569,207,0.703,208,0.48,209,0.48,210,0.346,211,0.02,212,0.02,214,1.128]],["title/interfaces/SelectControlOptions.html",[0,0.103,66,0.448]],["body/interfaces/SelectControlOptions.html",[0,0.197,1,0.669,2,0.428,3,0.302,4,0.302,5,0.264,6,0.194,7,0.161,8,0.264,9,0.384,10,0.228,11,0.749,12,1.184,13,0.927,14,0.629,15,0.603,16,0.917,17,0.037,18,0.908,19,0.68,20,0.428,21,0.428,22,0.645,23,0.564,24,0.946,25,0.264,26,0.827,27,0.827,28,0.342,29,0.78,30,0.474,31,0.474,32,0.697,33,0.623,34,0.623,35,0.428,36,0.474,37,0.384,38,0.903,39,0.384,40,0.474,41,0.474,42,0.428,43,0.785,44,0.474,45,0.428,46,0.474,47,0.428,48,0.474,49,0.428,50,0.474,51,0.428,52,0.474,53,0.428,54,0.474,55,0.428,56,0.667,57,0.336,58,0.389,59,0.596,60,0.596,61,0.596,62,0.657,63,0.502,64,0.596,65,0.596,66,0.657,67,0.596,68,0.596,69,0.596,70,0.596,71,0.384,72,0.669,73,0.827,74,0.564,75,0.474,76,0.655,77,0.474,78,0.901,79,0.444,80,0.841,81,0.745,82,0.428,83,0.827,84,0.428,85,0.428,86,0.936,87,0.474,88,1.184,89,0.474,90,0.428,91,0.428,92,0.564,93,0.6,94,0.428,95,0.428,96,0.474,97,0.384,98,1.044,99,0.745,100,0.474,101,0.944,102,0.474,103,0.822,104,0.697,105,0.697,106,1.021,107,0.527,108,0.697,109,0.564,110,0.697,111,1.08,112,0.629,113,0.474,114,0.428,115,0.474,116,0.474,117,0.474,118,0.697,119,0.474,120,0.428,121,0.474,122,0.302,123,1.176,124,0.905,125,0.564,126,0.474,127,0.834,128,0.342,129,0.384,130,1.225,131,0.474,132,0.911,133,0.474,134,0.697,135,0.502,136,0.474,137,0.697,138,0.697,139,1.237,140,1.157,141,1.044,142,1.061,143,1.157,144,1.157,145,0.384,146,0.474,147,0.474,148,0.474,149,0.474,150,0.474,151,0.474,152,0.474,153,0.474,154,0.697,155,0.911,156,0.697,157,0.697,158,0.697,159,0.827,160,1.133,161,0.474,162,0.474,163,1.015,164,0.827,165,0.669,166,0.686,167,0.474,168,1.015,169,0.971,170,0.971,171,1.05,172,0.581,173,0.474,174,0.697,175,0.911,176,0.697,177,0.527,178,0.474,179,0.474,180,0.474,181,0.384,182,0.669,183,0.474,184,0.697,185,0.911,186,0.669,187,1.077,188,1.099,189,0.822,190,0.745,191,0.971,192,1.077,193,0.564,194,0.474,195,0.697,196,0.474,197,0.428,198,0.474,199,0.697,200,0.474,201,0.474,202,0.502,203,0.474,204,0.474,205,0.428,206,0.564,207,0.697,208,0.474,209,0.474,210,0.342,211,0.02,212,0.02,213,0.931,214,1.118]],["title/interfaces/SliderControlOptions.html",[0,0.103,68,0.448]],["body/interfaces/SliderControlOptions.html",[0,0.197,1,0.668,2,0.427,3,0.301,4,0.301,5,0.264,6,0.193,7,0.16,8,0.264,9,0.383,10,0.228,11,0.749,12,1.197,13,0.926,14,0.628,15,0.602,16,0.916,17,0.037,18,0.907,19,0.688,20,0.427,21,0.427,22,0.645,23,0.563,24,0.945,25,0.264,26,0.826,27,0.826,28,0.341,29,0.78,30,0.473,31,0.473,32,0.696,33,0.622,34,0.622,35,0.427,36,0.473,37,0.383,38,0.903,39,0.383,40,0.473,41,0.473,42,0.427,43,0.784,44,0.473,45,0.427,46,0.473,47,0.427,48,0.473,49,0.427,50,0.473,51,0.427,52,0.473,53,0.427,54,0.473,55,0.427,56,0.667,57,0.335,58,0.388,59,0.595,60,0.595,61,0.595,62,0.656,63,0.502,64,0.595,65,0.595,66,0.595,67,0.595,68,0.656,69,0.595,70,0.595,71,0.383,72,0.668,73,0.826,74,0.563,75,0.473,76,0.655,77,0.473,78,0.896,79,0.443,80,0.841,81,0.744,82,0.427,83,0.97,84,0.427,85,0.427,86,0.935,87,0.473,88,1.184,89,0.473,90,0.427,91,0.427,92,0.563,93,0.6,94,0.427,95,0.427,96,0.473,97,0.383,98,1.043,99,0.744,100,0.473,101,0.944,102,0.473,103,0.821,104,0.696,105,0.696,106,1.023,107,0.526,108,0.696,109,0.563,110,0.696,111,1.079,112,0.628,113,0.473,114,0.427,115,0.473,116,0.473,117,0.473,118,0.696,119,0.473,120,0.427,121,0.473,122,0.301,123,1.176,124,0.905,125,0.563,126,0.473,127,0.834,128,0.341,129,0.383,130,1.224,131,0.473,132,0.91,133,0.473,134,0.696,135,0.502,136,0.473,137,0.696,138,0.696,139,1.237,140,1.157,141,1.043,142,1.06,143,1.157,144,1.157,145,0.383,146,0.473,147,0.473,148,0.473,149,0.473,150,0.473,151,0.473,152,0.473,153,0.473,154,0.826,155,1.014,156,0.826,157,0.97,158,0.696,159,0.826,160,1.076,161,0.473,162,0.473,163,1.117,164,0.91,165,0.668,166,0.685,167,0.473,168,0.97,169,0.91,170,0.91,171,0.91,172,0.58,173,0.473,174,0.696,175,0.91,176,0.696,177,0.668,178,0.473,179,0.473,180,0.473,181,0.383,182,0.563,183,0.473,184,0.473,185,0.473,186,0.563,187,0.91,188,1.098,189,0.821,190,0.744,191,0.97,192,1.076,193,0.563,194,0.473,195,0.696,196,0.473,197,0.427,198,0.473,199,0.696,200,0.473,201,0.473,202,0.595,203,0.696,204,0.696,205,0.821,206,0.563,207,0.696,208,0.473,209,0.473,210,0.341,211,0.02,212,0.02,213,0.93]],["title/interfaces/SwitchControlOptions.html",[0,0.103,65,0.448]],["body/interfaces/SwitchControlOptions.html",[0,0.197,1,0.676,2,0.436,3,0.308,4,0.308,5,0.269,6,0.197,7,0.164,8,0.269,9,0.391,10,0.232,11,0.751,12,1.082,13,0.93,14,0.637,15,0.599,16,0.917,17,0.037,18,0.909,19,0.677,20,0.436,21,0.436,22,0.647,23,0.571,24,0.952,25,0.269,26,0.836,27,0.836,28,0.348,29,0.782,30,0.483,31,0.483,32,0.707,33,0.625,34,0.625,35,0.436,36,0.483,37,0.391,38,0.907,39,0.391,40,0.483,41,0.483,42,0.436,43,0.791,44,0.483,45,0.436,46,0.483,47,0.436,48,0.483,49,0.436,50,0.483,51,0.436,52,0.483,53,0.436,54,0.483,55,0.436,56,0.669,57,0.34,58,0.394,59,0.602,60,0.602,61,0.602,62,0.662,63,0.509,64,0.602,65,0.662,66,0.602,67,0.602,68,0.602,69,0.602,70,0.602,71,0.391,72,0.676,73,0.836,74,0.571,75,0.483,76,0.657,77,0.483,78,0.898,79,0.45,80,0.844,81,0.753,82,0.436,83,0.836,84,0.436,85,0.436,86,0.939,87,0.483,88,1.187,89,0.483,90,0.436,91,0.436,92,0.571,93,0.603,94,0.436,95,0.436,96,0.483,97,0.391,98,1.047,99,0.753,100,0.483,101,0.947,102,0.483,103,0.829,104,0.707,105,0.707,106,1.023,107,0.532,108,0.707,109,0.571,110,0.707,111,1.056,112,0.637,113,0.483,114,0.436,115,0.483,116,0.483,117,0.483,118,0.707,119,0.483,120,0.436,121,0.483,122,0.308,123,1.18,124,0.907,125,0.571,126,0.483,127,0.837,128,0.348,129,0.391,130,1.227,131,0.483,132,0.919,133,0.483,134,0.707,135,0.509,136,0.483,137,0.707,138,0.707,139,1.239,140,1.161,141,1.047,142,1.064,143,1.161,144,1.161,145,0.391,146,0.483,147,0.483,148,0.483,149,0.483,150,0.483,151,0.483,152,0.483,153,0.483,154,0.707,155,0.836,156,0.707,157,0.707,158,0.707,159,0.836,160,1.056,161,0.483,162,0.483,163,1.022,164,0.836,165,0.676,166,0.689,167,0.483,168,0.978,169,0.919,170,0.919,171,0.919,172,0.586,173,0.483,174,0.707,175,0.919,176,0.707,177,0.532,178,0.483,179,0.483,180,0.483,181,0.391,182,0.571,183,0.483,184,0.483,185,0.483,186,0.571,187,0.919,188,1.104,189,0.829,190,0.753,191,0.976,192,1.082,193,0.571,194,0.483,195,0.707,196,0.483,197,0.436,198,0.483,199,0.707,200,0.483,201,0.483,202,0.509,203,0.483,204,0.483,205,0.436,206,0.571,207,0.707,208,0.483,209,0.483,210,0.348,211,0.02,212,0.02,213,0.944]],["title/interfaces/TextareaControlOptions.html",[0,0.103,60,0.448]],["body/interfaces/TextareaControlOptions.html",[0,0.197,1,0.671,2,0.431,3,0.304,4,0.304,5,0.266,6,0.195,7,0.162,8,0.266,9,0.386,10,0.23,11,0.75,12,1.148,13,0.928,14,0.632,15,0.602,16,0.917,17,0.037,18,0.908,19,0.683,20,0.431,21,0.431,22,0.646,23,0.567,24,0.948,25,0.266,26,0.83,27,0.83,28,0.344,29,0.781,30,0.478,31,0.478,32,0.701,33,0.624,34,0.624,35,0.431,36,0.478,37,0.386,38,0.905,39,0.386,40,0.478,41,0.478,42,0.431,43,0.787,44,0.478,45,0.431,46,0.478,47,0.431,48,0.478,49,0.431,50,0.478,51,0.431,52,0.478,53,0.431,54,0.478,55,0.431,56,0.668,57,0.337,58,0.391,59,0.598,60,0.659,61,0.598,62,0.659,63,0.505,64,0.598,65,0.598,66,0.598,67,0.598,68,0.598,69,0.598,70,0.598,71,0.386,72,0.787,73,0.83,74,0.567,75,0.478,76,0.656,77,0.478,78,0.897,79,0.446,80,0.842,81,0.748,82,0.431,83,0.83,84,0.431,85,0.431,86,0.917,87,0.478,88,1.185,89,0.478,90,0.431,91,0.431,92,0.567,93,0.601,94,0.431,95,0.431,96,0.478,97,0.386,98,1.023,99,0.878,100,0.478,101,0.945,102,0.478,103,0.825,104,0.701,105,0.701,106,1.022,107,0.529,108,0.701,109,0.567,110,0.701,111,1.069,112,0.748,113,0.478,114,0.431,115,0.478,116,0.478,117,0.478,118,0.701,119,0.478,120,0.431,121,0.478,122,0.304,123,1.185,124,0.906,125,0.567,126,0.478,127,0.842,128,0.344,129,0.386,130,1.226,131,0.478,132,0.915,133,0.478,134,0.701,135,0.505,136,0.478,137,0.701,138,0.701,139,1.238,140,1.159,141,1.045,142,1.062,143,1.159,144,1.159,145,0.386,146,0.701,147,0.915,148,0.701,149,0.701,150,0.701,151,0.915,152,0.478,153,0.478,154,0.701,155,0.83,156,0.701,157,0.701,158,0.701,159,0.83,160,1.052,161,0.478,162,0.478,163,1.018,164,0.83,165,0.671,166,0.687,167,0.478,168,0.974,169,0.915,170,0.915,171,0.915,172,0.582,173,0.478,174,0.701,175,0.915,176,0.701,177,0.529,178,0.478,179,0.478,180,0.478,181,0.386,182,0.567,183,0.478,184,0.478,185,0.478,186,0.567,187,0.915,188,1.101,189,0.825,190,0.748,191,0.973,192,1.079,193,0.567,194,0.478,195,0.701,196,0.478,197,0.431,198,0.478,199,0.701,200,0.478,201,0.478,202,0.505,203,0.478,204,0.478,205,0.431,206,0.567,207,0.701,208,0.478,209,0.478,210,0.344,211,0.02,212,0.02,213,0.936,214,1.124]],["title/interfaces/TimePickerControlOptions.html",[0,0.103,64,0.448]],["body/interfaces/TimePickerControlOptions.html",[0,0.197,1,0.67,2,0.43,3,0.304,4,0.304,5,0.266,6,0.195,7,0.161,8,0.266,9,0.385,10,0.229,11,0.75,12,1.168,13,0.928,14,0.631,15,0.603,16,0.918,17,0.037,18,0.908,19,0.676,20,0.43,21,0.43,22,0.646,23,0.566,24,0.948,25,0.266,26,0.829,27,0.829,28,0.344,29,0.78,30,0.477,31,0.477,32,0.7,33,0.623,34,0.623,35,0.43,36,0.477,37,0.385,38,0.904,39,0.385,40,0.477,41,0.477,42,0.43,43,0.787,44,0.477,45,0.43,46,0.477,47,0.43,48,0.477,49,0.43,50,0.477,51,0.43,52,0.477,53,0.43,54,0.477,55,0.43,56,0.668,57,0.337,58,0.39,59,0.597,60,0.597,61,0.597,62,0.658,63,0.504,64,0.658,65,0.597,66,0.597,67,0.597,68,0.597,69,0.597,70,0.597,71,0.385,72,0.67,73,0.829,74,0.566,75,0.477,76,0.656,77,0.477,78,0.897,79,0.446,80,0.842,81,0.748,82,0.43,83,0.829,84,0.43,85,0.43,86,0.937,87,0.477,88,1.185,89,0.477,90,0.43,91,0.43,92,0.566,93,0.601,94,0.43,95,0.43,96,0.477,97,0.385,98,1.044,99,0.748,100,0.477,101,0.945,102,0.477,103,0.824,104,0.7,105,0.7,106,1.022,107,0.528,108,0.7,109,0.566,110,0.7,111,1.068,112,0.631,113,0.477,114,0.43,115,0.477,116,0.477,117,0.477,118,0.7,119,0.477,120,0.43,121,0.477,122,0.304,123,1.177,124,0.906,125,0.566,126,0.477,127,0.835,128,0.344,129,0.385,130,1.225,131,0.477,132,0.914,133,0.477,134,0.7,135,0.504,136,0.477,137,0.7,138,0.7,139,1.238,140,1.158,141,1.044,142,1.061,143,1.158,144,1.158,145,0.385,146,0.477,147,0.477,148,0.477,149,0.477,150,0.477,151,0.477,152,0.477,153,0.477,154,0.7,155,0.829,156,0.7,157,0.7,158,0.7,159,0.829,160,1.051,161,0.477,162,0.477,163,1.119,164,0.914,165,0.67,166,0.687,167,0.477,168,1.017,169,0.973,170,0.973,171,1.051,172,0.648,173,0.477,174,0.829,175,1.078,176,0.7,177,0.528,178,0.477,179,0.477,180,0.477,181,0.385,182,0.566,183,0.477,184,0.477,185,0.477,186,0.566,187,0.914,188,1.1,189,0.824,190,0.748,191,0.972,192,1.078,193,0.566,194,0.477,195,0.7,196,0.477,197,0.43,198,0.477,199,0.7,200,0.477,201,0.477,202,0.504,203,0.477,204,0.477,205,0.43,206,0.566,207,0.7,208,0.477,209,0.477,210,0.344,211,0.02,212,0.02,213,0.935,214,1.122]],["title/coverage.html",[482,3.509]],["body/coverage.html",[0,0.21,1,0.645,5,0.445,6,0.528,7,0.438,8,0.719,9,1.022,15,0.384,17,0.036,19,0.445,29,0.508,58,0.445,59,0.575,60,0.575,61,0.575,62,0.575,63,0.575,64,0.575,65,0.575,66,0.575,67,0.575,68,0.575,69,0.575,70,0.575,76,0.445,101,0.645,107,0.508,122,0.508,127,0.575,128,0.575,129,0.645,145,0.645,165,0.645,166,0.508,172,0.508,177,0.508,182,0.645,193,0.645,202,0.575,206,0.645,210,0.575,211,0.028,212,0.028,215,2.541,216,2.042,218,3.57,219,3.57,248,2.265,249,2.265,254,3.317,326,2.868,430,2.042,482,3.317,483,3.317,484,3.999,485,3.999,486,6.373,487,4.978,488,3.999,489,3.999,490,4.553,491,6.349,492,6.349,493,3.317,494,2.868,495,4.978,496,3.999,497,3.999,498,3.999,499,3.999,500,3.999,501,5.42,502,3.999,503,5.42,504,5.42,505,3.999,506,3.999,507,3.999,508,3.999,509,4.978,510,3.999,511,3.999,512,3.999,513,3.999,514,3.999,515,3.999,516,3.999,517,3.999,518,3.999,519,3.999,520,3.999]],["title/dependencies.html",[436,2.369,521,2.166]],["body/dependencies.html",[17,0.036,25,0.543,28,0.703,33,0.543,34,0.543,211,0.031,212,0.031,342,4.053,436,3.094,448,4.053,522,4.886,523,6.315,524,4.886,525,5.611,526,4.655,527,4.053,528,4.886,529,4.053,530,4.886,531,4.886,532,4.886,533,4.886,534,4.886,535,4.886]],["title/index.html",[10,0.251,536,2.166,537,2.166]],["body/index.html",[7,0.427,11,0.622,13,0.907,14,0.881,15,0.514,16,0.704,17,0.037,18,0.808,19,0.644,20,0.701,21,0.701,22,0.681,29,0.495,33,0.545,34,0.545,56,0.675,57,0.54,76,0.545,78,0.77,79,0.622,93,0.433,97,0.629,103,0.701,107,0.816,109,0.907,122,0.622,124,0.704,125,0.968,127,0.872,135,0.56,141,0.701,142,0.881,166,0.788,172,0.495,177,0.681,181,0.629,186,0.629,189,0.881,191,0.701,197,0.881,211,0.027,212,0.027,234,3.435,248,3.556,262,2.467,290,4.661,292,4.062,326,2.794,381,3.231,433,2.794,434,3.033,449,3.231,472,3.231,494,2.794,527,3.231,529,4.062,538,6.164,539,3.896,540,5.356,541,5.79,542,3.896,543,4.897,544,5.356,545,3.896,546,3.896,547,3.896,548,3.896,549,3.896,550,4.897,551,4.062,552,3.896,553,3.896,554,4.897,555,3.896,556,3.896,557,3.896,558,3.896,559,3.896,560,3.896,561,3.896,562,3.896,563,3.896,564,3.896,565,3.896,566,3.896,567,3.896,568,3.896,569,4.897,570,4.897,571,4.897,572,4.897,573,4.897,574,4.897,575,4.062,576,4.897,577,3.896,578,3.896,579,3.896,580,3.896,581,3.896,582,3.896,583,3.896,584,3.896,585,3.896,586,3.896,587,3.896,588,3.896,589,3.896,590,3.896,591,3.896,592,3.896,593,4.897,594,3.896,595,3.896,596,3.896,597,3.231,598,3.896,599,3.231,600,3.231,601,3.896,602,3.896,603,3.896,604,5.356,605,4.897,606,3.896,607,3.896,608,3.896,609,3.896,610,3.896,611,3.896,612,3.896,613,3.896,614,3.896,615,3.896,616,3.896]],["title/license.html",[536,2.166,537,2.166,617,2.166]],["body/license.html",[17,0.031,76,0.524,84,0.847,112,0.847,205,0.847,211,0.031,212,0.031,325,3.905,443,3.376,483,3.905,575,4.556,599,3.905,617,3.905,618,4.708,619,5.815,620,4.708,621,5.492,622,4.708,623,4.708,624,4.708,625,4.708,626,4.708,627,4.708,628,5.492,629,6.31,630,4.708,631,4.708,632,4.708,633,5.815,634,4.708,635,5.492,636,4.708,637,4.708,638,4.708,639,4.708,640,4.708,641,4.708,642,4.708,643,4.708,644,4.708,645,5.492,646,4.708,647,4.708,648,4.708,649,4.708,650,4.708,651,4.708,652,5.492,653,5.492,654,4.708,655,4.708,656,4.708,657,4.708,658,4.708,659,4.708,660,4.708,661,4.708,662,4.708,663,4.708,664,4.708,665,4.708,666,4.708,667,4.708,668,4.708,669,4.708,670,4.708,671,4.708,672,4.708,673,4.708,674,4.708,675,4.708,676,4.708,677,4.708,678,4.708,679,4.708,680,4.708]],["title/modules.html",[435,3.034]],["body/modules.html",[17,0.032,186,0.81,211,0.032,212,0.032,434,2.844,435,3.602,526,4.166,681,5.022,682,5.022]],["title/overview.html",[683,3.509]],["body/overview.html",[2,0.85,17,0.036,211,0.031,212,0.031,216,2.973,217,2.992,248,2.676,249,3.63,257,4.177,258,4.177,259,4.177,260,4.177,261,4.381,262,3.868,430,2.973,433,3.389,434,3.575,436,3.485,437,3.919,438,3.919,439,3.919,440,3.919,441,4.565,442,3.919,443,3.389,597,4.565,600,3.919,683,3.919,684,4.725]],["title/properties.html",[11,0.476,521,2.166]],["body/properties.html",[11,0.639,17,0.034,211,0.032,212,0.032,685,5.03,686,5.03]],["title/miscellaneous/typealiases.html",[687,1.654,688,3.741]],["body/miscellaneous/typealiases.html",[6,0.447,7,0.371,8,0.61,9,1.012,10,0.451,15,0.527,17,0.036,57,0.527,58,0.522,59,0.675,60,0.675,61,0.675,62,0.675,63,0.675,64,0.675,65,0.675,66,0.675,67,0.675,68,0.675,69,0.675,70,0.675,71,0.757,72,0.885,81,1.045,82,0.845,86,0.885,90,0.986,91,0.845,92,0.885,93,0.61,94,0.986,95,0.845,97,0.757,98,0.986,99,0.845,135,0.675,211,0.031,212,0.031,214,1.502,309,3.894,490,3.932,687,2.973,689,4.694,690,5.204,691,4.548,692,4.694,693,4.694]],["title/miscellaneous/variables.html",[687,1.654,694,3.103]],["body/miscellaneous/variables.html",[6,0.352,7,0.292,8,0.481,10,0.415,16,0.924,17,0.037,18,0.622,19,0.581,57,0.415,106,1.032,107,0.713,122,0.664,124,0.918,127,0.751,128,0.751,129,0.843,145,0.843,166,0.664,172,0.664,177,0.664,182,0.843,193,0.843,202,0.751,206,0.843,210,0.751,211,0.029,212,0.029,293,5.303,343,3.586,490,4.593,493,4.331,494,3.745,551,3.586,687,2.738,690,5.303,691,3.586,694,3.586,695,4.323,696,4.323,697,4.323,698,4.323,699,4.323,700,4.323,701,4.323,702,4.323,703,4.323,704,4.323,705,4.323,706,4.323,707,4.323,708,4.323,709,4.323,710,4.323,711,4.323,712,4.323,713,4.323,714,4.323,715,4.323]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0.0.0",{"_index":686,"title":{},"body":{"properties.html":{}}}],["0.11.4",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":597,"title":{},"body":{"index.html":{},"overview.html":{}}}],["10",{"_index":573,"title":{},"body":{"index.html":{}}}],["10/12",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":424,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["13.0.0",{"_index":554,"title":{},"body":{"index.html":{}}}],["13.1.1",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["13.2.0",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":684,"title":{},"body":{"overview.html":{}}}],["2",{"_index":600,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2.3.0",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["2/25",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["2022",{"_index":599,"title":{},"body":{"index.html":{},"license.html":{}}}],["22",{"_index":601,"title":{},"body":{"index.html":{}}}],["3/4",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":422,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["6",{"_index":576,"title":{},"body":{"index.html":{}}}],["6/7",{"_index":513,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["7.5.0",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["7.5px",{"_index":420,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["7/9",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["8/10",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["9/12",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["_model",{"_index":268,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["_schema",{"_index":269,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["above",{"_index":651,"title":{},"body":{"license.html":{}}}],["abstractcontrol",{"_index":337,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["accessors",{"_index":289,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["action",{"_index":674,"title":{},"body":{"license.html":{}}}],["actual_component",{"_index":432,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["adapt",{"_index":148,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["additional",{"_index":611,"title":{},"body":{"index.html":{}}}],["addonafter",{"_index":282,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["addonbefore",{"_index":283,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["aliases",{"_index":689,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["and/or",{"_index":643,"title":{},"body":{"license.html":{}}}],["angular",{"_index":540,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":448,"title":{},"body":{"modules/FluentFormModule.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":25,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":28,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["antd",{"_index":529,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["antd/button",{"_index":452,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/cascader",{"_index":35,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/checkbox",{"_index":37,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/core/types",{"_index":39,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/date",{"_index":42,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/divider",{"_index":457,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/form",{"_index":459,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/input",{"_index":45,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/radio",{"_index":47,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/select",{"_index":49,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/slider",{"_index":51,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/spin",{"_index":466,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["antd/switch",{"_index":53,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["antd/time",{"_index":55,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["anycontroloptions",{"_index":57,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":541,"title":{},"body":{"index.html":{}}}],["arising",{"_index":678,"title":{},"body":{"license.html":{}}}],["array",{"_index":189,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["array.isarray(option.name",{"_index":369,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["associated",{"_index":630,"title":{},"body":{"license.html":{}}}],["async",{"_index":119,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["asynchronously",{"_index":200,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["asyncvalidator",{"_index":121,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["asyncvalidatorfn",{"_index":26,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["authors",{"_index":668,"title":{},"body":{"license.html":{}}}],["autosize",{"_index":151,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["b",{"_index":692,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["back",{"_index":136,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["based",{"_index":552,"title":{},"body":{"index.html":{}}}],["baseformcontroloptions",{"_index":1,"title":{"interfaces/BaseFormControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["before",{"_index":133,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["bidirectional",{"_index":588,"title":{},"body":{"index.html":{}}}],["binder.directive",{"_index":470,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["binder.directive.ts",{"_index":219,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"directives/FluentPropertyBinderDirective.html":{},"coverage.html":{}}}],["binder.directive.ts:12",{"_index":474,"title":{},"body":{"directives/FluentPropertyBinderDirective.html":{}}}],["binder.directive.ts:13",{"_index":231,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["binder.directive.ts:8",{"_index":473,"title":{},"body":{"directives/FluentPropertyBinderDirective.html":{}}}],["binder.directive.ts:9",{"_index":230,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["binding",{"_index":610,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":111,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["bottom",{"_index":419,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["bound",{"_index":144,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["box",{"_index":132,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["browse",{"_index":682,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":526,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["build",{"_index":569,"title":{},"body":{"index.html":{}}}],["builder",{"_index":691,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["builder().type('cascader').name(name",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('checkbox').name(name",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('date').name(name",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('email').name(name",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('embed').name(name",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('number').name(name",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('password').name(name",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('radio').name(name",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('range').name(name",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('select').name(name",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('slider').name(name",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('switch').name(name",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('text').name(name",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('textarea').name(name",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["builder().type('time').name(name",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["building",{"_index":539,"title":{},"body":{"index.html":{}}}],["built",{"_index":547,"title":{},"body":{"index.html":{}}}],["button",{"_index":170,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["c",{"_index":84,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"license.html":{}}}],["c[k",{"_index":87,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["c[p",{"_index":100,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["callback",{"_index":140,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["cancel",{"_index":287,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["cansave",{"_index":284,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["cascader",{"_index":193,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cascadercontroloptions",{"_index":67,"title":{"interfaces/CascaderControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["change",{"_index":139,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["charge",{"_index":625,"title":{},"body":{"license.html":{}}}],["checkbox",{"_index":210,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["checkboxcontroloptions",{"_index":70,"title":{"interfaces/CheckboxControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["checked",{"_index":385,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["claim",{"_index":671,"title":{},"body":{"license.html":{}}}],["class",{"_index":234,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"index.html":{}}}],["clean",{"_index":169,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["clear",{"_index":171,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["clearformcontrols",{"_index":272,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["clearformcontrols(form",{"_index":300,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["cluster_fluentformmodule",{"_index":437,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_declarations",{"_index":438,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_exports",{"_index":440,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["cluster_fluentformmodule_fluentformcomponent_providers",{"_index":439,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["code",{"_index":566,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":447,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["component",{"_index":248,"title":{"components/FluentFormComponent.html":{}},"body":{"components/FluentFormComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":428,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["componenteventlistener",{"_index":86,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["componenteventname",{"_index":81,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["componentinput",{"_index":98,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["componentinputname",{"_index":94,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["componentproperty",{"_index":90,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["components",{"_index":250,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["conditions",{"_index":650,"title":{},"body":{"license.html":{}}}],["configuration",{"_index":546,"title":{},"body":{"index.html":{}}}],["connection",{"_index":679,"title":{},"body":{"license.html":{}}}],["console.log(event",{"_index":616,"title":{},"body":{"index.html":{}}}],["const",{"_index":237,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["constructor",{"_index":228,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["containment",{"_index":203,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["content",{"_index":149,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["contract",{"_index":675,"title":{},"body":{"license.html":{}}}],["control",{"_index":18,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["control's",{"_index":108,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["control.addvalidators(validators.email",{"_index":408,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["control.addvalidators(validators.required",{"_index":410,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["controlname",{"_index":387,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["controls",{"_index":551,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["controls.reduce((form",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controlvalueaccessor",{"_index":255,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["copies",{"_index":645,"title":{},"body":{"license.html":{}}}],["copy",{"_index":628,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":619,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":192,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["coverage",{"_index":482,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["damages",{"_index":672,"title":{},"body":{"license.html":{}}}],["data",{"_index":188,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["date",{"_index":166,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["date('date').label('label').placeholder('placeholder').span(6",{"_index":572,"title":{},"body":{"index.html":{}}}],["date('date').label('label').placeholder('placeholder').span(6).mapper",{"_index":594,"title":{},"body":{"index.html":{}}}],["date(name).format('yyyy",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(o",{"_index":381,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["date(value",{"_index":379,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["date)?.gettime",{"_index":394,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["date.now",{"_index":574,"title":{},"body":{"index.html":{}}}],["datecontroloptions",{"_index":165,"title":{"interfaces/DateControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["datepickercontroloptions",{"_index":62,"title":{"interfaces/DatePickerControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["datetime",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dd",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deal",{"_index":632,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":680,"title":{},"body":{"license.html":{}}}],["debouncetime",{"_index":340,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["debouncetime(50",{"_index":356,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["decimal",{"_index":158,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["declarations",{"_index":445,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["deep",{"_index":416,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["default",{"_index":293,"title":{},"body":{"components/FluentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":229,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["definition",{"_index":559,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":436,"title":{"dependencies.html":{}},"body":{"modules/FluentFormModule.html":{},"dependencies.html":{},"overview.html":{}}}],["destroy",{"_index":270,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["detail",{"_index":585,"title":{},"body":{"index.html":{}}}],["directive",{"_index":215,"title":{"directives/FluentEventBinderDirective.html":{},"directives/FluentPropertyBinderDirective.html":{}},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{},"coverage.html":{}}}],["directives",{"_index":217,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{},"overview.html":{}}}],["directives/fluent",{"_index":469,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["disable",{"_index":113,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["disabled",{"_index":114,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["display",{"_index":174,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["distribute",{"_index":641,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":483,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":252,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["dynamic",{"_index":527,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["e",{"_index":89,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["element",{"_index":426,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["elements",{"_index":605,"title":{},"body":{"index.html":{}}}],["email",{"_index":128,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":122,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["embed('detail').label('detail').span(24).schema(form",{"_index":583,"title":{},"body":{"index.html":{}}}],["embedded",{"_index":126,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["embeddedformoptions",{"_index":58,"title":{"interfaces/EmbeddedFormOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["end",{"_index":609,"title":{},"body":{"index.html":{}}}],["end']).label('label').span(6",{"_index":607,"title":{},"body":{"index.html":{}}}],["error",{"_index":115,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["errortip",{"_index":117,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["event",{"_index":76,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["eventemitter",{"_index":23,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["eventemitter).subscribe((event",{"_index":247,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["eventname",{"_index":244,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["example",{"_index":591,"title":{},"body":{"index.html":{}}}],["examples",{"_index":564,"title":{},"body":{"index.html":{}}}],["exclude",{"_index":82,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["expand",{"_index":194,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["expect",{"_index":593,"title":{},"body":{"index.html":{}}}],["expects",{"_index":592,"title":{},"body":{"index.html":{}}}],["export",{"_index":56,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["exports",{"_index":446,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["express",{"_index":659,"title":{},"body":{"license.html":{}}}],["extends",{"_index":88,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["extract",{"_index":95,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["features",{"_index":542,"title":{},"body":{"index.html":{}}}],["field",{"_index":123,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["files",{"_index":631,"title":{},"body":{"license.html":{}}}],["fitness",{"_index":664,"title":{},"body":{"license.html":{}}}],["fluent",{"_index":7,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["fluenteventbinder",{"_index":224,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["fluenteventbinder]'},{'name",{"_index":429,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["fluenteventbinderdirective",{"_index":216,"title":{"directives/FluentEventBinderDirective.html":{}},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["fluentformcomponent",{"_index":249,"title":{"components/FluentFormComponent.html":{}},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"coverage.html":{},"overview.html":{}}}],["fluentformmodule",{"_index":434,"title":{"modules/FluentFormModule.html":{}},"body":{"modules/FluentFormModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["fluentpropertybinder",{"_index":431,"title":{},"body":{"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["fluentpropertybinderdirective",{"_index":430,"title":{"directives/FluentPropertyBinderDirective.html":{}},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"coverage.html":{},"overview.html":{}}}],["fn",{"_index":317,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["following",{"_index":649,"title":{},"body":{"license.html":{}}}],["form",{"_index":107,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["form.component",{"_index":471,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["form.component.html",{"_index":266,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.scss",{"_index":264,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts",{"_index":254,"title":{},"body":{"components/FluentFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:126",{"_index":305,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:161",{"_index":307,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:188",{"_index":302,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:19",{"_index":329,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:20",{"_index":327,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:21",{"_index":324,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:22",{"_index":323,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:24",{"_index":331,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:25",{"_index":333,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:32",{"_index":297,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:33",{"_index":336,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:40",{"_index":328,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:42",{"_index":296,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:43",{"_index":295,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:44",{"_index":294,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:45",{"_index":298,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:47",{"_index":299,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:48",{"_index":291,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:52",{"_index":312,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:62",{"_index":311,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:67",{"_index":321,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:71",{"_index":316,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:75",{"_index":319,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:77",{"_index":314,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:81",{"_index":313,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.component.ts:91",{"_index":310,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.control.ts",{"_index":490,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["form.controls[controlname].setvalue(value",{"_index":389,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.controls[option.name",{"_index":374,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.interface",{"_index":233,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["form.interface.ts",{"_index":9,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["form.module.ts",{"_index":444,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["form.push(control.build",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form.removecontrol(name",{"_index":413,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form.setcontrol(controlname",{"_index":411,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form/src/lib/directives/fluent",{"_index":218,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"directives/FluentPropertyBinderDirective.html":{},"coverage.html":{}}}],["form/src/lib/fluent",{"_index":8,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["form2model",{"_index":273,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form2model(form",{"_index":304,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["form[controlname",{"_index":390,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["format",{"_index":175,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["formcontrol",{"_index":338,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["formdocs",{"_index":557,"title":{},"body":{"index.html":{}}}],["formgroup",{"_index":301,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["forms",{"_index":550,"title":{},"body":{"index.html":{}}}],["forwardref",{"_index":260,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["free",{"_index":624,"title":{},"body":{"license.html":{}}}],["full",{"_index":558,"title":{},"body":{"index.html":{}}}],["function",{"_index":213,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["furnished",{"_index":648,"title":{},"body":{"license.html":{}}}],["getmodel",{"_index":330,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["getschema",{"_index":334,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["getting",{"_index":536,"title":{"index.html":{},"license.html":{}},"body":{}}],["granted",{"_index":623,"title":{},"body":{"license.html":{}}}],["grid",{"_index":20,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["h",{"_index":236,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["h[keyof",{"_index":481,"title":{},"body":{"directives/FluentPropertyBinderDirective.html":{}}}],["height",{"_index":150,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["here",{"_index":562,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":622,"title":{},"body":{"license.html":{}}}],["hh:mm:ss').showtime(true",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["holders",{"_index":669,"title":{},"body":{"license.html":{}}}],["host",{"_index":235,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["host.addeventlistener(eventname",{"_index":243,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["host[eventname",{"_index":245,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["host[property",{"_index":480,"title":{},"body":{"directives/FluentPropertyBinderDirective.html":{}}}],["hour",{"_index":178,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["html",{"_index":71,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["htmlelement",{"_index":242,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["htmlelementeventlistener",{"_index":72,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["htmlelementeventmap",{"_index":75,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["htmlelementeventmap[k",{"_index":77,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["hyperlifelll9",{"_index":620,"title":{},"body":{"license.html":{}}}],["i/o",{"_index":102,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["icon",{"_index":134,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["identifier",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":220,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["implied",{"_index":660,"title":{},"body":{"license.html":{}}}],["import",{"_index":22,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["imports",{"_index":472,"title":{},"body":{"modules/FluentFormModule.html":{},"index.html":{}}}],["included",{"_index":205,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"license.html":{}}}],["including",{"_index":635,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":581,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["initializeform",{"_index":274,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["initializeform(form",{"_index":306,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["inline",{"_index":176,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["input",{"_index":93,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["inputcontroloptions",{"_index":59,"title":{"interfaces/InputControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["inputs",{"_index":227,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["install",{"_index":555,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":241,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["interface",{"_index":0,"title":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"overview.html":{}}}],["item",{"_index":417,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["json",{"_index":544,"title":{},"body":{"index.html":{}}}],["k",{"_index":73,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["keyof",{"_index":74,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["kind",{"_index":658,"title":{},"body":{"license.html":{}}}],["label",{"_index":13,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["layout",{"_index":21,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["legend",{"_index":425,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["length",{"_index":164,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["liability",{"_index":673,"title":{},"body":{"license.html":{}}}],["liable",{"_index":670,"title":{},"body":{"license.html":{}}}],["license",{"_index":617,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":185,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["limitation",{"_index":636,"title":{},"body":{"license.html":{}}}],["limited",{"_index":661,"title":{},"body":{"license.html":{}}}],["lines",{"_index":146,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["listener",{"_index":142,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["listeners",{"_index":141,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["literal",{"_index":214,"title":{},"body":{"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"directives/FluentEventBinderDirective.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["load",{"_index":199,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["map",{"_index":97,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["mapper",{"_index":103,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["mapping",{"_index":589,"title":{},"body":{"index.html":{}}}],["maps",{"_index":104,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["margin",{"_index":418,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["matching",{"_index":212,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":155,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["maximum",{"_index":154,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["maxrows",{"_index":153,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["merchantability",{"_index":663,"title":{},"body":{"license.html":{}}}],["merge",{"_index":639,"title":{},"body":{"license.html":{}}}],["message",{"_index":116,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["metadata",{"_index":222,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["methods",{"_index":225,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["min",{"_index":157,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["minimum",{"_index":156,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["minrows",{"_index":152,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["minute",{"_index":179,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["miscellaneous",{"_index":687,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":618,"title":{},"body":{"license.html":{}}}],["mix",{"_index":577,"title":{},"body":{"index.html":{}}}],["mm",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mode",{"_index":160,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["model",{"_index":290,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["model's",{"_index":105,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["model(value",{"_index":346,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model2form",{"_index":275,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model2form(model",{"_index":308,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model?.[option.name",{"_index":372,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model?.[property",{"_index":371,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model[option.name",{"_index":392,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["model[property",{"_index":396,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["modify",{"_index":638,"title":{},"body":{"license.html":{}}}],["module",{"_index":433,"title":{"modules/FluentFormModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":435,"title":{"modules.html":{}},"body":{"modules/FluentFormModule.html":{},"modules.html":{}}}],["multi",{"_index":261,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["name",{"_index":124,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["need",{"_index":143,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nested",{"_index":579,"title":{},"body":{"index.html":{}}}],["nesting",{"_index":582,"title":{},"body":{"index.html":{}}}],["never",{"_index":83,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["new",{"_index":326,"title":{},"body":{"components/FluentFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":33,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{},"index.html":{}}}],["ng_value_accessor",{"_index":258,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["ngify/types",{"_index":30,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["ngmodule",{"_index":449,"title":{},"body":{"modules/FluentFormModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":276,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["ngoninit",{"_index":226,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["ngx",{"_index":538,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":667,"title":{},"body":{"license.html":{}}}],["notice",{"_index":652,"title":{},"body":{"license.html":{}}}],["now",{"_index":614,"title":{},"body":{"index.html":{}}}],["npm",{"_index":556,"title":{},"body":{"index.html":{}}}],["null",{"_index":292,"title":{},"body":{"components/FluentFormComponent.html":{},"index.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number('number').label('label').placeholder('placeholder').span(3).build",{"_index":578,"title":{},"body":{"index.html":{}}}],["number('number').label('label').placeholder('placeholder').span(3).max(100",{"_index":571,"title":{},"body":{"index.html":{}}}],["numberinputcontroloptions",{"_index":61,"title":{"interfaces/NumberInputControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["nz",{"_index":92,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["nz${capitalize",{"_index":96,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzbuttonmodule",{"_index":451,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzcascadercomponent",{"_index":31,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcascadercomponent['nzexpandtrigger",{"_index":196,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcascadercomponent['nzloaddata",{"_index":201,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcascadermodule",{"_index":453,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzcascaderoption",{"_index":32,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcheckboxgroupcomponent",{"_index":36,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzcheckboxmodule",{"_index":454,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzcheckboxoptioninterface",{"_index":339,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["nzcheckboxoptioninterface[])?.filter(o",{"_index":401,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["nzdatepickercomponent",{"_index":40,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzdatepickercomponent['nzmode",{"_index":167,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzdatepickermodule",{"_index":455,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzdividermodule",{"_index":456,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzformmodule",{"_index":458,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzinputmodule",{"_index":460,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzinputnumbercomponent",{"_index":44,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzinputnumbercomponent['nzprecisionmode",{"_index":162,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzinputnumbermodule",{"_index":461,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nznowtext",{"_index":613,"title":{},"body":{"index.html":{}}}],["nzopenchange",{"_index":615,"title":{},"body":{"index.html":{}}}],["nzradiogroupcomponent",{"_index":46,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzradiomodule",{"_index":462,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzrangepickercomponent",{"_index":41,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzsafeany",{"_index":38,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzselectcomponent",{"_index":48,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzselectcomponent['nzmode",{"_index":183,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzselectmodule",{"_index":463,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzslidercomponent",{"_index":50,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzslidermodule",{"_index":464,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzspinmodule",{"_index":465,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nzswitchcomponent",{"_index":52,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nzswitchmodule",{"_index":467,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["nztimepickercomponent",{"_index":54,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["nztimepickermodule",{"_index":468,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["o",{"_index":79,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["o.checked).map(o",{"_index":402,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o.getdate()].join",{"_index":598,"title":{},"body":{"index.html":{}}}],["o.getfullyear",{"_index":595,"title":{},"body":{"index.html":{}}}],["o.getmonth",{"_index":596,"title":{},"body":{"index.html":{}}}],["o.value",{"_index":403,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o?.gettime",{"_index":399,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o['property",{"_index":479,"title":{},"body":{"directives/FluentPropertyBinderDirective.html":{}}}],["o['property'])![property",{"_index":478,"title":{},"body":{"directives/FluentPropertyBinderDirective.html":{}}}],["o[option.options.label",{"_index":383,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["o[option.options.value",{"_index":384,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["object",{"_index":191,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["object.keys(form.controls).foreach(name",{"_index":412,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["object.keys(options.listener).foreach(eventname",{"_index":240,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["object.keys(options.property).foreach(property",{"_index":477,"title":{},"body":{"directives/FluentPropertyBinderDirective.html":{}}}],["obtaining",{"_index":627,"title":{},"body":{"license.html":{}}}],["omit",{"_index":91,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["oncancel",{"_index":277,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["oninit",{"_index":221,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["online",{"_index":563,"title":{},"body":{"index.html":{}}}],["onsubmit",{"_index":278,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["onvaluechange",{"_index":271,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option",{"_index":590,"title":{},"body":{"index.html":{}}}],["option.asyncvalidator",{"_index":407,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.disabled",{"_index":405,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.mapper",{"_index":376,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.mapper.input(value",{"_index":377,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.mapper.output(value",{"_index":393,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.name.foreach((property",{"_index":395,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.name.map(property",{"_index":370,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.name.tostring",{"_index":388,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.options.data.map(o",{"_index":382,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.required",{"_index":409,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.schema",{"_index":375,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.type",{"_index":373,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option.validator",{"_index":406,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["option[options.options.label",{"_index":415,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["options",{"_index":78,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["options.label",{"_index":414,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["options.listener",{"_index":239,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["options.load",{"_index":198,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["options.property",{"_index":476,"title":{},"body":{"directives/FluentPropertyBinderDirective.html":{}}}],["otherwise",{"_index":677,"title":{},"body":{"license.html":{}}}],["out",{"_index":443,"title":{},"body":{"modules/FluentFormModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":208,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["output",{"_index":109,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["outputs",{"_index":286,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["overview",{"_index":683,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":521,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":421,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["param",{"_index":367,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["parameters",{"_index":303,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["partial",{"_index":99,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/typealiases.html":{}}}],["particular",{"_index":665,"title":{},"body":{"license.html":{}}}],["password",{"_index":129,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission",{"_index":621,"title":{},"body":{"license.html":{}}}],["permit",{"_index":646,"title":{},"body":{"license.html":{}}}],["person",{"_index":626,"title":{},"body":{"license.html":{}}}],["persons",{"_index":647,"title":{},"body":{"license.html":{}}}],["picker",{"_index":43,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["placeholder",{"_index":130,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["please",{"_index":560,"title":{},"body":{"index.html":{}}}],["portions",{"_index":655,"title":{},"body":{"license.html":{}}}],["pre",{"_index":131,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["precision",{"_index":159,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["precisionmode",{"_index":161,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["prefix",{"_index":137,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["prerequisites",{"_index":553,"title":{},"body":{"index.html":{}}}],["private",{"_index":267,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["projects/.../fluent",{"_index":690,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"properties.html":{}}}],["property",{"_index":29,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{}}}],["provide",{"_index":257,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["provided",{"_index":656,"title":{},"body":{"license.html":{}}}],["providers",{"_index":256,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["publish",{"_index":640,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":666,"title":{},"body":{"license.html":{}}}],["radio",{"_index":206,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["radiocontroloptions",{"_index":69,"title":{"interfaces/RadioControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["range",{"_index":177,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["range(['start",{"_index":606,"title":{},"body":{"index.html":{}}}],["rangepickercontroloptions",{"_index":63,"title":{"interfaces/RangePickerControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["reactive",{"_index":549,"title":{},"body":{"index.html":{}}}],["reactiveformsmodule",{"_index":450,"title":{},"body":{"modules/FluentFormModule.html":{}}}],["realformcontroloptions",{"_index":101,"title":{"interfaces/RealFormControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{}}}],["record",{"_index":190,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["registeronchange",{"_index":279,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["registeronchange(fn",{"_index":315,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["registerontouched",{"_index":280,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["registerontouched(fn",{"_index":318,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["relationship",{"_index":204,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["require",{"_index":587,"title":{},"body":{"index.html":{}}}],["required",{"_index":110,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["reset",{"_index":442,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["restriction",{"_index":634,"title":{},"body":{"license.html":{}}}],["results",{"_index":211,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":343,"title":{},"body":{"components/FluentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":232,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["rights",{"_index":637,"title":{},"body":{"license.html":{}}}],["rows",{"_index":147,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["rxjs",{"_index":342,"title":{},"body":{"components/FluentFormComponent.html":{},"dependencies.html":{}}}],["safe",{"_index":545,"title":{},"body":{"index.html":{}}}],["sample",{"_index":565,"title":{},"body":{"index.html":{}}}],["schema",{"_index":125,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["schema(value",{"_index":352,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["schema.foreach(option",{"_index":368,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["search",{"_index":187,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["second",{"_index":180,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["select",{"_index":182,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcontroloptions",{"_index":66,"title":{"interfaces/SelectControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["selected",{"_index":184,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["selection",{"_index":602,"title":{},"body":{"index.html":{}}}],["selector",{"_index":223,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["sell",{"_index":644,"title":{},"body":{"license.html":{}}}],["set",{"_index":345,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["setmodel(value",{"_index":332,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["setschema(value",{"_index":335,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["shall",{"_index":653,"title":{},"body":{"license.html":{}}}],["show",{"_index":168,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["showtime",{"_index":173,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["slider",{"_index":202,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["slidercontroloptions",{"_index":68,"title":{"interfaces/SliderControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["software",{"_index":629,"title":{},"body":{"license.html":{}}}],["solid",{"_index":209,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["span",{"_index":14,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["spinning",{"_index":285,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["start",{"_index":608,"title":{},"body":{"index.html":{}}}],["started",{"_index":537,"title":{"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":163,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":207,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["styles",{"_index":251,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["styleurls",{"_index":263,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["subject",{"_index":325,"title":{},"body":{"components/FluentFormComponent.html":{},"license.html":{}}}],["sublicense",{"_index":642,"title":{},"body":{"license.html":{}}}],["submit",{"_index":288,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["subscribe((form",{"_index":358,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["substantial",{"_index":654,"title":{},"body":{"license.html":{}}}],["such",{"_index":603,"title":{},"body":{"index.html":{}}}],["suffix",{"_index":138,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["support",{"_index":186,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"modules.html":{}}}],["supports",{"_index":580,"title":{},"body":{"index.html":{}}}],["svg",{"_index":681,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":181,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["switchcontroloptions",{"_index":65,"title":{"interfaces/SwitchControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["switcher",{"_index":494,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["switcher('switch').label('label').span(2",{"_index":584,"title":{},"body":{"index.html":{}}}],["t",{"_index":309,"title":{},"body":{"components/FluentFormComponent.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["takeuntil",{"_index":341,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["takeuntil(this.destroy",{"_index":357,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["template",{"_index":135,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["templateref",{"_index":24,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["templateurl",{"_index":265,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["text",{"_index":127,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["text('text').label('label').placeholder('placeholder').span(6",{"_index":570,"title":{},"body":{"index.html":{}}}],["textarea",{"_index":145,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["textareacontroloptions",{"_index":60,"title":{"interfaces/TextareaControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["this._model",{"_index":344,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this._schema",{"_index":351,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.cancel.emit",{"_index":366,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.clearformcontrols(this.form",{"_index":353,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.destroy$.complete",{"_index":363,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.destroy$.next",{"_index":362,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.fluenteventbinder",{"_index":238,"title":{},"body":{"directives/FluentEventBinderDirective.html":{}}}],["this.fluentpropertybinder",{"_index":475,"title":{},"body":{"directives/FluentPropertyBinderDirective.html":{}}}],["this.form",{"_index":348,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form.valuechanges.pipe",{"_index":355,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form2model(form",{"_index":359,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.form2model(value",{"_index":391,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.initializeform(control",{"_index":404,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.initializeform(this.form",{"_index":354,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.model",{"_index":360,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.model2form(value",{"_index":347,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.onvaluechange",{"_index":364,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.onvaluechange?.(this.model",{"_index":361,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.onvaluechange?.(value",{"_index":350,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.schema",{"_index":349,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["this.submit.emit(this.model",{"_index":365,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["time",{"_index":172,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["time'].includes(option.type",{"_index":378,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["time('time').label('label').span(6).property",{"_index":612,"title":{},"body":{"index.html":{}}}],["timepickercontroloptions",{"_index":64,"title":{"interfaces/TimePickerControlOptions.html":{}},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["top",{"_index":548,"title":{},"body":{"index.html":{}}}],["tort",{"_index":676,"title":{},"body":{"license.html":{}}}],["tree",{"_index":253,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["trigger",{"_index":195,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["true",{"_index":262,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"index.html":{},"overview.html":{}}}],["tslib",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":604,"title":{},"body":{"index.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":688,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["u",{"_index":693,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["undefined",{"_index":85,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["unknown",{"_index":246,"title":{},"body":{"directives/FluentEventBinderDirective.html":{},"directives/FluentPropertyBinderDirective.html":{}}}],["unknown[])?.includes(o[option.options.value",{"_index":386,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["usage",{"_index":567,"title":{},"body":{"index.html":{}}}],["use",{"_index":575,"title":{},"body":{"index.html":{},"license.html":{}}}],["used",{"_index":197,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"index.html":{}}}],["useexisting",{"_index":259,"title":{},"body":{"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"overview.html":{}}}],["using",{"_index":543,"title":{},"body":{"index.html":{}}}],["validator",{"_index":118,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["validatorfn",{"_index":27,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["validators",{"_index":120,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["value",{"_index":106,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"components/FluentFormComponent.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"miscellaneous/variables.html":{}}}],["value.map((o",{"_index":380,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["value?.[index",{"_index":400,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["value?.[index]?.gettime",{"_index":397,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["value?.map((o",{"_index":398,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["values",{"_index":586,"title":{},"body":{"index.html":{}}}],["var",{"_index":427,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["variable",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":694,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":685,"title":{},"body":{"properties.html":{}}}],["visit",{"_index":561,"title":{},"body":{"index.html":{}}}],["void",{"_index":80,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"directives/FluentPropertyBinderDirective.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{}}}],["warranties",{"_index":662,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":657,"title":{},"body":{"license.html":{}}}],["whether",{"_index":112,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"license.html":{}}}],["width",{"_index":423,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["without",{"_index":633,"title":{},"body":{"license.html":{}}}],["writevalue",{"_index":281,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["writevalue(value",{"_index":320,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["yes",{"_index":322,"title":{},"body":{"components/FluentFormComponent.html":{}}}],["yourmodule",{"_index":568,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":441,"title":{},"body":{"modules/FluentFormModule.html":{},"overview.html":{}}}],["zorro",{"_index":34,"title":{},"body":{"interfaces/BaseFormControlOptions.html":{},"interfaces/CascaderControlOptions.html":{},"interfaces/CheckboxControlOptions.html":{},"interfaces/DateControlOptions.html":{},"interfaces/DatePickerControlOptions.html":{},"interfaces/EmbeddedFormOptions.html":{},"directives/FluentEventBinderDirective.html":{},"components/FluentFormComponent.html":{},"modules/FluentFormModule.html":{},"interfaces/InputControlOptions.html":{},"interfaces/NumberInputControlOptions.html":{},"interfaces/RadioControlOptions.html":{},"interfaces/RangePickerControlOptions.html":{},"interfaces/RealFormControlOptions.html":{},"interfaces/SelectControlOptions.html":{},"interfaces/SliderControlOptions.html":{},"interfaces/SwitchControlOptions.html":{},"interfaces/TextareaControlOptions.html":{},"interfaces/TimePickerControlOptions.html":{},"dependencies.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/BaseFormControlOptions.html":{"url":"interfaces/BaseFormControlOptions.html","title":"interface - BaseFormControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseFormControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            span\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Label for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        span\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        span:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Span of the control in grid layout\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Type of control\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CascaderControlOptions.html":{"url":"interfaces/CascaderControlOptions.html","title":"interface - CascaderControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CascaderControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            search\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            trigger\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Support search, cannot be used with options.load\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trigger\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        trigger:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Expand trigger for cascader control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckboxControlOptions.html":{"url":"interfaces/CheckboxControlOptions.html","title":"interface - CheckboxControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CheckboxControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateControlOptions.html":{"url":"interfaces/DateControlOptions.html","title":"interface - DateControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DateControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inline\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            showTime\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Date display format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inline\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inline:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Inline mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Mode of date picker control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        showTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        showTime:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show time picker in date picker\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatePickerControlOptions.html":{"url":"interfaces/DatePickerControlOptions.html","title":"interface - DatePickerControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatePickerControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmbeddedFormOptions.html":{"url":"interfaces/EmbeddedFormOptions.html","title":"interface - EmbeddedFormOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmbeddedFormOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            schema\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        schema\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        schema:         AnyControlOptions[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AnyControlOptions[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Schema for embedded form\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FluentEventBinderDirective.html":{"url":"directives/FluentEventBinderDirective.html","title":"directive - FluentEventBinderDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  FluentEventBinderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/directives/fluent-event-binder.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [fluentEventBinder]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fluentEventBinder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-fluent-form/src/lib/directives/fluent-event-binder.directive.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        fluentEventBinder\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/directives/fluent-event-binder.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/directives/fluent-event-binder.directive.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, EventEmitter, Input, OnInit } from '@angular/core';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { AnyControlOptions, ComponentEventListener, EmbeddedFormOptions, HTMLElementEventListener } from '../fluent-form.interface';\n\n@Directive({\n  selector: '[fluentEventBinder]'\n})\nexport class FluentEventBinderDirective> implements OnInit {\n  @Input() fluentEventBinder!: { host: H, options: O };\n\n  constructor() { }\n\n  ngOnInit() {\n    const { host, options } = this.fluentEventBinder;\n\n    options.listener && Object.keys(options.listener).forEach(eventName => {\n      if (host instanceof HTMLElement) {\n        host.addEventListener(eventName, (event: NzSafeAny) => {\n          (options.listener as HTMLElementEventListener)![\n            eventName as keyof HTMLElementEventListener\n          ]!(event, options);\n        });\n      } else {\n        (host[eventName as keyof H] as unknown as EventEmitter).subscribe((event: NzSafeAny) => {\n          (options.listener as ComponentEventListener)![\n            eventName as keyof ComponentEventListener\n          ]!(event, options);\n        });\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FluentFormComponent.html":{"url":"components/FluentFormComponent.html","title":"component - FluentFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FluentFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-fluent-form/src/lib/fluent-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                fluent-form\n            \n\n            \n                styleUrls\n                ./fluent-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./fluent-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _model\n                            \n                            \n                                    Private\n                                _schema\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                form\n                            \n                            \n                                    Private\n                                    Optional\n                                onValueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                clearFormControls\n                            \n                            \n                                    Private\n                                form2model\n                            \n                            \n                                    Private\n                                initializeForm\n                            \n                            \n                                    Private\n                                model2form\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addOnAfter\n                            \n                            \n                                addOnBefore\n                            \n                            \n                                canSave\n                            \n                            \n                                schema\n                            \n                            \n                                spinning\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    model\n                                \n                                \n                                    schema\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addOnAfter\n                    \n                \n                \n                    \n                        Type :     TemplateRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addOnBefore\n                    \n                \n                \n                    \n                        Type :     TemplateRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        canSave\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n                \n                    \n                        Type :     {}\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        spinning\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:45\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        cancel\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        clearFormControls\n                        \n                    \n                \n            \n            \n                \n                    \n                    clearFormControls(form: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:188\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        form2model\n                        \n                    \n                \n            \n            \n                \n                    \n                    form2model(form: Record, model: Record, schema: AnyControlOptions[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:126\n                \n            \n\n\n            \n                \n                    从表单赋值到模型\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                                AnyControlOptions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initializeForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeForm(form: FormGroup, schema: AnyControlOptions[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                                AnyControlOptions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        model2form\n                        \n                    \n                \n            \n            \n                \n                    \n                    model2form(model: T, form: FormGroup, schema: AnyControlOptions[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:91\n                \n            \n\n\n            \n                \n                    从模型赋值到表单\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    form\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    schema\n                                    \n                                                AnyControlOptions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: (value: T) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: NzSafeAny)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                            NzSafeAny\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(value?: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _model\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AnyControlOptions[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        onValueChange\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n\n                \n                    \n                        getmodel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:24\n                                \n                            \n\n                \n                    \n                        setmodel(value: T | undefined)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:25\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        T | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        schema\n                    \n                \n\n                \n                    \n                        getschema()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:32\n                                \n                            \n\n                \n                    \n                        setschema(value: AnyControlOptions[])\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-fluent-form/src/lib/fluent-form.component.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            AnyControlOptions[]\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, forwardRef, Input, OnInit, Output, TemplateRef } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport { NzCheckBoxOptionInterface } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { debounceTime, Subject, takeUntil } from 'rxjs';\nimport { AnyControlOptions } from './fluent-form.interface';\n\n@Component({\n  selector: 'fluent-form',\n  templateUrl: './fluent-form.component.html',\n  styleUrls: ['./fluent-form.component.scss'],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FluentFormComponent),\n    multi: true\n  }]\n})\nexport class FluentFormComponent> implements OnInit, ControlValueAccessor {\n  private onValueChange?: (value?: T) => void;\n  private destroy$: Subject = new Subject();\n  private _schema!: AnyControlOptions[];\n  private _model?: T;\n\n  get model(): T | undefined { return this._model; }\n  set model(value: T | undefined) {\n    this._model = value;\n    value && this.model2form(value, this.form, this.schema);\n    this.onValueChange?.(value);\n  }\n\n  @Input()\n  get schema() { return this._schema; }\n  set schema(value: AnyControlOptions[]) {\n    this.clearFormControls(this.form);\n    this.initializeForm(this.form, value);\n\n    this._schema = value;\n  }\n\n  form: FormGroup = new FormGroup({});\n\n  @Input() canSave: boolean = true;\n  @Input() addOnBefore: TemplateRef | null = null;\n  @Input() addOnAfter: TemplateRef | null = null;\n  @Input() spinning?: boolean;\n\n  @Output() submit: EventEmitter = new EventEmitter();\n  @Output() cancel: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.form.valueChanges.pipe(\n      debounceTime(50),\n      takeUntil(this.destroy$)\n    ).subscribe((form: T) => {\n      this.form2model(form, this.model ??= {} as T, this.schema);\n      this.onValueChange?.(this.model);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  writeValue(value?: T): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: (value?: T) => void): void {\n    this.onValueChange = fn;\n  }\n\n  registerOnTouched(fn: NzSafeAny): void { }\n\n  onSubmit() {\n    this.submit.emit(this.model);\n  }\n\n  onCancel() {\n    this.cancel.emit();\n  }\n\n  /**\n   * 从模型赋值到表单\n   * @param model\n   * @param form\n   * @param schema\n   */\n  private model2form(model: T, form: FormGroup, schema: AnyControlOptions[]) {\n    schema.forEach(option => {\n      // 如果是双字段模式，value 也将会是一个数组\n      let value = Array.isArray(option.name) ? option.name.map(property => model?.[property]) : model?.[option.name]\n\n      if (option.type === 'embed') {\n        return this.model2form(value, form.controls[option.name] as FormGroup, option.schema);\n      } else if (option.mapper) {\n        value = option.mapper.input(value);\n      } else if (['date', 'time'].includes(option.type)) {\n        value = value ? new Date(value) : null;\n      } else if (option.type === 'range') {\n        // 如果是双字段模式\n        if (Array.isArray(option.name)) {\n          value = value.map((o: string | number | Date) => o && new Date(o));\n        }\n      } else if (option.type === 'checkbox') {\n        value = option.options.data.map(o => ({\n          label: o[option.options.label ?? 'label'],\n          value: o[option.options.value ?? 'value'],\n          checked: (value as unknown[])?.includes(o[option.options.value ?? 'value'])\n        })) as NzCheckBoxOptionInterface[];\n      }\n\n      const controlName = option.name.toString();\n      form.controls[controlName].setValue(value);\n    });\n  }\n\n  /**\n   * 从表单赋值到模型\n   * @param form\n   * @param model\n   * @param schema\n   */\n  private form2model(form: Record, model: Record, schema: AnyControlOptions[]) {\n    schema.forEach(option => {\n      const controlName = option.name.toString();\n      let value = form[controlName];\n\n      if (option.type === 'embed') {\n        return this.form2model(value, model[option.name] ??= {}, option.schema);\n      } else if (option.mapper) {\n        value = option.mapper.output(value);\n      } else if (['date', 'time'].includes(option.type)) {\n        value = (value as Date)?.getTime();\n      } else if (option.type === 'range') {\n        // 如果是双字段模式，将数组分别赋值到两个字段中去\n        if (Array.isArray(option.name)) {\n          return option.name.forEach((property: string, index: number) => {\n            model[property] = value?.[index]?.getTime() ?? null;\n          });\n        }\n\n        value = value?.map((o: Date) => o?.getTime());\n      } else if (option.type === 'slider') {\n        // 如果是双字段模式，将数组并分别赋值到两个字段中去\n        if (Array.isArray(option.name)) {\n          return option.name.forEach((property: string, index: number) => {\n            model[property] = value?.[index] ?? null;\n          });\n        }\n      } else if (option.type === 'checkbox') {\n        value = (value as NzCheckBoxOptionInterface[])?.filter(o => o.checked).map(o => o.value);\n      }\n\n      model[option.name as string] = value;\n    });\n  }\n\n  private initializeForm(form: FormGroup, schema: AnyControlOptions[]) {\n    schema.forEach(option => {\n      let control!: AbstractControl;\n\n      if (option.type === 'embed') {\n        this.initializeForm(control = new FormGroup({}), option.schema);\n      } else {\n        control = new FormControl(\n          { value: null, disabled: option.disabled },\n          option.validator,\n          option.asyncValidator,\n        );\n\n        if (option.type === 'email') {\n          control.addValidators(Validators.email);\n        }\n\n        if (option.required) {\n          control.addValidators(Validators.required);\n        }\n      }\n\n      const controlName = option.name.toString();\n      form.setControl(controlName, control);\n    });\n  }\n\n  private clearFormControls(form: FormGroup) {\n    Object.keys(form.controls).forEach(name => {\n      form.removeControl(name);\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n\n  \n    \n    \n      取消\n      保存\n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n         -->\n        \n        \n        \n         -->\n      \n\n      \n        {{ options.label }}\n        \n          \n            \n              \n                \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n            \n\n            \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n                \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n              \n            \n\n            \n              \n                \n                  \n                    {{ option[options.options.label ?? 'label'] }}\n                  \n                  \n                    {{ option[options.options.label ?? 'label'] }}\n                  \n                \n              \n            \n\n            \n              \n              \n            \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./fluent-form.component.scss\n                \n                :host ::ng-deep nz-form-item {\n  margin-bottom: 7.5px;\n\n  > nz-form-label {\n    padding-bottom: 5px;\n  }\n}\n\nnz-switch,\nnz-input-number,\nnz-date-picker,\nnz-range-picker,\nnz-time-picker {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  取消      保存                                                                         -->                                 -->                    {{ options.label }}{{ option[options.options.label ?? \\'label\\'] }}                                                        {{ option[options.options.label ?? \\'label\\'] }}                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'FluentFormComponent', 'selector': 'fluent-form'}];\n    var DIRECTIVES = [{'name': 'FluentEventBinderDirective', 'selector': '[fluentEventBinder]'},{'name': 'FluentPropertyBinderDirective', 'selector': '[fluentPropertyBinder]'}];\n    var ACTUAL_COMPONENT = {'name': 'FluentFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FluentFormModule.html":{"url":"modules/FluentFormModule.html","title":"module - FluentFormModule","body":"\n                   \n\n\n\n\n    Modules\n    FluentFormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FluentFormModule\n\n\n\ncluster_FluentFormModule_declarations\n\n\n\ncluster_FluentFormModule_FluentFormComponent_providers\n\n\n\ncluster_FluentFormModule_exports\n\n\n\n\nFluentEventBinderDirective\n\nFluentEventBinderDirective\n\n\n\nFluentFormModule\n\nFluentFormModule\n\nFluentFormModule -->\n\nFluentEventBinderDirective->FluentFormModule\n\n\n\n\n\nFluentFormComponent\n\nFluentFormComponent\n\nFluentFormModule -->\n\nFluentFormComponent->FluentFormModule\n\n\n\n\n\nFluentPropertyBinderDirective\n\nFluentPropertyBinderDirective\n\nFluentFormModule -->\n\nFluentPropertyBinderDirective->FluentFormModule\n\n\n\n\n\nFluentFormComponent \n\nFluentFormComponent \n\nFluentFormComponent  -->\n\nFluentFormModule->FluentFormComponent \n\n\n\n FluentFormComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n FluentFormComponent), multi: true\n}->FluentFormComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}->FluentFormComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FluentEventBinderDirective\n                        \n                        \n                            FluentFormComponent\n                        \n                        \n                            FluentPropertyBinderDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FluentFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NzButtonModule } from 'ng-zorro-antd/button';\nimport { NzCascaderModule } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxModule } from 'ng-zorro-antd/checkbox';\nimport { NzDatePickerModule } from 'ng-zorro-antd/date-picker';\nimport { NzDividerModule } from 'ng-zorro-antd/divider';\nimport { NzFormModule } from 'ng-zorro-antd/form';\nimport { NzInputModule } from 'ng-zorro-antd/input';\nimport { NzInputNumberModule } from 'ng-zorro-antd/input-number';\nimport { NzRadioModule } from 'ng-zorro-antd/radio';\nimport { NzSelectModule } from 'ng-zorro-antd/select';\nimport { NzSliderModule } from 'ng-zorro-antd/slider';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { NzSwitchModule } from 'ng-zorro-antd/switch';\nimport { NzTimePickerModule } from 'ng-zorro-antd/time-picker';\nimport { FluentEventBinderDirective } from './directives/fluent-event-binder.directive';\nimport { FluentPropertyBinderDirective } from './directives/fluent-property-binder.directive';\nimport { FluentFormComponent } from './fluent-form.component';\n\n@NgModule({\n  declarations: [\n    FluentFormComponent,\n    FluentEventBinderDirective,\n    FluentPropertyBinderDirective\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NzSpinModule,\n    NzButtonModule,\n    NzInputModule,\n    NzInputNumberModule,\n    NzCascaderModule,\n    NzDatePickerModule,\n    NzFormModule,\n    NzCheckboxModule,\n    NzSwitchModule,\n    NzDividerModule,\n    NzSelectModule,\n    NzTimePickerModule,\n    NzSliderModule,\n    NzRadioModule\n  ],\n  exports: [\n    FluentFormComponent\n  ]\n})\nexport class FluentFormModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FluentPropertyBinderDirective.html":{"url":"directives/FluentPropertyBinderDirective.html","title":"directive - FluentPropertyBinderDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  FluentPropertyBinderDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/directives/fluent-property-binder.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [fluentPropertyBinder]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                fluentPropertyBinder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-fluent-form/src/lib/directives/fluent-property-binder.directive.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        fluentPropertyBinder\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-fluent-form/src/lib/directives/fluent-property-binder.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-fluent-form/src/lib/directives/fluent-property-binder.directive.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input, OnInit } from '@angular/core';\nimport { AnyControlOptions, EmbeddedFormOptions } from '../fluent-form.interface';\n\n@Directive({\n  selector: '[fluentPropertyBinder]'\n})\nexport class FluentPropertyBinderDirective> implements OnInit {\n  @Input() fluentPropertyBinder!: { host: H, options: O };\n\n  constructor() { }\n\n  ngOnInit() {\n    const { host, options } = this.fluentPropertyBinder;\n\n    options.property && Object.keys(options.property).forEach(property => {\n      (options.property as O['property'])![property as keyof O['property']];\n      host[property as keyof H] = (options.property as O['property'])![\n        property as keyof O['property']\n      ] as unknown as H[keyof H];\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InputControlOptions.html":{"url":"interfaces/InputControlOptions.html","title":"interface - InputControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InputControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            after\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            before\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            prefix\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            suffix\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        after\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        after:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The back label of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        before:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The pre-label of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         HTMLElementEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HTMLElementEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prefix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prefix:     string | TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The prefix of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        suffix\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        suffix:     string | TemplateRef\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | TemplateRef\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The suffix of the input box\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"text\" | \"email\" | \"password\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"text\" | \"email\" | \"password\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumberInputControlOptions.html":{"url":"interfaces/NumberInputControlOptions.html","title":"interface - NumberInputControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NumberInputControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            precision\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            precisionMode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Minimum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precision\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precision:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Decimal precision\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        precisionMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        precisionMode:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Decimal precision mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Step length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RadioControlOptions.html":{"url":"interfaces/RadioControlOptions.html","title":"interface - RadioControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RadioControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            style\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:     \"outline\" | \"solid\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"outline\" | \"solid\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Radio control style\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RangePickerControlOptions.html":{"url":"interfaces/RangePickerControlOptions.html","title":"interface - RangePickerControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RangePickerControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     [string, string]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [string, string]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RealFormControlOptions.html":{"url":"interfaces/RealFormControlOptions.html","title":"interface - RealFormControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RealFormControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            asyncValidator\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            errorTip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mapper\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            required\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            validator\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asyncValidator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        asyncValidator:     AsyncValidatorFn | AsyncValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AsyncValidatorFn | AsyncValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Async validators for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to disable control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorTip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorTip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Error message for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mapper\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mapper:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    I/O mapper for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Is it a required control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validator:     ValidatorFn | ValidatorFn[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidatorFn | ValidatorFn[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Validator for the control\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SelectControlOptions.html":{"url":"interfaces/SelectControlOptions.html","title":"interface - SelectControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SelectControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            limit\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            search\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Max selected\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Mode of select control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Support search\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SliderControlOptions.html":{"url":"interfaces/SliderControlOptions.html","title":"interface - SliderControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SliderControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            included\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            range\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        included\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        included:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Containment relationship\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Minimum value\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     never\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     never\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        range\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        range:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Range slider mode\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Step length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwitchControlOptions.html":{"url":"interfaces/SwitchControlOptions.html","title":"interface - SwitchControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwitchControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TextareaControlOptions.html":{"url":"interfaces/TextareaControlOptions.html","title":"interface - TextareaControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TextareaControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            autosize\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rows\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        autosize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosize:     boolean | literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean | literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether to adapt the content height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         HTMLElementEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HTMLElementEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:     Partial>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Partial>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rows\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rows:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of lines in the text field\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimePickerControlOptions.html":{"url":"interfaces/TimePickerControlOptions.html","title":"interface - TimePickerControlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimePickerControlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        RealFormControlOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            change\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clear\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            format\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            listener\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            property\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            step\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        change\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        change:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Control value change callback\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Show clean button\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Time display format\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listener\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listener:         ComponentEventListener\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentEventListener\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    event listeners\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field name for control\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Placeholder text\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        property\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        property:         ComponentInput\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ComponentInput\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Other properties that need to be bound\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        step\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        step:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Time step length\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, TemplateRef } from '@angular/core';\nimport { AsyncValidatorFn, ValidatorFn } from '@angular/forms';\nimport { Property } from '@ngify/types';\nimport { NzCascaderComponent, NzCascaderOption } from 'ng-zorro-antd/cascader';\nimport { NzCheckboxGroupComponent } from 'ng-zorro-antd/checkbox';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NzDatePickerComponent, NzRangePickerComponent } from 'ng-zorro-antd/date-picker';\nimport { NzInputNumberComponent } from 'ng-zorro-antd/input-number';\nimport { NzRadioGroupComponent } from 'ng-zorro-antd/radio';\nimport { NzSelectComponent } from 'ng-zorro-antd/select';\nimport { NzSliderComponent } from 'ng-zorro-antd/slider';\nimport { NzSwitchComponent } from 'ng-zorro-antd/switch';\nimport { NzTimePickerComponent } from 'ng-zorro-antd/time-picker';\n\nexport type AnyControlOptions =\n  EmbeddedFormOptions\n  | InputControlOptions\n  | TextareaControlOptions\n  | NumberInputControlOptions\n  | DatePickerControlOptions\n  | RangePickerControlOptions\n  | TimePickerControlOptions\n  | SwitchControlOptions\n  | SelectControlOptions\n  | CascaderControlOptions\n  | SliderControlOptions\n  | RadioControlOptions\n  | CheckboxControlOptions;\n\n/** HTML 元素的事件侦听器对象 */\nexport type HTMLElementEventListener = {\n  [K in keyof HTMLElementEventMap]?: (event: HTMLElementEventMap[K], options: O) => void\n};\n\n/** 组件的事件名 */\ntype ComponentEventName = Exclude ? K : never\n}[keyof C], undefined>;\n\n/** 组件的事件侦听器对象 */\nexport type ComponentEventListener = {\n  [K in ComponentEventName]?: (event: C[K] extends EventEmitter ? E : never, options: O) => void\n}\n\n/** 组件属性 */\ntype ComponentProperty = Omit, ComponentEventName>;\n/** NZ 组件的 Input 名字 */\ntype ComponentInputName = Extract, `nz${Capitalize}`>;\n/** NZ 组件的 Input Map */\ntype ComponentInput = Partial]: C[P] }>;\n\nexport interface BaseFormControlOptions {\n  /** Type of control */\n  type: string;\n  /** Span of the control in grid layout */\n  span: number;\n  /** Label for control */\n  label?: string;\n}\n\nexport interface RealFormControlOptions extends BaseFormControlOptions {\n  /** I/O mapper for control */\n  mapper?: {\n    /** An input mapper that maps from a model's value to a form control's value */\n    input: (value?: NzSafeAny) => NzSafeAny,\n    /** An output mapper that maps from a form control's value to a model's value */\n    output: (value?: NzSafeAny) => NzSafeAny,\n  };\n  /** Is it a required control */\n  required?: boolean;\n  /** Whether to disable control */\n  disabled?: boolean;\n  /** Error message for control */\n  errorTip?: string;\n  /** Validator for the control */\n  validator?: ValidatorFn | ValidatorFn[];\n  /** Async validators for control */\n  asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[];\n}\n\nexport interface EmbeddedFormOptions extends BaseFormControlOptions {\n  type: 'embed';\n  /** Field name for control */\n  name: string;\n  /** Schema for embedded form */\n  schema: AnyControlOptions[];\n}\n\nexport interface InputControlOptions extends RealFormControlOptions {\n  type: 'text' | 'email' | 'password';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The pre-label of the input box */\n  before?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The back label of the input box */\n  after?: {\n    icon?: string,\n    template?: string | TemplateRef\n  };\n  /** The prefix of the input box */\n  prefix?: string | TemplateRef;\n  /** The suffix of the input box */\n  suffix?: string | TemplateRef;\n  /** Control value change callback */\n  change?: (value: string, options: InputControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface TextareaControlOptions extends RealFormControlOptions {\n  type: 'textarea';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** The number of lines in the text field */\n  rows?: number;\n  /** Whether to adapt the content height */\n  autosize?: boolean | { minRows: number, maxRows: number };\n  /** Control value change callback */\n  change?: (value: string, options: TextareaControlOptions) => void;\n  /** event listeners */\n  listener?: HTMLElementEventListener;\n  /** Other properties that need to be bound */\n  property?: Partial>;\n}\n\nexport interface NumberInputControlOptions extends RealFormControlOptions {\n  type: 'number';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Decimal precision */\n  precision?: number;\n  /** Decimal precision mode */\n  precisionMode?: NzInputNumberComponent['nzPrecisionMode'];\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number, options: NumberInputControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\ninterface DateControlOptions {\n  /** Mode of date picker control */\n  mode?: NzDatePickerComponent['nzMode'];\n  /** Show clean button */\n  clear?: boolean;\n  /** Show time picker in date picker */\n  showTime?: boolean;\n  /** Date display format */\n  format?: string;\n  /** Inline mode */\n  inline?: boolean;\n}\n\nexport interface DatePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'date';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Control value change callback */\n  change?: (value: Date, options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RangePickerControlOptions extends RealFormControlOptions, DateControlOptions {\n  type: 'range';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: [string, string];\n  /** Control value change callback */\n  change?: (value: [Date, Date], options: DatePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface TimePickerControlOptions extends RealFormControlOptions {\n  type: 'time';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Time display format */\n  format?: string;\n  /** Time step length */\n  step?: {\n    hour?: number;\n    minute?: number;\n    second?: number;\n  };\n  /** Control value change callback */\n  change?: (value: Date, options: TimePickerControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SwitchControlOptions extends RealFormControlOptions {\n  type: 'switch';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: [string | TemplateRef, string | TemplateRef];\n  /** Control value change callback */\n  change?: (value: boolean, options: SwitchControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SelectControlOptions extends RealFormControlOptions {\n  type: 'select';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Mode of select control */\n  mode?: NzSelectComponent['nzMode'];\n  /** Max selected */\n  limit?: number;\n  /** Support search */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data: Record,\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny | NzSafeAny[], options: SelectControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CascaderControlOptions extends RealFormControlOptions {\n  type: 'cascader';\n  /** Field name for control */\n  name: string;\n  /** Placeholder text */\n  placeholder?: string;\n  /** Show clean button */\n  clear?: boolean;\n  /** Expand trigger for cascader control */\n  trigger?: NzCascaderComponent['nzExpandTrigger'];\n  /** Support search, cannot be used with `options.load` */\n  search?: boolean;\n  options: {\n    /** Options data array */\n    data?: NzCascaderOption[];\n    /** Load options data asynchronously */\n    load?: NzCascaderComponent['nzLoadData'];\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CascaderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface SliderControlOptions extends RealFormControlOptions {\n  type: 'slider';\n  /** Field name for control */\n  name: string | [string, string];\n  /** Placeholder text */\n  placeholder?: never;\n  /** Containment relationship */\n  included?: boolean;\n  /** Maximum value */\n  max?: number;\n  /** Minimum value */\n  min?: number;\n  /** Range slider mode */\n  range?: boolean;\n  /** Step length */\n  step?: number;\n  /** Control value change callback */\n  change?: (value: number | number[], options: SliderControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface RadioControlOptions extends RealFormControlOptions {\n  type: 'radio';\n  /** Field name for control */\n  name: string;\n  /** Radio control style */\n  style?: 'outline' | 'solid';\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny, options: RadioControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\nexport interface CheckboxControlOptions extends RealFormControlOptions {\n  type: 'checkbox';\n  /** Field name for control */\n  name: string;\n  options: {\n    /** Options data array */\n    data: Record[],\n    /** In the options object, the property name corresponding to the label */\n    label?: string;\n    /** In the options object, the property name corresponding to the value */\n    value?: string;\n  };\n  /** Control value change callback */\n  change?: (value: NzSafeAny[], options: CheckboxControlOptions) => void;\n  /** event listeners */\n  listener?: ComponentEventListener;\n  /** Other properties that need to be bound */\n  property?: ComponentInput;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/directives/fluent-event-binder.directive.ts\n            \n            directive\n            FluentEventBinderDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/directives/fluent-property-binder.directive.ts\n            \n            directive\n            FluentPropertyBinderDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.component.ts\n            \n            component\n            FluentFormComponent\n            \n                8 %\n                (2/25)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            cascader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            checkbox\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            date\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            datetime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            email\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            embed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            form\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            number\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            password\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            radio\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            range\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            select\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            slider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            switcher\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            text\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            textarea\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n            \n            variable\n            time\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            BaseFormControlOptions\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            CascaderControlOptions\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            CheckboxControlOptions\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            DateControlOptions\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            DatePickerControlOptions\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            EmbeddedFormOptions\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            InputControlOptions\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            NumberInputControlOptions\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            RadioControlOptions\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            RangePickerControlOptions\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            RealFormControlOptions\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            SelectControlOptions\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            SliderControlOptions\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            SwitchControlOptions\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            TextareaControlOptions\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n            \n            interface\n            TimePickerControlOptions\n            \n                80 %\n                (8/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.2.0\n        \n            @angular/common : ~13.2.0\n        \n            @angular/compiler : ~13.2.0\n        \n            @angular/core : ~13.2.0\n        \n            @angular/forms : ~13.2.0\n        \n            @angular/platform-browser : ~13.2.0\n        \n            @angular/platform-browser-dynamic : ~13.2.0\n        \n            @angular/router : ~13.2.0\n        \n            ng-zorro-antd : ^13.1.1\n        \n            rxjs : ~7.5.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-fluent-form\nBuilding dynamic form in Angular with Fluent API.\n\n\n\n\n\n\nFeatures\n\nSupport using Fluent API and JSON.\nType-safe form configuration.\nBuilt on top of Angular Reactive Forms.\nForm controls and grid layout based on ng-zorro-antd.\n\nPrerequisites\n\nAngular >= 13.0.0\nng-zorro-antd >= 13.0.0\n\nInstall\nnpm i ngx-fluent-formDocs\n\nFor the full API definition, please visit here.\nOnline examples, and sample code.\n\nUsage\nImport the FluentFormModule into your module:\nimport { FluentFormModule } from 'ngx-fluent-form';\n\n@NgModule({\n  imports: [\n    FluentFormModule\n  ]\n})\nexport class YourModule { }Build the form using the Fluent API:\nimport { date, form, number, text } from 'ngx-fluent-form';\n\n@Component({\n  template: ``\n})\nexport class Component {\n  schema = form(\n    text('text').label('label').placeholder('placeholder').span(6),\n    number('number').label('label').placeholder('placeholder').span(3).max(100),\n    date('date').label('label').placeholder('placeholder').span(6)\n  );\n\n  model = {\n    text: 'fluent-form',\n    number: 10,\n    date: Date.now()\n  };\n}You can use JSON to build the form:\nimport { AnyControlOptions } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema: AnyControlOptions[] = [\n    { type: 'text', name: 'text', label: 'label', span: 6 }\n  ];\n}You can also mix Fluent API and JSON:\nimport { AnyControlOptions, number } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema: AnyControlOptions[] = [\n    { type: 'text', name: 'text', label: 'label', span: 6 },\n    number('number').label('label').placeholder('placeholder').span(3).build(),\n  ];\n}For nested forms, you can use the embed control (supports infinite nesting):\nimport { date, form, number, text, embed, switcher } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    text('text').label('label').placeholder('placeholder').span(6),\n    number('number').label('label').placeholder('placeholder').span(3).max(100),\n\n    embed('detail').label('detail').span(24).schema(form(\n      date('date').label('label').placeholder('placeholder').span(6),\n      switcher('switch').label('label').span(2),\n    ))\n  );\n\n  model = {\n    text: 'fluent-form',\n    number: 10,\n    detail: {\n      date: Date.now(),\n      switch: true\n    }\n  };\n}For values that require bidirectional mapping, the mapper option can be used. For example, the date control expects and will output a Date object, and we expect a date string from the date control output:\nimport { date, form } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    date('date').label('label').placeholder('placeholder').span(6).mapper({\n      input: (o: string) => new Date(o),\n      output: (o: Date) => [o.getFullYear(), o.getMonth() + 1, o.getDate()].join('-')\n    })\n  );\n\n  model = {\n    date: '2022-2-22'\n  };\n}For range selection controls, such as the range control, it will output an array of two elements, and we expect to map the two elements of the array to two properties:\nimport { form, range } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    range(['start', 'end']).label('label').span(6),\n  );\n\n  model = {\n    start: null,\n    end: null\n  };\n}For binding additional properties or event listeners, the property and listener options can be used：\nimport { form, time } from 'ngx-fluent-form';\n\n@Component(...)\nexport class Component {\n  schema = form(\n    time('time').label('label').span(6).property({\n      nzNowText: 'Now'\n    }).listener({\n      nzOpenChange: (event, options) => console.log(event, options)\n    }),\n  );\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2022 HyperLifelll9\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        FluentFormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FluentFormModule\n\n\n\ncluster_FluentFormModule_declarations\n\n\n\ncluster_FluentFormModule_FluentFormComponent_providers\n\n\n\ncluster_FluentFormModule_exports\n\n\n\n\nFluentEventBinderDirective\n\nFluentEventBinderDirective\n\n\n\nFluentFormModule\n\nFluentFormModule\n\nFluentFormModule -->\n\nFluentEventBinderDirective->FluentFormModule\n\n\n\n\n\nFluentFormComponent\n\nFluentFormComponent\n\nFluentFormModule -->\n\nFluentFormComponent->FluentFormModule\n\n\n\n\n\nFluentPropertyBinderDirective\n\nFluentPropertyBinderDirective\n\nFluentFormModule -->\n\nFluentPropertyBinderDirective->FluentFormModule\n\n\n\n\n\nFluentFormComponent \n\nFluentFormComponent \n\nFluentFormComponent  -->\n\nFluentFormModule->FluentFormComponent \n\n\n\n FluentFormComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}\n\n FluentFormComponent), multi: true\n}->FluentFormComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => FluentFormComponent), multi: true\n}->FluentFormComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyControlOptions   (projects/.../fluent-form.interface.ts)\n                        \n                        \n                            Builder   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            ComponentEventListener   (projects/.../fluent-form.interface.ts)\n                        \n                        \n                            ComponentEventName   (projects/.../fluent-form.interface.ts)\n                        \n                        \n                            ComponentInput   (projects/.../fluent-form.interface.ts)\n                        \n                        \n                            ComponentInputName   (projects/.../fluent-form.interface.ts)\n                        \n                        \n                            ComponentProperty   (projects/.../fluent-form.interface.ts)\n                        \n                        \n                            HTMLElementEventListener   (projects/.../fluent-form.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-fluent-form/src/lib/fluent-form.interface.ts\n    \n    \n        \n            \n                \n                    \n                    AnyControlOptions\n                \n            \n            \n                \n                        EmbeddedFormOptions | InputControlOptions | TextareaControlOptions | NumberInputControlOptions | DatePickerControlOptions | RangePickerControlOptions | TimePickerControlOptions | SwitchControlOptions | SelectControlOptions | CascaderControlOptions | SliderControlOptions | RadioControlOptions | CheckboxControlOptions\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ComponentEventListener\n                \n            \n            \n                \n                    组件的事件侦听器对象\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ComponentEventName\n                \n            \n            \n                \n                    组件的事件名\n\n                \n            \n            \n                \n                        Exclude\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ComponentInput\n                \n            \n            \n                \n                    NZ 组件的 Input Map\n\n                \n            \n            \n                \n                        Partial<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ComponentInputName\n                \n            \n            \n                \n                    NZ 组件的 Input 名字\n\n                \n            \n            \n                \n                            Extract | template literal type>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ComponentProperty\n                \n            \n            \n                \n                    组件属性\n\n                \n            \n            \n                \n                            Omit | ComponentEventName>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HTMLElementEventListener\n                \n            \n            \n                \n                    HTML 元素的事件侦听器对象\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n    \n    \n        \n            \n                \n                    \n                    Builder\n                \n            \n            \n                \n                    T 原型，B 已选，U 未选\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cascader   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            checkbox   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            date   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            datetime   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            email   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            embed   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            form   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            number   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            password   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            radio   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            range   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            select   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            slider   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            switcher   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            text   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            textarea   (projects/.../fluent-form.control.ts)\n                        \n                        \n                            time   (projects/.../fluent-form.control.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-fluent-form/src/lib/fluent-form.control.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cascader\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('cascader').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkbox\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('checkbox').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('date').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        datetime\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => date(name).format('yyyy-MM-dd HH:mm:ss').showTime(true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('email').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        embed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('embed').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...controls: Builder[]) => (\n  controls.reduce((form, control) => {\n    form.push(control.build());\n    return form;\n  }, [] as AnyControlOptions[])\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        number\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('number').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('password').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        radio\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('radio').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        range\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string | [string, string]) => builder().type('range').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        select\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('select').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slider\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string | [string, string]) => builder().type('slider').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switcher\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('switch').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        text\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('text').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        textarea\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('textarea').name(name)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        time\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string) => builder().type('time').name(name)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
